%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 11 0 R /F5 18 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
5 0 obj
<< /A << /S /URI /Type /Action /URI (https://de.wikipedia.org/wiki/ReStructuredText) >> /Border [ 0 0 0 ] /Rect [ 207.6428 529.7736 285.6488 541.7736 ] /Subtype /Link /Type /Annot >>
endobj
6 0 obj
<< /A << /S /URI /Type /Action /URI (https://github.com/hsdenx/tbot) >> /Border [ 0 0 0 ] /Rect [ 344.4929 517.7736 363.9529 529.7736 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /Annots [ 5 0 R 6 0 R ] /Contents 102 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
8 0 obj
<< /Contents 103 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
9 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/U-Boot/) >> /Border [ 0 0 0 ] /Rect [ 167.7529 617.7736 308.9129 629.7736 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /A << /S /URI /Type /Action /URI (http://git.denx.de/) >> /Border [ 0 0 0 ] /Rect [ 239.8729 581.7736 316.5929 593.7736 ] /Subtype /Link /Type /Annot >>
endobj
11 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font >>
endobj
12 0 obj
<< /A << /S /URI /Type /Action /URI (ftp://ftp.denx.de/pub/u-boot/) >> /Border [ 0 0 0 ] /Rect [ 143.2729 450.3736 265.5829 462.3736 ] /Subtype /Link /Type /Annot >>
endobj
13 0 obj
<< /Annots [ 9 0 R 10 0 R 12 0 R ] /Contents 104 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
14 0 obj
<< /Contents 105 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
15 0 obj
<< /Contents 106 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
16 0 obj
<< /Contents 107 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
17 0 obj
<< /Contents 108 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
18 0 obj
<< /BaseFont /ZapfDingbats /Encoding /ZapfDingbatsEncoding /Name /F5 /Subtype /Type1 /Type /Font >>
endobj
19 0 obj
<< /Contents 109 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
20 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/DULG/ELDK) >> /Border [ 0 0 0 ] /Rect [ 79.37291 657.7736 105.4929 669.7736 ] /Subtype /Link /Type /Annot >>
endobj
21 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/DULG/ELDK) >> /Border [ 0 0 0 ] /Rect [ 366.1529 657.7736 395.0529 669.7736 ] /Subtype /Link /Type /Annot >>
endobj
22 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/DULG/ELDK) >> /Border [ 0 0 0 ] /Rect [ 156.3017 639.7736 186.5295 651.7736 ] /Subtype /Link /Type /Annot >>
endobj
23 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.ubuntu.com/) >> /Border [ 0 0 0 ] /Rect [ 373.2365 573.1736 409.2459 585.1736 ] /Subtype /Link /Type /Annot >>
endobj
24 0 obj
<< /A << /S /URI /Type /Action /URI (http://fedoraproject.org/) >> /Border [ 0 0 0 ] /Rect [ 73.81291 506.5736 108.2729 518.5736 ] /Subtype /Link /Type /Annot >>
endobj
25 0 obj
<< /A << /S /URI /Type /Action /URI (http://openembedded.org/wiki/Main_Page) >> /Border [ 0 0 0 ] /Rect [ 194.4595 451.9736 270.4668 463.9736 ] /Subtype /Link /Type /Annot >>
endobj
26 0 obj
<< /A << /S /URI /Type /Action /URI (https://www.yoctoproject.org/) >> /Border [ 0 0 0 ] /Rect [ 282.5441 451.9736 342.4215 463.9736 ] /Subtype /Link /Type /Annot >>
endobj
27 0 obj
<< /Annots [ 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 26 0 R ] /Contents 110 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
28 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 128 /Length 2726 /SMask 29 0 R 
  /Subtype /Image /Type /XObject /Width 128 >>
stream
Gb"/gqbLGZ)9;W(?phFM!HZ?l0\AX,/d;u,WReIWo>?kOg"NH@du16.S#WJef;k4:;Ut+XF`"U%C+!RjZR.LPQRTAR3^D++82.bc)\^$>`Y_(mk8XSH#kiO\T5u&\hQK+0c7sV%n,%CU!@Npj6:4+-6UO4.6UO4.PLR-mZ[<_ENA;mmbGQQr/Wo,C&VuP4o'$F5cMa5D>lMpN4/Qj#jO4\HR/:B)lj1*<U]1)83h^qeFZKS1"$RV&`.YiH]63s\I8aiR@(/mpXH/XP`9Nuj>M.c\+`YW](]egSPgAL:+$\C*8F97RLfkfO8_cN]JpiZD$mVAls)\B`A<$+[apW"7IuIM<h>I1:7hAVM=C_8\IAW6c&G#&kaKmcS'?7cqqd_,e_;s&WE+a#U`qgL7&NYN"M917o:qC\U_Z,>Fs"AZUgqhof$2'o])#7\Frc`>GA^/)eh$Z`6rlF,*hKKJ8#>.Nf^clNhAo4?27,@DOj`^6(\=[O_(dTnM=d(I(1AUpqjU9o#dIDWecacf4No7aXr](6&9'2c0R.'J*i/*KPOGmZul9?gc<X:(eNtpI@=o;W-O=Z39m\C,^I),]4B"k=("Rl51KPP%h*^@I[7>.i++7$GgeO>)ePpW4_D\QWP*]`<P=8PVrjT>n2[A8j`ArhK4:I`,B]@Y_-b%'i".q:Y+$b7Hh75&_)FNelN&e`[QfHq.BPFms:=^qCbWBafF*C5pkhUid2T7F2f8aING"nNpF*6M[d&2eF`=T,EAM]?"mi5R)Er!*F9=e+l3D+2*jc5S;-T4eQ045/Ek`gGAu[N\UM@lG(<nPfmiJ,@X%Gd];<`!GArml]InC2YK9rcehD^LL<(HPld&iI&(B[_847qp1_kh.7,*+T]L':VcuZ'qp,toBNjaVst$NrQ!%HYNoe]*$N/o>$W<k@=&V4$-EKXD^q:8Q@RYt'FF2]D2\E>mXOZ<C-qs'5?:Y]i<^b\+1V&BV6d:`KR7>A-+I#!]g`PemLHIV8qd#T*d"csOYHfrr<[DO)qu6K#n6DJTCMs#IM2JM[^LmrAN]<=S.6cOj>6d\@,X=]%]u%\)6J)H;DA\DZH]ZQ-(5;CI'@ijB%LcXZ*q+;oR$Ae'\ct]iDDeskq03K[W;5RFDC`+I-uo01&_<1$[M@EGI<^Ss-&GTcFjeD@[uCY4off7jbUnd,D_6M(PhhB2ap6PqWF'-TgJ@G9f&oRdBUAebPTlC/n5C$i`uUnGtQ?Ghu7r0&>R9()FL1"5lPUrf?^h27*"h@V%EW)BEThQ"Y7r&!,U!5g0.[Sj8A+k+M/.!@!a1,,CcXg+D+r^iUlU8gHNF\Uqd7<s$G]>?'S-ZM9ank98"gGD3lK!ap4GdW3C"n;6Vl90:XO*ZidbsL_3fS0RNX]FT9h7btD,]$XEkhoZgSWaqsp4Xu#1jk2n(Z1l]3MTl5R2CstIVAPd@A^t`S!*<*S#r^"A9^gXKrD\)/@E9=p"_,'hSR#]^T:a=ZkqaHVX/:>._gsfkkN;8eIELQZdB`q7%*8D?S:H(1$nS`hI/m9-/lPo@)k)"7lO07DY@j=);Og)N=8@1-kE,>7lq;V5Ep#f,ZX3<8L#h\"g0;a6k&T%:[O3(nS8FiYt)J8tH.WV/?Oq6>.<=-DAG%@nP_0'p^pm!VW^ZgCAWJ6/lSbTofjjkSS_N@'EMrNXae_Y;RqI01H[JJG\\Z[*K&u`kks,6`ddA+i5[Ftc/_t[!'\pM!sV3:WQQU*eJ^AcpX\''a\eSV^_R=\Uj8$0M);Am*2Y06WCXd2Bq_(rVCek#m4Dr0-gb+Z_.[hs"b^&-JhNrcB2ZA9`-hV8U!,t%+m[s8XZ'S#kHrO6)r0`Fi#e:.j<Y9LFga$9D<6b)g"[U*PQJGE[Bh#Ee79B`KG(r>dY0(^r;!RAC#Tm`,1R3Oq!&S_HlrOWmN-rFD)$0<9-F=Db@r\n_D$8MJTp\!^BT.#Bn>uZ:,Mu]/92AX%WFM+m)HEtEYo.'&^(!b^'\\Ba^DmbS3PeV;pcgn,oankjhW3`$Ukde,0]ciF]5juHnIS\g"B?asm>pN*.Q$Y.HUA*_a"MVTdo_r'>of8lsX.mZG@6S#VmDEkS6!ne]a9Pt"P&\VT1&'iToX9U;JFT7*R#Y0AeCKdj5(3dND)c5PhlFqlW)jW.T57K"(J\oPk_6LNF<tR)8a7D3drR)G]lW!.]mWfN_V>#rc+0fMgf>mr(fMosHMl(IJ5UF`/D3UKa,k.SOq[[NC9+uOr6>fs,ojaus5_%,O;^p]]1)2p^gf.j>WI,h*T<<&^b6R^]:TiUC8t\Fj,nn:%>noL5P*:WmYl^,"Ng#fF]CKnEf$s1qF43(pGFh_bek1*%e#Fk/t9J-h_kuE?A!q$T<*;0;KGY-k\DKU)S*SnHAET[.'"@p_\J_/55&3Kj]hLkJ_r@@OqdR"/7+[304[k+RQp`B5(/tAme.4])Qld34Wamh^5h),%f`X.'OXK[RCOS#S^3lgQS\G_*m=]"_J?Yj^EeMWd2S71U@Pd4?^JuCOb3'?(3g9ics+IP!Y9IB9Z%P+T?>1pJOc?o@K/k1'n$k=GO)2T1mW5dMq>;&qk&H@aLCnU_%b7cA0@Q$IOWIq,B<?Jd*#rBT\\$@R6E9lq?B,M_^B3s8f7]/#2u5'q>u'C&SmF1Sd=LjMGSh0OLumpoF:C(1jfE?0a[k-0RB.G,0KpPe'QIgd*U.dd*U.8COQ9"oT8e~>endstream
endobj
29 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 128 /Length 1142 
  /Subtype /Image /Type /XObject /Width 128 >>
stream
Gb"0UCIHue!6=VN]&-McgQkgG8P3Mb;V=YTM:f1+6oL0`<74r$fqe879o29F&W+FLdS2VL-!=,;d7''Vh(Rshf$_."bQ%E$ci:u0p\!M:k3mfFn*qB_b*FV`[NlR>0JUrdW#5P,L[0%8(#n87ERXFc7<muAgpZ:FKO9SJ.M^kDp%Q1,JS21p&*dWL`u?)r#1ej.H4l:-<3u8h@FAAW]\A1?^Z!2\Y;bQoHA6h2M7J*Kb0L#qc3)sln]@)A+INg[2f%*=Z")f1>NUKG-G7rj21NZ)L#6F##FZM!cd/`jkKiAhK@Y<UO?0#U`<2NmH,i?kJ'jC]?cL=mAQ3q>*M9P,UZm9gj+4BJq3W[]s!ibp5Jk_K,LlKn+ZtiZM0E);k-)ACnZ.B65W';Ul(LrRn-KQ=>::#(;rA=J_L5nqEF(dSS-PpIc_1Cp4A\;1GMa+tDn;/*)oV9^-_c"@WEB0WN25>YQ3[6lnu:Vo+I*d^5:=FBZR=kLQbijn#k?c`demBh14G-<*bZ_67p\aZ0-X!_6W/2;L]F%nSHlH2o1hsVMY2E[an<j=n3FNXhLAn(^[Ei%DjSKHmBZLh"2DXB+]aUf.[LB0AajX!o>#.`]^$IBJ'Cun?V>tUC*iGe7qDOm?tk'#)'8"(`$^EZ4PUef-1H)m8FaJk#q+2UjER=o2".\<dbjU,lSk!fJOYcLp_d67/6n_&:R27^7Ib)fGp#famk@PoT6Ck7Q]UB]'#D6,*Y!VF8#Y<;K*PQ`nkk`qr6$Ks^6T6>BEdqZ[!3]t!:R9gcX.GALFVNX5Qre_E'Vl:#iP;9C%=M:%j*0Gn8N#rj5ebNFEq8ao40nC2@nkgn?2*LrH4,\<(EPclE'P"a"7/K&8Q_J$QeN>_C#p74PUg</Fmu5Cj9@AiZ'FW`</OEGgC5MrjJ`8s-Xl<HnjY+33Lenml\J:+(31m""&C">9:k1`&fNSp(ndpTi0H(;#5_:jh4\^5+V/Uho;5mg@"`L8qVo2bNOHTYS'&PI*:\$_ZMnX]^q"YrlWLc(93VYJZ<KL8C.;r>3UZ=WXe-8TL5PaqRpOq\]3t[5MP`n.dMS_;:_pB=4U/KO"&23WDsjOa'JUW21Jt`.F$S7=m!tBRo@O\L"inElTaYF+WG1c~>endstream
endobj
30 0 obj
<< /Contents 111 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
31 0 obj
<< /Contents 112 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
32 0 obj
<< /Contents 113 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
33 0 obj
<< /Contents 114 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
34 0 obj
<< /Contents 115 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
35 0 obj
<< /Contents 116 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
36 0 obj
<< /Contents 117 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
37 0 obj
<< /Contents 118 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
38 0 obj
<< /Contents 119 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
39 0 obj
<< /Contents 120 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
40 0 obj
<< /Contents 121 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
41 0 obj
<< /Contents 122 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
42 0 obj
<< /Contents 123 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
43 0 obj
<< /Contents 124 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
44 0 obj
<< /Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
45 0 obj
<< /Contents 126 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
46 0 obj
<< /Contents 127 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
47 0 obj
<< /Contents 128 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
48 0 obj
<< /Contents 129 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
49 0 obj
<< /Contents 130 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
50 0 obj
<< /Contents 131 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
51 0 obj
<< /Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
52 0 obj
<< /Contents 133 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
53 0 obj
<< /Contents 134 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
54 0 obj
<< /Contents 135 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 101 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
55 0 obj
<< /Outlines 57 0 R /PageLabels 136 0 R /PageMode /UseNone /Pages 101 0 R /Type /Catalog >>
endobj
56 0 obj
<< /Author () /CreationDate (D:20170822104357-01'00') /Creator (\(unspecified\)) /Keywords () /Producer (ReportLab PDF Library - www.reportlab.com) /Subject (\(unspecified\)) 
  /Title (U-Boot beagleboneblack Documentation) >>
endobj
57 0 obj
<< /Count 52 /First 58 0 R /Last 62 0 R /Type /Outlines >>
endobj
58 0 obj
<< /Count 3 /Dest [ 7 0 R /XYZ 62.69291 653.0236 0 ] /First 59 0 R /Last 61 0 R /Next 62 0 R /Parent 57 0 R 
  /Title (Abstract) >>
endobj
59 0 obj
<< /Dest [ 7 0 R /XYZ 62.69291 583.0236 0 ] /Next 60 0 R /Parent 58 0 R /Title (About this Document) >>
endobj
60 0 obj
<< /Dest [ 7 0 R /XYZ 62.69291 463.0236 0 ] /Next 61 0 R /Parent 58 0 R /Prev 59 0 R /Title (Introduction) >>
endobj
61 0 obj
<< /Dest [ 8 0 R /XYZ 62.69291 765.0236 0 ] /Parent 58 0 R /Prev 60 0 R /Title (Disclaimer) >>
endobj
62 0 obj
<< /Count 38 /Dest [ 13 0 R /XYZ 62.69291 765.0236 0 ] /First 63 0 R /Last 100 0 R /Parent 57 0 R /Prev 58 0 R 
  /Title (U-Boot) >>
endobj
63 0 obj
<< /Dest [ 13 0 R /XYZ 62.69291 695.0236 0 ] /Next 64 0 R /Parent 62 0 R /Title (Current Versions) >>
endobj
64 0 obj
<< /Count 2 /Dest [ 14 0 R /XYZ 62.69291 765.0236 0 ] /First 65 0 R /Last 66 0 R /Next 67 0 R /Parent 62 0 R 
  /Prev 63 0 R /Title (Get U-Boot code for the beagleboneblack) >>
endobj
65 0 obj
<< /Dest [ 14 0 R /XYZ 62.69291 723.0236 0 ] /Next 66 0 R /Parent 64 0 R /Title (define some PATH variables) >>
endobj
66 0 obj
<< /Dest [ 15 0 R /XYZ 62.69291 765.0236 0 ] /Parent 64 0 R /Prev 65 0 R /Title (clone the U-Boot code) >>
endobj
67 0 obj
<< /Dest [ 16 0 R /XYZ 62.69291 765.0236 0 ] /Next 68 0 R /Parent 62 0 R /Prev 64 0 R /Title (setup toolchain) >>
endobj
68 0 obj
<< /Dest [ 17 0 R /XYZ 62.69291 765.0236 0 ] /Next 69 0 R /Parent 62 0 R /Prev 67 0 R /Title (compile U-Boot for the beagleboneblack) >>
endobj
69 0 obj
<< /Count 2 /Dest [ 19 0 R /XYZ 62.69291 765.0236 0 ] /First 70 0 R /Last 71 0 R /Next 72 0 R /Parent 62 0 R 
  /Prev 68 0 R /Title (U-Boot installation) >>
endobj
70 0 obj
<< /Dest [ 19 0 R /XYZ 62.69291 723.0236 0 ] /Next 71 0 R /Parent 69 0 R /Title (install U-Boot) >>
endobj
71 0 obj
<< /Dest [ 19 0 R /XYZ 62.69291 435.4236 0 ] /Parent 69 0 R /Prev 70 0 R /Title (install SPL) >>
endobj
72 0 obj
<< /Dest [ 27 0 R /XYZ 62.69291 765.0236 0 ] /Next 73 0 R /Parent 62 0 R /Prev 69 0 R /Title (Tool Installation) >>
endobj
73 0 obj
<< /Count 26 /Dest [ 30 0 R /XYZ 62.69291 765.0236 0 ] /First 74 0 R /Last 93 0 R /Next 100 0 R /Parent 62 0 R 
  /Prev 72 0 R /Title (U-Boot Command Line Interface) >>
endobj
74 0 obj
<< /Count 4 /Dest [ 31 0 R /XYZ 62.69291 765.0236 0 ] /First 75 0 R /Last 78 0 R /Next 79 0 R /Parent 73 0 R 
  /Title (Information Commands) >>
endobj
75 0 obj
<< /Dest [ 31 0 R /XYZ 62.69291 729.0236 0 ] /Next 76 0 R /Parent 74 0 R /Title (bdinfo - print Board Info structure) >>
endobj
76 0 obj
<< /Dest [ 32 0 R /XYZ 62.69291 765.0236 0 ] /Next 77 0 R /Parent 74 0 R /Prev 75 0 R /Title (coninfo - print console devices and informations) >>
endobj
77 0 obj
<< /Dest [ 33 0 R /XYZ 62.69291 765.0236 0 ] /Next 78 0 R /Parent 74 0 R /Prev 76 0 R /Title (flinfo - print FLASH memory information) >>
endobj
78 0 obj
<< /Dest [ 34 0 R /XYZ 62.69291 765.0236 0 ] /Parent 74 0 R /Prev 77 0 R /Title (help - print online help) >>
endobj
79 0 obj
<< /Count 9 /Dest [ 35 0 R /XYZ 62.69291 765.0236 0 ] /First 80 0 R /Last 88 0 R /Next 89 0 R /Parent 73 0 R 
  /Prev 74 0 R /Title (Memory Commands) >>
endobj
80 0 obj
<< /Dest [ 35 0 R /XYZ 62.69291 729.0236 0 ] /Next 81 0 R /Parent 79 0 R /Title (base - print or set address offset) >>
endobj
81 0 obj
<< /Dest [ 35 0 R /XYZ 62.69291 500.2236 0 ] /Next 82 0 R /Parent 79 0 R /Prev 80 0 R /Title (crc32 - checksum calculation) >>
endobj
82 0 obj
<< /Dest [ 36 0 R /XYZ 62.69291 765.0236 0 ] /Next 83 0 R /Parent 79 0 R /Prev 81 0 R /Title (cmp - memory compare) >>
endobj
83 0 obj
<< /Dest [ 37 0 R /XYZ 62.69291 765.0236 0 ] /Next 84 0 R /Parent 79 0 R /Prev 82 0 R /Title (cp - memory copy) >>
endobj
84 0 obj
<< /Dest [ 38 0 R /XYZ 62.69291 765.0236 0 ] /Next 85 0 R /Parent 79 0 R /Prev 83 0 R /Title (md - memory display) >>
endobj
85 0 obj
<< /Dest [ 40 0 R /XYZ 62.69291 765.0236 0 ] /Next 86 0 R /Parent 79 0 R /Prev 84 0 R /Title (mm - memory modify \(auto-incrementing\)) >>
endobj
86 0 obj
<< /Dest [ 41 0 R /XYZ 62.69291 765.0236 0 ] /Next 87 0 R /Parent 79 0 R /Prev 85 0 R /Title (mw - memory write \(fill\)) >>
endobj
87 0 obj
<< /Dest [ 42 0 R /XYZ 62.69291 765.0236 0 ] /Next 88 0 R /Parent 79 0 R /Prev 86 0 R /Title (nm - memory modify \(constant address\)) >>
endobj
88 0 obj
<< /Dest [ 43 0 R /XYZ 62.69291 765.0236 0 ] /Parent 79 0 R /Prev 87 0 R /Title (loop - infinite loop on address range) >>
endobj
89 0 obj
<< /Count 3 /Dest [ 44 0 R /XYZ 62.69291 765.0236 0 ] /First 90 0 R /Last 92 0 R /Next 93 0 R /Parent 73 0 R 
  /Prev 79 0 R /Title (Execution Control Commands) >>
endobj
90 0 obj
<< /Dest [ 44 0 R /XYZ 62.69291 729.0236 0 ] /Next 91 0 R /Parent 89 0 R /Title (source - run script from memory) >>
endobj
91 0 obj
<< /Dest [ 46 0 R /XYZ 62.69291 765.0236 0 ] /Next 92 0 R /Parent 89 0 R /Prev 90 0 R /Title (bootm - boot application image from memory) >>
endobj
92 0 obj
<< /Dest [ 48 0 R /XYZ 62.69291 765.0236 0 ] /Parent 89 0 R /Prev 91 0 R /Title (go - start application at address 'addr') >>
endobj
93 0 obj
<< /Count 6 /Dest [ 49 0 R /XYZ 62.69291 765.0236 0 ] /First 94 0 R /Last 99 0 R /Parent 73 0 R /Prev 89 0 R 
  /Title (Download Commands) >>
endobj
94 0 obj
<< /Dest [ 49 0 R /XYZ 62.69291 729.0236 0 ] /Next 95 0 R /Parent 93 0 R /Title (bootp - boot image via network using BOOTP/TFTP protocol) >>
endobj
95 0 obj
<< /Dest [ 49 0 R /XYZ 62.69291 613.4236 0 ] /Next 96 0 R /Parent 93 0 R /Prev 94 0 R /Title (dhcp - invoke DHCP client to obtain IP/boot params) >>
endobj
96 0 obj
<< /Dest [ 50 0 R /XYZ 62.69291 765.0236 0 ] /Next 97 0 R /Parent 93 0 R /Prev 95 0 R /Title (loadb - load binary file over serial line \(kermit mode\)) >>
endobj
97 0 obj
<< /Dest [ 53 0 R /XYZ 62.69291 765.0236 0 ] /Next 98 0 R /Parent 93 0 R /Prev 96 0 R /Title (loads - load S-Record file over serial line) >>
endobj
98 0 obj
<< /Dest [ 53 0 R /XYZ 62.69291 641.0236 0 ] /Next 99 0 R /Parent 93 0 R /Prev 97 0 R /Title (rarpboot- boot image via network using RARP/TFTP protocol) >>
endobj
99 0 obj
<< /Dest [ 53 0 R /XYZ 62.69291 542.2236 0 ] /Parent 93 0 R /Prev 98 0 R /Title (tftpboot- boot image via network using TFTP protocol) >>
endobj
100 0 obj
<< /Dest [ 53 0 R /XYZ 62.69291 426.6236 0 ] /Parent 62 0 R /Prev 73 0 R /Title (links) >>
endobj
101 0 obj
<< /Count 34 /Kids [ 7 0 R 8 0 R 13 0 R 14 0 R 15 0 R 16 0 R 17 0 R 19 0 R 27 0 R 30 0 R 
  31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 
  41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 
  51 0 R 52 0 R 53 0 R 54 0 R ] /Type /Pages >>
endobj
102 0 obj
<< /Length 4373 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 693.0236 cm
q
BT 1 0 0 1 0 42 Tm 59.08488 0 Td 36 TL /F2 30 Tf 0 0 0 rg (U-Boot beagleboneblack) Tj T* 66.69 0 Td (Documentation) Tj T* -125.7749 0 Td ET
Q
Q
q
1 0 0 1 62.69291 623.0236 cm
q
BT 1 0 0 1 0 5 Tm 184.2449 0 Td 30 TL /F2 25 Tf 0 0 0 rg (Abstract) Tj T* -184.2449 0 Td ET
Q
Q
q
1 0 0 1 62.69291 559.0236 cm
q
BT 1 0 0 1 0 4 Tm 133.8349 0 Td 24 TL /F3 20 Tf 0 0 0 rg (About this Document) Tj T* -133.8349 0 Td ET
Q
Q
q
1 0 0 1 62.69291 517.0236 cm
q
BT 1 0 0 1 0 14 Tm .755984 Tw 12 TL /F1 10 Tf 0 0 0 rg (The documentation is written in ) Tj 0 0 .501961 rg (reStructuredText ) Tj 0 0 0 rg (and converted into a pdf document. Some parts of this) Tj T* 0 Tw (document are created automatically out of the log files from the ) Tj 0 0 .501961 rg (tbot ) Tj 0 0 0 rg (build process.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 499.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This document is generated for the beagleboneblack with U-Boot version) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 481.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (U-Boot 2017.09-rc2-00151-g2d7cb5b \(Aug 21 2017 - 10:10:54 +0200\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 439.0236 cm
q
BT 1 0 0 1 0 4 Tm 176.6149 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Introduction) Tj T* -176.6149 0 Td ET
Q
Q
q
1 0 0 1 62.69291 397.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .831318 Tw (This document describes how to use the firmware U-Boot and the operating system Linux in Embedded) Tj T* 0 Tw (Power Architecture\256, ARM and MIPS Systems.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 355.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .382846 Tw (There are many steps along the way, and it is nearly impossible to cover them all in depth, but we will try) Tj T* 0 Tw 1.054651 Tw (to provide all necessary information to get an embedded system running from scratch. This includes all) Tj T* 0 Tw (the tools you will probably need to configure, build and run U-Boot and Linux.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 313.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.012126 Tw (First, we describe how to install the Cross Development Tools Embedded Linux Development Kit which) Tj T* 0 Tw .427488 Tw (you probably need - at least when you use a standard x86 PC running Linux or a Sun Solaris 2.6 system) Tj T* 0 Tw (as build environment.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 283.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .093488 Tw (Then we describe what needs to be done to connect to the serial console port of your target: you will have) Tj T* 0 Tw (to configure a terminal emulation program like cu or kermit.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 253.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.494431 Tw (In most cases you will want to load images into your target using ethernet; for this purpose you need) Tj T* 0 Tw (TFTP and DHCP / BOOTP servers. A short description of their configuration is given.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 223.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .30528 Tw (A description follows of what needs to be done to configure and build the U-Boot for the beagleboneblack) Tj T* 0 Tw (board, and how to install it and get it working on that board.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 169.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .60311 Tw (The configuration, building and installing of Linux in an embedded configuration is the next step. We use) Tj T* 0 Tw .089984 Tw (SELF, our Simple Embedded Linux Framework, to demonstrate how to set up both a development system) Tj T* 0 Tw 2.319983 Tw (\(with the root filesystem mounted over NFS\) and an embedded target configuration \(running from a) Tj T* 0 Tw (ramdisk image based on busybox\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 139.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.678876 Tw (This document does not describe what needs to be done to port U-Boot or Linux to a new hardware) Tj T* 0 Tw (platform. Instead, it is silently assumed that your board is already supported by U-Boot and Linux.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 139.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 1 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
103 0 obj
<< /Length 1089 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 184.3649 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Disclaimer) Tj T* -184.3649 0 Td ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL 2.13561 Tw (Use the information in this document at your own risk. DENX disavows any potential liability for the) Tj T* 0 Tw 2.162651 Tw (contents of this document. Use of the concepts, examples, and/or other content of this document is) Tj T* 0 Tw 1.203984 Tw (entirely at your own risk. All copyrights are owned by their owners, unless specifically noted otherwise.) Tj T* 0 Tw .041567 Tw (Use of a term in this document should not be regarded as affecting the validity of any trademark or service) Tj T* 0 Tw (mark. Naming of particular products or brands should not be seen as endorsements.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 2 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
104 0 obj
<< /Length 2458 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 735.0236 cm
q
BT 1 0 0 1 0 5 Tm 193.2949 0 Td 30 TL /F2 25 Tf 0 0 0 rg (U-Boot) Tj T* -193.2949 0 Td ET
Q
Q
q
1 0 0 1 62.69291 671.0236 cm
q
BT 1 0 0 1 0 4 Tm 153.8149 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Current Versions) Tj T* -153.8149 0 Td ET
Q
Q
q
1 0 0 1 62.69291 617.0236 cm
q
BT 1 0 0 1 0 26 Tm 1.56784 Tw 12 TL /F1 10 Tf 0 0 0 rg (Das U-Boot \(or just "U-Boot" for short\) is Open Source Firmware for Embedded Power Architecture\256,) Tj T* 0 Tw .734104 Tw (ARM, MIPS, x86 and other processors. The U-Boot project is hosted by DENX, where you can also find) Tj T* 0 Tw (the project home page: ) Tj 0 0 .501961 rg (http://www.denx.de/wiki/U-Boot/) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 599.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The current version of the U-Boot source code can be retrieved from the DENX "git" repository.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 581.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can browse the "git" repositories at ) Tj 0 0 .501961 rg (http://git.denx.de/) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 551.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .598876 Tw (The trees can be accessed through the git, HTTP, and rsync protocols. For example you can use one of) Tj T* 0 Tw (the following commands to create a local clone of one of the source trees:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 501.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 37.2 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 18.2 Tm /F4 7 Tf 8.4 TL (git clone git://git.denx.de/u-boot.git u-boot/) Tj T* (git clone http://git.denx.de/u-boot.git u-boot/) Tj T* (git clone rsync://git.denx.de/u-boot.git u-boot/) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 479.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For details please see here.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 449.6236 cm
q
BT 1 0 0 1 0 14 Tm 1.729982 Tw 12 TL /F1 10 Tf 0 0 0 rg (Official releases of U-Boot are also available through FTP. Compressed tar archives can downloaded) Tj T* 0 Tw (from the directory ) Tj 0 0 .501961 rg (ftp://ftp.denx.de/pub/u-boot/) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 449.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 3 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
105 0 obj
<< /Length 1354 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 38.24488 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Get U-Boot code for the beagleboneblack) Tj T* -38.24488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
q
BT 1 0 0 1 0 3 Tm 134.0774 0 Td 18 TL /F3 15 Tf 0 0 0 rg (define some PATH variables) Tj T* -134.0774 0 Td ET
Q
Q
q
1 0 0 1 62.69291 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Export our workdirectory:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 634.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ export TBOT_BASEDIR=/work/hs/tbot) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 612.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and cd into it) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 571.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ cd $TBOT_BASEDIR) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 4 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
106 0 obj
<< /Length 2227 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 155.3549 0 Td 18 TL /F3 15 Tf 0 0 0 rg (clone the U-Boot code) Tj T* -155.3549 0 Td ET
Q
Q
q
1 0 0 1 62.69291 717.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now we simply clone the U-Boots source code with git:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 659.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26.6 Tm /F4 7 Tf 8.4 TL ($ git clone /home/hs/git/u-boot u-boot-am335x_evm) Tj T* (Klone nach 'u-boot-am335x_evm'...) Tj T* (Fertig.) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 637.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (cd into it) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 596.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ cd u-boot-am335x_evm) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 574.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (checkout the branch you want to test) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 516.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26.6 Tm /F4 7 Tf 8.4 TL ($ git checkout master) Tj T* (Bereits auf 'master') Tj T* (Ihr Branch ist auf dem selben Stand wie 'origin/master'.) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 494.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (just for the records, print some info of the branch) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 445.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 37.2 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 18.2 Tm /F4 7 Tf 8.4 TL ($ git describe --tags) Tj T* (v2017.09-rc2-151-g2d7cb5b) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 435.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 5 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
107 0 obj
<< /Length 1059 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 161.0449 0 Td 24 TL /F3 20 Tf 0 0 0 rg (setup toolchain) Tj T* -161.0449 0 Td ET
Q
Q
q
1 0 0 1 62.69291 711.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This depends on the toolchain you use.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 644.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 35 Tm /F4 7 Tf 8.4 TL ($ printenv PATH | grep --color=never /opt/eldk-5.4/armv5te/sysroots/i686-eldk-linux/usr/bin/armv5te-\\) Tj T* (  linux-gnueabi) Tj T* ($ export PATH=/opt/eldk-5.4/armv5te/sysroots/i686-eldk-linux/usr/bin/armv5te-linux-gnueabi:$PATH) Tj T* ($ export CROSS_COMPILE=arm-linux-gnueabi-) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 634.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 6 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
108 0 obj
<< /Length 3391 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 43.24488 0 Td 24 TL /F3 20 Tf 0 0 0 rg (compile U-Boot for the beagleboneblack) Tj T* -43.24488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 711.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Add the path to the dtc command to your PATH variable) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 670.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ export PATH=$TBOT_BASEDIR/dtc:$PATH) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 648.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (clean the source code) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 607.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ make mrproper) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (configure source for the beagleboneblack) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 460.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 112.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 93.8 Tm /F4 7 Tf 8.4 TL ($ make am335x_evm_defconfig) Tj T* (  HOSTCC  scripts/basic/fixdep) Tj T* (  HOSTCC  scripts/kconfig/conf.o) Tj T* (  SHIPPED scripts/kconfig/zconf.tab.c) Tj T* (  SHIPPED scripts/kconfig/zconf.lex.c) Tj T* (  SHIPPED scripts/kconfig/zconf.hash.c) Tj T* (  HOSTCC  scripts/kconfig/zconf.tab.o) Tj T* (  HOSTLD  scripts/kconfig/conf) Tj T* (#) Tj T* (# configuration written to .config) Tj T* (#) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 438.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now compile it) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 346.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 79.2 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 60.2 Tm /F4 7 Tf 8.4 TL ($ make -s all) Tj T* (*** Your GCC is older than 6.0 and will not be supported starting in v2018.01.) Tj T* (===================== WARNING ======================) Tj T* (This board uses CONFIG_DM_I2C_COMPAT. Please remove) Tj T* (\(possibly in a subsequent patch in your series\)) Tj T* (before sending patches to the mailing list.) Tj T* (====================================================) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 324.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (after U-Boot is compiled, copy the resulting binaries we need later to our tftpboot directory.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 250.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 43.4 Tm /F4 7 Tf 8.4 TL ($ cp u-boot.bin /var/lib/tftpboot/beagleboneblack/tbot) Tj T* ($) Tj T* ($ cp u-boot.img /var/lib/tftpboot/beagleboneblack/tbot) Tj T* ($) Tj T* ($ cp MLO /var/lib/tftpboot/beagleboneblack/tbot) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 240.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 7 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
109 0 obj
<< /Length 3809 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 146.0549 0 Td 24 TL /F3 20 Tf 0 0 0 rg (U-Boot installation) Tj T* -146.0549 0 Td ET
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
q
BT 1 0 0 1 0 3 Tm 186.1949 0 Td 18 TL /F3 15 Tf 0 0 0 rg (install U-Boot) Tj T* -186.1949 0 Td ET
Q
Q
q
1 0 0 1 62.69291 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (for this example, we install the new U-Boot on the SD card, as we use SD card bootmode.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 608.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( print tbot_upd_uboot load_uboot upd_uboot) Tj T* (tbot_upd_uboot=run load_uboot;run upd_uboot) Tj T* (load_uboot=tftp ${load_addr_r} ${ubfile}) Tj T* (upd_uboot=fatwrite mmc 1:1 ${load_addr_r} u-boot.img ${filesize}) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 586.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tfpt the new u-boot image into ram and write it to the sd card.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 453.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( run tbot_upd_uboot) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.11) Tj T* (Filename 'beagleboneblack/tbot/u-boot.img'.) Tj T* (Load address: 0x81000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (##############################################) Tj T* (       4.6 MiB/s) Tj T* (done) Tj T* (Bytes transferred = 660860 \(a157c hex\)) Tj T* (writing u-boot.img) Tj T* (660860 bytes written) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 417.4236 cm
q
BT 1 0 0 1 0 3 Tm 196.5974 0 Td 18 TL /F3 15 Tf 0 0 0 rg (install SPL) Tj T* -196.5974 0 Td ET
Q
Q
q
1 0 0 1 62.69291 387.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (for this example, we install the new SPL on the SD card, as we use SD card bootmode.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 321.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( print tbot_upd_spl load_mlo upd_mlo) Tj T* (tbot_upd_spl=run load_mlo;run upd_mlo) Tj T* (load_mlo=tftp ${load_addr_r} ${mlofile}) Tj T* (upd_mlo=fatwrite mmc 1:1 ${load_addr_r} mlo ${filesize}) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 299.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tfpt the new SPL image into ram and write it to the sd card.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 165.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( run tbot_upd_spl) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.11) Tj T* (Filename 'beagleboneblack/tbot/MLO'.) Tj T* (Load address: 0x81000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (#######) Tj T* (       4.6 MiB/s) Tj T* (done) Tj T* (Bytes transferred = 95468 \(174ec hex\)) Tj T* (writing mlo) Tj T* (95468 bytes written) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 155.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 8 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
110 0 obj
<< /Length 3267 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 158.2649 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Tool Installation) Tj T* -158.2649 0 Td ET
Q
Q
q
1 0 0 1 62.69291 687.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .015868 Tw (U-Boot uses a special image format when loading the Linux kernel or ramdisk or other images. This image) Tj T* 0 Tw .103828 Tw (contains \(among other things\) information about the time of creation, operating system, compression type,) Tj T* 0 Tw (image type, image name and CRC32 checksums.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 657.0236 cm
q
BT 1 0 0 1 0 14 Tm .864104 Tw 12 TL /F1 10 Tf 0 0 0 rg (The tool ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (is used to create such images or to display the information they contain. When using) Tj T* 0 Tw (the ) Tj 0 0 .501961 rg (ELDK) Tj 0 0 0 rg (, the ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (command is already included with the other ) Tj 0 0 .501961 rg (ELDK ) Tj 0 0 0 rg (tools.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 627.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.327765 Tw 12 TL /F1 10 Tf 0 0 0 rg (If you don't use the ) Tj 0 0 .501961 rg (ELDK ) Tj 0 0 0 rg (then you should install ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (in some directory that is in your command) Tj T* 0 Tw (search PATH, for instance:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 594.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL ($ cp tools/mkimage /usr/local/bin/) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 560.4236 cm
q
BT 1 0 0 1 0 14 Tm .98936 Tw 12 TL /F1 10 Tf 0 0 0 rg (mkimage is readily available in several distributions; for example, in ) Tj 0 0 .501961 rg (Ubuntu ) Tj 0 0 0 rg (it is part of the ) Tj 1 0 0 rg (u-boot-tools) Tj T* 0 Tw 0 0 0 rg (package, so it can be installed with:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 527.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL ($ sudo apt-get install u-boot-tools) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 505.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (In ) Tj 0 0 .501961 rg (Fedora ) Tj 0 0 0 rg (the package name is ) Tj 1 0 0 rg (uboot-tools) Tj 0 0 0 rg (, and the command to install it is:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 473.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL ($ sudo dnf install uboot-tools) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 439.2236 cm
q
BT 1 0 0 1 0 14 Tm .407318 Tw 12 TL /F1 10 Tf 0 0 0 rg (Finally, if you're building with ) Tj 0 0 .501961 rg (OpenEmbedded ) Tj 0 0 0 rg (or ) Tj 0 0 .501961 rg (Yocto Project) Tj 0 0 0 rg (, you would want to add the ) Tj 1 0 0 rg (u-boot-fw-utils) Tj T* 0 Tw 0 0 0 rg (recipe to your image.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 439.2236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 9 / 34) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
111 0 obj
<< /Length 2184 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 82.15488 0 Td 24 TL /F3 20 Tf 0 0 0 rg (U-Boot Command Line Interface) Tj T* -82.15488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 2.24229 Tw (The following section describes the most important commands available in U-Boot. Please note that) Tj T* 0 Tw 1.924985 Tw (U-Boot is highly configurable, so not all of these commands may be available in the configuration of) Tj T* 0 Tw .29311 Tw (U-Boot installed on your hardware, or additional commands may exist. You can use the help command to) Tj T* 0 Tw (print a list of all available commands for your configuration.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 645.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .622488 Tw (For most commands, you do not need to type in the full command name; instead it is sufficient to type a) Tj T* 0 Tw (few characters. For instance, help can be abbreviated as h.) Tj T* ET
Q
Q
q
1 0 0 1 282.2778 608.3036 cm
q
30.72 0 0 30.72 0 0 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
Q
q
1 0 0 1 62.69291 578.3036 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .498735 Tw (The behaviour of some commands depends on the configuration of U-Boot and on the definition of some) Tj T* 0 Tw (variables in your U-Boot environment.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 548.3036 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .73284 Tw (Almost all U-Boot commands expect numbers to be entered in hexadecimal input format. \(Exception: for) Tj T* 0 Tw (historical reasons, the sleep command takes its argument in decimal input format.\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 518.3036 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.946651 Tw (Be careful not to use edit keys besides 'Backspace', as hidden characters in things like environment) Tj T* 0 Tw (variables can be very difficult to find.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 518.3036 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 10 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
112 0 obj
<< /Length 2051 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 150.7724 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Information Commands) Tj T* -150.7724 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (bdinfo - print Board Info structure) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 631.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help bdinfo) Tj T* (bdinfo - print Board Info structure) Tj T*  T* (Usage:) Tj T* (bdinfo) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 585.4236 cm
q
BT 1 0 0 1 0 26 Tm 1.349984 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (bdinfo ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (bdi) Tj 0 0 0 rg (\) prints the information that U-Boot passes about the board such as memory) Tj T* 0 Tw 2.241412 Tw (addresses and sizes, clock frequencies, MAC address, etc. This information is mainly needed to be) Tj T* 0 Tw (passed to the Linux kernel.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 435.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 138 re B*
Q
q
BT 1 0 0 1 0 119 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( bdi) Tj T* (arch_number = 0x00000E05) Tj T* (boot_params = 0x80000100) Tj T* (DRAM bank   = 0x00000000) Tj T* (-) Tj (>) Tj ( start    = 0x80000000) Tj T* (-) Tj (>) Tj ( size     = 0x20000000) Tj T* (baudrate    = 115200 bps) Tj T* (TLB addr    = 0x9FFF0000) Tj T* (relocaddr   = 0x9FF4F000) Tj T* (reloc off   = 0x1F74F000) Tj T* (irq_sp      = 0x9DF264E0) Tj T* (sp start    = 0x9DF264D0) Tj T* (Early malloc usage: 178 / 400) Tj T* (fdt_blob = 9df264f8) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 425.2236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 11 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
113 0 obj
<< /Length 2181 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (coninfo - print console devices and informations) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help conin) Tj T* (coninfo - print console devices and information) Tj T*  T* (Usage:) Tj T* (coninfo) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (coninfo ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (conin) Tj 0 0 0 rg (\) displays information about the available console I/O devices.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 579.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( conin) Tj T* (List of available devices:) Tj T* (serial@44e09000 00000003 IO stdin stdout stderr) Tj T* (serial   00000003 IO) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 557.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The output contains the device name, flags, and the current usage. For example, the output) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 524.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL (serial@44e09000 00000003 IO stdin stdout stderr) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 490.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.829985 Tw (means that the serial device provides input \(flag 'I'\) and output \(flag 'O'\) functionality and is currently) Tj T* 0 Tw (assigned to the 3 standard I/O streams stdin, stdout and stderr.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 490.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 12 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
114 0 obj
<< /Length 1403 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (flinfo - print FLASH memory information) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help flinfo) Tj T* (Unknown command 'flinfo' - try 'help' without arguments for list of all known commands) Tj T*  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 650.2236 cm
q
BT 1 0 0 1 0 14 Tm 1.82186 Tw 12 TL /F1 10 Tf 0 0 0 rg (The command ) Tj 1 0 0 rg (flinfo ) Tj 0 0 0 rg (\() Tj 1 0 0 rg (fli) Tj 0 0 0 rg (\) can be used to get information about the available flash memory \(see Flash) Tj T* 0 Tw (Memory Commands below\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 600.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 37.2 re B*
Q
q
BT 1 0 0 1 0 18.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( flinfo) Tj T* (Unknown command 'flinfo' - try 'help') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 590.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 13 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
115 0 obj
<< /Length 2037 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (help - print online help) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 642.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 87.6 re B*
Q
q
BT 1 0 0 1 0 68.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help help) Tj T* (help - print command description/usage) Tj T*  T* (Usage:) Tj T* (help) Tj T* (      - print brief description of all commands) Tj T* (help command ...) Tj T* (      - print detailed usage of 'command') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 596.2236 cm
q
BT 1 0 0 1 0 26 Tm 2.422765 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (help ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (h ) Tj 0 0 0 rg (or ) Tj 1 0 0 rg (?) Tj 0 0 0 rg (\) prints online help. Without any arguments, it prints a list of all U-Boot) Tj T* 0 Tw 2.163984 Tw (commands that are available in your configuration of U-Boot. You can get detailed information for a) Tj T* 0 Tw (specific command by typing its name as argument to the help command:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 462.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help printenv tftp) Tj T* (printenv - print environment variables) Tj T*  T* (Usage:) Tj T* (printenv [-a]) Tj T* (    - print [all] values of all environment variables) Tj T* (printenv name ...) Tj T* (    - print value of environment variable 'name') Tj T* (tftpboot - boot image via network using TFTP protocol) Tj T*  T* (Usage:) Tj T* (tftpboot [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 452.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 14 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
116 0 obj
<< /Length 3382 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 163.2674 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Memory Commands) Tj T* -163.2674 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (base - print or set address offset) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 606.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 87.6 re B*
Q
q
BT 1 0 0 1 0 68.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help base) Tj T* (base - print or set address offset) Tj T*  T* (Usage:) Tj T* (base) Tj T* (    - print address offset for memory commands) Tj T* (base off) Tj T* (    - set address offset for memory commands to 'off') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 536.2236 cm
q
BT 1 0 0 1 0 50 Tm .121417 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can use the ) Tj 1 0 0 rg (base ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (ba) Tj 0 0 0 rg (\) to print or set a "base address" that is used as the address offset for) Tj T* 0 Tw .274692 Tw (all subsequent memory commands; the default value of the base address is 0, so all addresses you enter) Tj T* 0 Tw 1.239318 Tw (are used unmodified. However, when you repeatedly have to access a certain memory region \(like the) Tj T* 0 Tw .192651 Tw (internal memory of some embedded Power Architecture\256 processors\) it can be very convenient to set the) Tj T* 0 Tw (base address to the start of this area and then use only the offsets:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 518.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ToDo) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 485.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (crc32 - checksum calculation) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 455.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (crc32 ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (crc) Tj 0 0 0 rg (\) can be used to calculate a CRC32 checksum over a range of memory:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 414.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
BT 1 0 0 1 0 9.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( crc 0x80000004 0x3fc 76a37280) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 392.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (When used with 3 arguments, the command stores the calculated checksum at the given address:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 334.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( crc 0x80000004 0x3fc 0x80000000 76a37280) Tj T* (=) Tj (>) Tj ( md 0x80000000 4) Tj T* (80000000: 8072a376 ff551155 ffffffff 1155ffff    v.r.U.U.......U.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 300.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .391567 Tw (As you can see, the CRC32 checksum was not only printed, but also stored at address passed in the 3th) Tj T* 0 Tw (argument.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 300.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 15 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
117 0 obj
<< /Length 3592 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (cmp - memory compare) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help cmp) Tj T* (cmp - memory compare) Tj T*  T* (Usage:) Tj T* (cmp [.b, .w, .l] addr1 addr2 count) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 621.4236 cm
q
BT 1 0 0 1 0 26 Tm .476654 Tw 12 TL /F1 10 Tf 0 0 0 rg (With the ) Tj 1 0 0 rg (cmp ) Tj 0 0 0 rg (command you can test whether the contents of two memory areas are identical or not. The) Tj T* 0 Tw 1.495542 Tw (command will test either the whole area as specified by the 3rd \(length\) argument, or stop at the first) Tj T* 0 Tw (difference.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 504.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
BT 1 0 0 1 0 85.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cmp 0x80000000 0x80100000 40000) Tj T* (Total of 262144 word\(s\) were the same) Tj T* (=) Tj (>) Tj ( md 0x80000000 0xc) Tj T* (80000000: f5b5afec a76e1eb6 c2c2868a 27e177ee    ......n......w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (=) Tj (>) Tj ( md 0x80100000 0xc) Tj T* (80100000: f5b5afec a76e1eb6 c2c2868a 27e177ee    ......n......w.') Tj T* (80100010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80100020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 434.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .43436 Tw (Like most memory commands the :redtext:cmp` can access the memory in different sizes: as 32 bit \(long) Tj T* 0 Tw .971807 Tw (word\), 16 bit \(word\) or 8 bit \(byte\) data. If invoked just as cmp the default size \(32 bit or long words\) is) Tj T* 0 Tw .275777 Tw (used; the same can be selected explicitly by typing cmp.l instead. If you want to access memory as 16 bit) Tj T* 0 Tw .483488 Tw (or word data, you can use the variant cmp.w instead; and to access memory as 8 bit or byte data please) Tj T* 0 Tw (use cmp.b.) Tj T* ET
Q
Q
q
1 0 0 1 282.2778 398.1036 cm
q
30.72 0 0 30.72 0 0 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
Q
q
1 0 0 1 62.69291 368.1036 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.029987 Tw (Please note that the count argument specifies the number of data items to process, i. e. the number of) Tj T* 0 Tw (long words or words or bytes to compare.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 285.1036 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cmp.l 0x80000000 0x80100000 40000) Tj T* (Total of 262144 word\(s\) were the same) Tj T* (=) Tj (>) Tj ( cmp.w 0x80000000 0x80100000 80000) Tj T* (Total of 524288 halfword\(s\) were the same) Tj T* (=) Tj (>) Tj ( cmp.b 0x80000000 0x80100000 100000) Tj T* (Total of 1048576 byte\(s\) were the same) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 275.1036 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 16 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
118 0 obj
<< /Length 1893 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (cp - memory copy) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help cp) Tj T* (cp - memory copy) Tj T*  T* (Usage:) Tj T* (cp [.b, .w, .l] source target count) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (cp ) Tj 0 0 0 rg (command is used to copy memory areas.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 604.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
BT 1 0 0 1 0 9.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cp 0x80000000 0x80100000 10000) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 582.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (cp ) Tj 0 0 0 rg (command understands the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 524.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cp.l 0x80000000 0x80100000 10000) Tj T* (=) Tj (>) Tj ( cp.w 0x80000000 0x80100000 20000) Tj T* (=) Tj (>) Tj ( cp.b 0x80000000 0x80100000 40000) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 514.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 17 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
119 0 obj
<< /Length 4037 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (md - memory display) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help md) Tj T* (md - memory display) Tj T*  T* (Usage:) Tj T* (md [.b, .w, .l] address [# of objects]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (md ) Tj 0 0 0 rg (command can be used to display memory contents both as hexadecimal and ASCII data.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 470.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 163.2 re B*
Q
q
BT 1 0 0 1 0 144.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md 0x80000000) Tj T* (80000000: f5b5afec a76e1eb6 c2c2868a 27e177ee    ......n......w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (80000040: 3be665d4 f934ed72 77f30cfe ff7d4927    .e.;r.4....w'I}.) Tj T* (80000050: 01938b0f 67670a77 a03e2f27 a3cddfa8    ....w.gg'/) Tj (>) Tj (.....) Tj T* (80000060: 7db4427d a8720cdc a00adede db2afc3e    }B.}..r.....) Tj (>) Tj (.*.) Tj T* (80000070: 8b68e416 5fb506a9 8a3d89e7 9155cdc2    ..h...._..=...U.) Tj T* (80000080: 897baab0 2df979d2 04789346 6d0794e1    ..{..y.-F.x....m) Tj T* (80000090: 4cf78ec4 7ef5efa3 d2079c53 56a97ebc    ...L...~S....~.V) Tj T* (800000a0: 1d592a82 12942c92 04204dc4 51a92c67    .*Y..,...M .g,.Q) Tj T* (800000b0: 8c0a5f41 9eae1126 426a3d45 efb1cdb0    A_..) Tj (&) Tj (...E=jB....) Tj T* (800000c0: 495f405b 228f37a0 558bbf15 6170078a    [@_I.7."...U..pa) Tj T* (800000d0: f3dd9b6f 992af779 d7a51967 cb0c7480    o...y.*.g....t..) Tj T* (800000e0: 0d9a0971 b232aaf7 682e70c7 8001b172    q.....2..p.hr...) Tj T* (800000f0: fd79317c a172ac42 46685500 b25977a8    |1y.B.r..UhF.wY.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 448.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This command can also be used with the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 297.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 138 re B*
Q
q
BT 1 0 0 1 0 119 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md.w 0x80000000) Tj T* (80000000: afec f5b5 1eb6 a76e 868a c2c2 77ee 27e1    ......n......w.') Tj T* (80000010: 141f 85a9 0d29 ea0e 3b60 a3b8 bf20 9c5a    ....\)...`;.. .Z.) Tj T* (80000020: 0728 d5f9 422c 4863 a83a 3faa fa91 375d    \(...,BcH:..?..]7) Tj T* (80000030: c998 f708 7535 a5e2 2513 2df7 0796 c221    ....5u...%.-..!.) Tj T* (80000040: 65d4 3be6 ed72 f934 0cfe 77f3 4927 ff7d    .e.;r.4....w'I}.) Tj T* (80000050: 8b0f 0193 0a77 6767 2f27 a03e dfa8 a3cd    ....w.gg'/) Tj (>) Tj (.....) Tj T* (80000060: 427d 7db4 0cdc a872 dede a00a fc3e db2a    }B.}..r.....) Tj (>) Tj (.*.) Tj T* (80000070: e416 8b68 06a9 5fb5 89e7 8a3d cdc2 9155    ..h...._..=...U.) Tj T* (=) Tj (>) Tj ( md.b 0x80000000) Tj T* (80000000: ec af b5 f5 b6 1e 6e a7 8a 86 c2 c2 ee 77 e1 27    ......n......w.') Tj T* (80000010: 1f 14 a9 85 29 0d 0e ea 60 3b b8 a3 20 bf 5a 9c    ....\)...`;.. .Z.) Tj T* (80000020: 28 07 f9 d5 2c 42 63 48 3a a8 aa 3f 91 fa 5d 37    \(...,BcH:..?..]7) Tj T* (80000030: 98 c9 08 f7 35 75 e2 a5 13 25 f7 2d 96 07 21 c2    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 287.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 18 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
120 0 obj
<< /Length 2088 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .67436 Tw (The last displayed memory address and the value of the count argument are remembered, so when you) Tj T* 0 Tw 1.229985 Tw (enter md again without arguments it will automatically continue at the next address, and use the same) Tj T* 0 Tw (count again.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 553.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 163.2 re B*
Q
q
BT 1 0 0 1 0 144.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md.b 0x80000000 0x20) Tj T* (80000000: ec af b5 f5 b6 1e 6e a7 8a 86 c2 c2 ee 77 e1 27    ......n......w.') Tj T* (80000010: 1f 14 a9 85 29 0d 0e ea 60 3b b8 a3 20 bf 5a 9c    ....\)...`;.. .Z.) Tj T* (=) Tj (>) Tj ( md.w 0x80000000) Tj T* (80000000: afec f5b5 1eb6 a76e 868a c2c2 77ee 27e1    ......n......w.') Tj T* (80000010: 141f 85a9 0d29 ea0e 3b60 a3b8 bf20 9c5a    ....\)...`;.. .Z.) Tj T* (80000020: 0728 d5f9 422c 4863 a83a 3faa fa91 375d    \(...,BcH:..?..]7) Tj T* (80000030: c998 f708 7535 a5e2 2513 2df7 0796 c221    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj ( md 0x80000000) Tj T* (80000000: f5b5afec a76e1eb6 c2c2868a 27e177ee    ......n......w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (80000040: 3be665d4 f934ed72 77f30cfe ff7d4927    .e.;r.4....w'I}.) Tj T* (80000050: 01938b0f 67670a77 a03e2f27 a3cddfa8    ....w.gg'/) Tj (>) Tj (.....) Tj T* (80000060: 7db4427d a8720cdc a00adede db2afc3e    }B.}..r.....) Tj (>) Tj (.*.) Tj T* (80000070: 8b68e416 5fb506a9 8a3d89e7 9155cdc2    ..h...._..=...U.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 543.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 19 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
121 0 obj
<< /Length 3942 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (mm - memory modify \(auto-incrementing\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help mm) Tj T* (mm - memory modify \(auto-incrementing address\)) Tj T*  T* (Usage:) Tj T* (mm [.b, .w, .l] address) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 597.4236 cm
q
BT 1 0 0 1 0 50 Tm 1.09436 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (mm ) Tj 0 0 0 rg (command is a method to interactively modify memory contents. It will display the address and) Tj T* 0 Tw .535868 Tw (current contents and then prompt for user input. If you enter a legal hexadecimal number, this new value) Tj T* 0 Tw .963672 Tw (will be written to the address. Then the next address will be prompted. If you don't enter any value and) Tj T* 0 Tw .25811 Tw (just press ENTER, then the contents of this address will remain unchanged. The command stops as soon) Tj T* 0 Tw (as you enter any data that is not a hex number \(like ) Tj 1 0 0 rg (.) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 480.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
BT 1 0 0 1 0 85.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( mm 0x80000000) Tj T* (80000000: f5b5afec ? 0) Tj T* (80000004: a76e1eb6 ? 0xaabbccdd) Tj T* (80000008: c2c2868a ? 0x01234567) Tj T* (8000000c: 27e177ee ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 00000000 aabbccdd 01234567 27e177ee    ........gE#..w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 458.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Again this command can be used with the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 199.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 247.2 re B*
Q
q
BT 1 0 0 1 0 228.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( mm.w 0x80000000) Tj T* (80000000: 0000 ? 0x0101) Tj T* (80000002: 0000 ? 0x0202) Tj T* (80000004: ccdd ? 0x4321) Tj T* (80000006: aabb ? 0x8765) Tj T* (80000008: 4567 ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 02020101 87654321 01234567 27e177ee    ....!Ce.gE#..w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( mm.b 0x80000000) Tj T* (80000000: 01 ? 0x48) Tj T* (80000001: 01 ? 0x65) Tj T* (80000002: 02 ? 0x6c) Tj T* (80000003: 02 ? 0x6c) Tj T* (80000004: 21 ? 0x6f) Tj T* (80000005: 43 ? 0x20) Tj T* (80000006: 65 ? 0x20) Tj T* (80000007: 87 ? 0x20) Tj T* (80000008: 67 ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 6c6c6548 2020206f 01234567 27e177ee    Hello   gE#..w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 189.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 20 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
122 0 obj
<< /Length 3819 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (mw - memory write \(fill\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help mw) Tj T* (mw - memory write \(fill\)) Tj T*  T* (Usage:) Tj T* (mw [.b, .w, .l] address value [count]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 621.4236 cm
q
BT 1 0 0 1 0 26 Tm 2.142927 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (mw ) Tj 0 0 0 rg (command is a way to initialize \(fill\) memory with some value. When called without a count) Tj T* 0 Tw .166654 Tw (argument, the value will be written only to the specified address. When used with a count value, the entire) Tj T* 0 Tw (memory area will be initialized with this value:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 446.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 163.2 re B*
Q
q
BT 1 0 0 1 0 144.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 6c6c6548 2020206f 01234567 27e177ee    Hello   gE#..w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj ( mw 0x80000000 0xaabbccdd) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: aabbccdd 2020206f 01234567 27e177ee    ....o   gE#..w.') Tj T* (80000010: 85a9141f ea0e0d29 a3b83b60 9c5abf20    ....\)...`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj ( mw 0x80000000 0 6) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 00000000 00000000 00000000 00000000    ................) Tj T* (80000010: 00000000 00000000 a3b83b60 9c5abf20    ........`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 424.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This is another command that accepts the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 290.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( mw.w 0x80000004 0x1155 6) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 00000000 11551155 11551155 11551155    ....U.U.U.U.U.U.) Tj T* (80000010: 00000000 00000000 a3b83b60 9c5abf20    ........`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj ( mw.b 0x80000007 0xff 7) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 00000000 ff551155 ffffffff 1155ffff    ....U.U.......U.) Tj T* (80000010: 00000000 00000000 a3b83b60 9c5abf20    ........`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 280.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 21 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
123 0 obj
<< /Length 2201 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (nm - memory modify \(constant address\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help nm) Tj T* (nm - memory modify \(constant address\)) Tj T*  T* (Usage:) Tj T* (nm [.b, .w, .l] address) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 633.4236 cm
q
BT 1 0 0 1 0 14 Tm 1.73152 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (nm ) Tj 0 0 0 rg (command \(non-incrementing memory modify\) can be used to interactively write different data) Tj T* 0 Tw (several times to the same address. This can be useful for instance to access and modify device registers:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 500.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( nm 0x80000000) Tj T* (80000000: 00000000 ? 0x48) Tj T* (80000000: 00000048 ? 0x65) Tj T* (80000000: 00000065 ? 0x6c) Tj T* (80000000: 0000006c ? 0x6c) Tj T* (80000000: 0000006c ? 0x6f) Tj T* (80000000: 0000006f ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 0000006f ff551155 ffffffff 1155ffff    o...U.U.......U.) Tj T* (80000010: 00000000 00000000 a3b83b60 9c5abf20    ........`;.. .Z.) Tj T* (80000020: d5f90728 4863422c 3faaa83a 375dfa91    \(...,BcH:..?..]7) Tj T* (80000030: f708c998 a5e27535 2df72513 c2210796    ....5u...%.-..!.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 478.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (nm ) Tj 0 0 0 rg (command also accepts the type ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 478.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 22 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
124 0 obj
<< /Length 1419 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (loop - infinite loop on address range) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help loop) Tj T* (loop - infinite loop on address range) Tj T*  T* (Usage:) Tj T* (loop [.b, .w, .l] address number_of_objects) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 633.4236 cm
q
BT 1 0 0 1 0 14 Tm .540941 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (loop ) Tj 0 0 0 rg (command reads in a tight loop from a range of memory. This is intended as a special form of a) Tj T* 0 Tw (memory test, since this command tries to read the memory as fast as possible.) Tj T* ET
Q
Q
q
1 0 0 1 282.2778 596.7036 cm
q
30.72 0 0 30.72 0 0 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
Q
q
1 0 0 1 62.69291 578.7036 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This command will never terminate. There is no way to stop it but to reset the board!) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 578.7036 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 23 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
125 0 obj
<< /Length 4327 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 127.4324 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Execution Control Commands) Tj T* -127.4324 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (source - run script from memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 597.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 96 re B*
Q
q
BT 1 0 0 1 0 77 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help source) Tj T* (source - run script from memory) Tj T*  T* (Usage:) Tj T* (source [addr]) Tj T* (      - run script starting at addr) Tj T* (      - A valid image header must be present) Tj T* (For FIT format uImage addr must include subimage) Tj T* (unit name in the form of addr:) Tj (<) Tj (subimg_uname) Tj (>) Tj  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 551.8236 cm
q
BT 1 0 0 1 0 26 Tm .480574 Tw 12 TL /F1 10 Tf 0 0 0 rg (With the ) Tj 1 0 0 rg (source ) Tj 0 0 0 rg (command you can run "shell" scripts under U-Boot: You create a U-Boot script image by) Tj T* 0 Tw .170465 Tw (simply writing the commands you want to run into a text file; then you will have to use the ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (tool to) Tj T* 0 Tw (convert this text file into a U-Boot image \(using the image type script\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 521.8236 cm
q
BT 1 0 0 1 0 14 Tm .011488 Tw 12 TL /F1 10 Tf 0 0 0 rg (This image can be loaded like any other image file, and with ) Tj 1 0 0 rg (source ) Tj 0 0 0 rg (you can run the commands in such an) Tj T* 0 Tw (image. For instance, the following text file:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 405.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 85.4 Tm /F4 7 Tf 8.4 TL ($ cat source_example.txt) Tj T* (echo) Tj T* (echo Network Configuration:) Tj T* (echo ----------------------) Tj T* (echo Target:) Tj T* (printenv ipaddr hostname) Tj T* (echo) Tj T* (echo Server:) Tj T* (printenv serverip rootpath) Tj T* (echo) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 383.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (can be converted into a U-Boot script image using the ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (command like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 266.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 85.4 Tm /F4 7 Tf 8.4 TL ($ mkimage -A ppc -O linux -T script -C none -a 0 -e 0 -n "autoscr example script" -d\\) Tj T* (  $TBOT_BASEDIR/source_example.txt /var/lib/tftpboot/beagleboneblack/tbot/source.scr) Tj T* (Image Name:   autoscr example script) Tj T* (Created:      Fri Aug 18 10:24:36 2017) Tj T* (Image Type:   PowerPC Linux Script \(uncompressed\)) Tj T* (Data Size:    157 Bytes = 0.15 kB = 0.00 MB) Tj T* (Load Address: 00000000) Tj T* (Entry Point:  00000000) Tj T* (Contents:) Tj T* (   Image 0: 149 Bytes = 0.15 kB = 0.00 MB) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 244.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now you can load and execute this script image in U-Boot:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 94.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 138 re B*
Q
q
BT 1 0 0 1 0 119 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( tftp 0x80000000 beagleboneblack/tbot/source_example.scr) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.10) Tj T* (Filename 'beagleboneblack/tbot/source_example.scr'.) Tj T* (Load address: 0x80000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (#) Tj T* (       107.4 KiB/s) Tj T* (done) Tj T* (Bytes transferred = 221 \(dd hex\)) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( imi 0x80000000) Tj T*  T* (## Checking Image at 80000000 ...) Tj T* (   Legacy image found) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 24 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
126 0 obj
<< /Length 1199 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 557.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 205.2 re B*
Q
q
BT 1 0 0 1 0 186.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (   Image Name:   autoscr example script) Tj T* (   Created:      2017-08-18   8:19:02 UTC) Tj T* (   Image Type:   PowerPC Linux Script \(uncompressed\)) Tj T* (   Data Size:    157 Bytes = 157 Bytes) Tj T* (   Load Address: 00000000) Tj T* (   Entry Point:  00000000) Tj T* (   Contents:) Tj T* (      Image 0: 149 Bytes = 149 Bytes) Tj T* (   Verifying Checksum ... OK) Tj T* (=) Tj (>) Tj ( source 0x80000000) Tj T* (## Executing script at 80000000) Tj T*  T* (Network Configuration:) Tj T* (----------------------) Tj T* (Target:) Tj T* (ipaddr=192.168.2.10) Tj T* (## Error: "hostname" not defined) Tj T*  T* (Server:) Tj T* (serverip=192.168.2.1) Tj T* (rootpath=/export/rootfs) Tj T*  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 547.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 25 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
127 0 obj
<< /Length 5280 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (bootm - boot application image from memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 449.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 280.8 re B*
Q
q
BT 1 0 0 1 0 261.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help bootm) Tj T* (bootm - boot application image from memory) Tj T*  T* (Usage:) Tj T* (bootm [addr [arg ...]]) Tj T* (    - boot application image stored in memory) Tj T* (      passing arguments 'arg ...'; when booting a Linux kernel,) Tj T* (      'arg' can be the address of an initrd image) Tj T* (      When booting a Linux kernel which requires a flat device-tree) Tj T* (      a third argument is required which is the address of the) Tj T* (      device-tree blob. To boot that kernel without an initrd image,) Tj T* (      use a '-' for the second argument. If you do not pass a third) Tj T* (      a bd_info struct will be passed instead) Tj T*  T* (For the new multi component uImage format \(FIT\) addresses) Tj T* (      must be extended to include component or configuration unit name:) Tj T* (      addr:) Tj (<) Tj (subimg_uname) Tj (>) Tj ( - direct component image specification) Tj T* (      addr#) Tj (<) Tj (conf_uname) Tj (>) Tj (   - configuration specification) Tj T* (      Use iminfo command to get the list of existing component) Tj T* (      images and configurations.) Tj T*  T* (Sub-commands to do part of the bootm sequence.  The sub-commands must be) Tj T* (issued in the order below \(it's ok to not issue all sub-commands\):) Tj T* (      start [addr [arg ...]]) Tj T* (      loados  - load OS image) Tj T* (      ramdisk - relocate initrd, set env initrd_start/initrd_end) Tj T* (      fdt     - relocate flat device tree) Tj T* (      cmdline - OS specific command line processing/setup) Tj T* (      bdt     - OS specific bd_t processing) Tj T* (      prep    - OS specific prep before relocation or go) Tj T* (      go      - start OS) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 379.0236 cm
q
BT 1 0 0 1 0 50 Tm .154985 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (command is used to start operating system images. From the image header it gets information) Tj T* 0 Tw .072765 Tw (about the type of the operating system, the file compression method used \(if any\), the load and entry point) Tj T* 0 Tw .165318 Tw (addresses, etc. The command will then load the image to the required memory address, uncompressing it) Tj T* 0 Tw .399488 Tw (on the fly if necessary. Depending on the OS it will pass the required boot arguments and start the OS at) Tj T* 0 Tw (it's entry point.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 349.0236 cm
q
BT 1 0 0 1 0 14 Tm .603876 Tw 12 TL /F1 10 Tf 0 0 0 rg (The first argument to ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (is the memory address \(in RAM, ROM or flash memory\) where the image is) Tj T* 0 Tw (stored, followed by optional arguments that depend on the OS.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 283.0236 cm
q
BT 1 0 0 1 0 50 Tm 2.104104 Tw 12 TL /F1 10 Tf 1 0 0 rg (Linux ) Tj 0 0 0 rg (requires the flattened device tree blob to be passed at boot time, and ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (expects its third) Tj T* 0 Tw .894104 Tw (argument to be the address of the blob in memory. Second argument to ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (depends on whether an) Tj T* 0 Tw 1.341098 Tw (initrd initial ramdisk image is to be used. If the kernel should be booted without the initial ramdisk, the) Tj T* 0 Tw .483876 Tw (second argument should be given as "-", otherwise it is interpreted as the start address of initrd \(in RAM,) Tj T* 0 Tw (ROM or flash memory\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 265.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To boot a Linux kernel image without a initrd ramdisk image, the following command can be used:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 232.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
BT 1 0 0 1 0 1.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( bootm ${kernel_addr} - ${fdt_addr}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 210.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If a ramdisk image shall be used, you can type:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 177.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
BT 1 0 0 1 0 1.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( bootm ${kernel_addr} ${ramdisk_addr} ${fdt_addr}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 143.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .692209 Tw (Both examples of course imply that the variables used are set to correct addresses for a kernel, fdt blob) Tj T* 0 Tw (and a initrd ramdisk image.) Tj T* ET
Q
Q
q
1 0 0 1 282.2778 107.1036 cm
q
30.72 0 0 30.72 0 0 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 26 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
128 0 obj
<< /Length 870 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 705.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .339398 Tw (When booting images that have been loaded to RAM \(for instance using TFTP download\) you have to be) Tj T* 0 Tw 1.239984 Tw (careful that the locations where the \(compressed\) images were stored do not overlap with the memory) Tj T* 0 Tw .877209 Tw (needed to load the uncompressed kernel. For instance, if you load a ramdisk image at a location in low) Tj T* 0 Tw 1.981318 Tw (memory, it may be overwritten when the Linux kernel gets loaded. This will cause undefined system) Tj T* 0 Tw (crashes.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 27 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
129 0 obj
<< /Length 2048 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (go - start application at address 'addr') Tj T* ET
Q
Q
q
1 0 0 1 62.69291 650.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 79.2 re B*
Q
q
BT 1 0 0 1 0 60.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help go) Tj T* (go - start application at address 'addr') Tj T*  T* (Usage:) Tj T* (go addr [arg ...]) Tj T* (    - start application at address 'addr') Tj T* (      passing 'arg' as arguments) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 604.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.643555 Tw (U-Boot has support for so-called standalone applications. These are programs that do not require the) Tj T* 0 Tw .42936 Tw (complex environment of an operating system to run. Instead they can be loaded and executed by U-Boot) Tj T* 0 Tw (directly, utilizing U-Boot's service functions like console I/O or malloc\(\) and free\(\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 574.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.543735 Tw (This can be used to dynamically load and run special extensions to U-Boot like special hardware test) Tj T* 0 Tw (routines or bootstrap code to load an OS image from some filesystem.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 544.6236 cm
q
BT 1 0 0 1 0 14 Tm .15186 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (go ) Tj 0 0 0 rg (command is used to start such standalone applications. The optional arguments are passed to the) Tj T* 0 Tw (application without modification.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 526.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TODO For more information see 5.12. U-Boot Standalone Applications.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 526.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 28 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
130 0 obj
<< /Length 1540 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 156.1874 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Download Commands) Tj T* -156.1874 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (bootp - boot image via network using BOOTP/TFTP protocol) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 631.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help bootp) Tj T* (bootp - boot image via network using BOOTP/TFTP protocol) Tj T*  T* (Usage:) Tj T* (bootp [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 598.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (dhcp - invoke DHCP client to obtain IP/boot params) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 515.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help dhcp) Tj T* (dhcp - boot image via network using DHCP/TFTP protocol) Tj T*  T* (Usage:) Tj T* (dhcp [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 505.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 29 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
131 0 obj
<< /Length 4187 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (loadb - load binary file over serial line \(kermit mode\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 659.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help loadb) Tj T* (loadb - load binary file over serial line \(kermit mode\)) Tj T*  T* (Usage:) Tj T* (loadb [ off ] [ baud ]) Tj T* (    - load binary file over serial line with offset 'off' and baudrate 'baud') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 637.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (With kermit you can download binary data via the serial line.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 619.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Make sure you use the following settings in kermit.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 510.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 96 re B*
Q
q
BT 1 0 0 1 0 77 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (set carrier-watch off) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set handshake none) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set flow-control none) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (robust) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set file type bin) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set file name lit) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set rec pack 1000) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set send pack 1000) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set window 5) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 488.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now download for example u-boot.img.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 95.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 381.6 re B*
Q
q
BT 1 0 0 1 0 362.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( loadb 80000000) Tj T* (## Ready for binary \(kermit\) download to 0x80000000 at 115200 bps...) Tj T*  T* (\(Back at pollux.denx.de\)) Tj T* (----------------------------------------------------) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj  T* (C-Kermit 9.0.302 OPEN SOURCE:, 20 Aug 2011, pollux.denx.de [192.168.1.1]\\) Tj T* (   Current Directory: $TBOT_BASEDIR\\) Tj T* (        Network Host: metis:513\\) Tj T* (        Network Type: TCP/IP\\) Tj T* (              Parity: none\\) Tj T* (         RTT/Timeout: 01 / 02\\) Tj T* (             SENDING: /tftpboot/bbb/tbot/u-boot.img =) Tj (>) Tj ( u-boot.img\\) Tj T* (           File Type: BINARY\\) Tj T* (           File Size: 660876\\) Tj T* (        Percent Done: 100 //////////////////////////////////////////////////\\) Tj T* (           ...10...20...30...40...50...60...70...80...90..100\\) Tj T* (  6) Tj T* (       teElapsed Time: 00:01:31\\) Tj T* (  2) Tj T* (44Transfer56ate, CPS: 7299\\) Tj T* (  F) Tj T* (        Window Slots: 1 of 1\\) Tj T* (  D11) Tj T* (         9acket Type: B\\) Tj T* (  3937) Tj T* (90     900cket Count: 788\\) Tj T* (  6) Tj T* ( 0 et Length:\\) Tj T* (  0) Tj T* (         Error Count:\\) Tj T* (          Last Error:\\) Tj T* (        Last Message: SUCCESS.  Files: 1, Bytes: 660876, 7252 CPS\\) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (connect\\) Tj T* (Connecting to host metis:513\\) Tj T* ( Escape character: Ctrl-\\ \(ASCII 28, FS\): enabled\\) Tj T* (Type the escape character followed by C to get back,\\) Tj T* (or followed by ? to see other options.\\) Tj T* (----------------------------------------------------\\) Tj T* (CACHE: Misaligned operation at range [80000000, 800a158c]\\) Tj T* (## Total Size      = 0x000a158c = 660876 Bytes\\) Tj T* (## Start Addr      = 0x80000000\\) Tj T* (=) Tj (>) Tj (\\) Tj T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 30 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
132 0 obj
<< /Length 3497 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 95.62362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 667.2 re B*
Q
q
BT 1 0 0 1 0 648.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( imi 80000000) Tj T*  T* (## Checking Image at 80000000 ...) Tj T* (   FIT image found) Tj T* (   FIT description: Firmware image with one or more FDT blobs) Tj T* (   Created:         2017-08-22   5:01:06 UTC) Tj T* (    Image 0 \(firmware@1\)) Tj T* (     Description:  U-Boot 2017.09-rc2-00151-g2d7cb5b426 for am335x board) Tj T* (     Created:      2017-08-22   5:01:06 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: 0x80800000) Tj T* (    Image 1 \(fdt@1\)) Tj T* (     Description:  am335x-evm) Tj T* (     Created:      2017-08-22   5:01:06 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 2 \(fdt@2\)) Tj T* (     Description:  am335x-bone) Tj T* (     Created:      2017-08-22   5:01:06 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 3 \(fdt@3\)) Tj T* (     Description:  am335x-boneblack) Tj T* (     Created:      2017-08-22   5:01:06 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 4 \(fdt@4\)) Tj T* (     Description:  am335x-evmsk) Tj T* (     Created:      2017-08-22   5:01:06 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 5 \(fdt@5\)) Tj T* (     Description:  am335x-bonegreen) Tj T* (     Created:      2017-08-22   5:01:06 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 6 \(fdt@6\)) Tj T* (     Description:  am335x-icev2) Tj T* (     Created:      2017-08-22   5:01:06 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Default Configuration: 'conf@1') Tj T* (    Configuration 0 \(conf@1\)) Tj T* (     Description:  am335x-evm) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@1) Tj T* (    Configuration 1 \(conf@2\)) Tj T* (     Description:  am335x-bone) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@2) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 31 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
133 0 obj
<< /Length 1343 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 574.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 188.4 re B*
Q
q
BT 1 0 0 1 0 169.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (    Configuration 2 \(conf@3\)) Tj T* (     Description:  am335x-boneblack) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@3) Tj T* (    Configuration 3 \(conf@4\)) Tj T* (     Description:  am335x-evmsk) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@4) Tj T* (    Configuration 4 \(conf@5\)) Tj T* (     Description:  am335x-bonegreen) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@5) Tj T* (    Configuration 5 \(conf@6\)) Tj T* (     Description:  am335x-icev2) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@6) Tj T* (## Checking hash\(es\) for FIT Image at 80000000 ...) Tj T* (   Hash\(es\) for Image 0 \(firmware@1\):  error!) Tj T* (Can't get image data/size for '' hash node in 'firmware@1' image node) Tj T* (Bad hash in FIT image!) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 564.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 32 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
134 0 obj
<< /Length 2071 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (loads - load S-Record file over serial line) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 659.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help loads) Tj T* (loads - load S-Record file over serial line) Tj T*  T* (Usage:) Tj T* (loads [ off ]) Tj T* (    - load S-Record file over serial line with offset 'off') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 626.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (rarpboot- boot image via network using RARP/TFTP protocol) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 560.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help rarp) Tj T* (Unknown command 'rarp' - try 'help' without arguments for list of all known commands) Tj T*  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 527.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (tftpboot- boot image via network using TFTP protocol) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 444.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help tftp) Tj T* (tftpboot - boot image via network using TFTP protocol) Tj T*  T* (Usage:) Tj T* (tftpboot [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 402.6236 cm
q
BT 1 0 0 1 0 4 Tm 212.1549 0 Td 24 TL /F3 20 Tf 0 0 0 rg (links) Tj T* -212.1549 0 Td ET
Q
Q
q
1 0 0 1 62.69291 384.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 33 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
135 0 obj
<< /Length 260 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 765.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 34 / 34) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
136 0 obj
<< /Nums [ 0 137 0 R 1 138 0 R 2 139 0 R 3 140 0 R 4 141 0 R 
  5 142 0 R 6 143 0 R 7 144 0 R 8 145 0 R 9 146 0 R 
  10 147 0 R 11 148 0 R 12 149 0 R 13 150 0 R 14 151 0 R 
  15 152 0 R 16 153 0 R 17 154 0 R 18 155 0 R 19 156 0 R 
  20 157 0 R 21 158 0 R 22 159 0 R 23 160 0 R 24 161 0 R 
  25 162 0 R 26 163 0 R 27 164 0 R 28 165 0 R 29 166 0 R 
  30 167 0 R 31 168 0 R 32 169 0 R 33 170 0 R ] >>
endobj
137 0 obj
<< /S /D /St 1 >>
endobj
138 0 obj
<< /S /D /St 2 >>
endobj
139 0 obj
<< /S /D /St 3 >>
endobj
140 0 obj
<< /S /D /St 4 >>
endobj
141 0 obj
<< /S /D /St 5 >>
endobj
142 0 obj
<< /S /D /St 6 >>
endobj
143 0 obj
<< /S /D /St 7 >>
endobj
144 0 obj
<< /S /D /St 8 >>
endobj
145 0 obj
<< /S /D /St 9 >>
endobj
146 0 obj
<< /S /D /St 10 >>
endobj
147 0 obj
<< /S /D /St 11 >>
endobj
148 0 obj
<< /S /D /St 12 >>
endobj
149 0 obj
<< /S /D /St 13 >>
endobj
150 0 obj
<< /S /D /St 14 >>
endobj
151 0 obj
<< /S /D /St 15 >>
endobj
152 0 obj
<< /S /D /St 16 >>
endobj
153 0 obj
<< /S /D /St 17 >>
endobj
154 0 obj
<< /S /D /St 18 >>
endobj
155 0 obj
<< /S /D /St 19 >>
endobj
156 0 obj
<< /S /D /St 20 >>
endobj
157 0 obj
<< /S /D /St 21 >>
endobj
158 0 obj
<< /S /D /St 22 >>
endobj
159 0 obj
<< /S /D /St 23 >>
endobj
160 0 obj
<< /S /D /St 24 >>
endobj
161 0 obj
<< /S /D /St 25 >>
endobj
162 0 obj
<< /S /D /St 26 >>
endobj
163 0 obj
<< /S /D /St 27 >>
endobj
164 0 obj
<< /S /D /St 28 >>
endobj
165 0 obj
<< /S /D /St 29 >>
endobj
166 0 obj
<< /S /D /St 30 >>
endobj
167 0 obj
<< /S /D /St 31 >>
endobj
168 0 obj
<< /S /D /St 32 >>
endobj
169 0 obj
<< /S /D /St 33 >>
endobj
170 0 obj
<< /S /D /St 34 >>
endobj
xref
0 171
0000000000 65535 f
0000000075 00000 n
0000000151 00000 n
0000000261 00000 n
0000000376 00000 n
0000000498 00000 n
0000000699 00000 n
0000000884 00000 n
0000001119 00000 n
0000001330 00000 n
0000001516 00000 n
0000001691 00000 n
0000001800 00000 n
0000001985 00000 n
0000002229 00000 n
0000002441 00000 n
0000002653 00000 n
0000002865 00000 n
0000003077 00000 n
0000003196 00000 n
0000003408 00000 n
0000003597 00000 n
0000003786 00000 n
0000003975 00000 n
0000004153 00000 n
0000004334 00000 n
0000004528 00000 n
0000004713 00000 n
0000004986 00000 n
0000007924 00000 n
0000009281 00000 n
0000009557 00000 n
0000009769 00000 n
0000009981 00000 n
0000010193 00000 n
0000010405 00000 n
0000010617 00000 n
0000010893 00000 n
0000011105 00000 n
0000011317 00000 n
0000011529 00000 n
0000011741 00000 n
0000011953 00000 n
0000012165 00000 n
0000012441 00000 n
0000012653 00000 n
0000012865 00000 n
0000013141 00000 n
0000013353 00000 n
0000013565 00000 n
0000013777 00000 n
0000013989 00000 n
0000014201 00000 n
0000014413 00000 n
0000014625 00000 n
0000014837 00000 n
0000014948 00000 n
0000015195 00000 n
0000015273 00000 n
0000015425 00000 n
0000015548 00000 n
0000015677 00000 n
0000015791 00000 n
0000015944 00000 n
0000016065 00000 n
0000016262 00000 n
0000016393 00000 n
0000016519 00000 n
0000016652 00000 n
0000016808 00000 n
0000016985 00000 n
0000017104 00000 n
0000017220 00000 n
0000017355 00000 n
0000017544 00000 n
0000017709 00000 n
0000017849 00000 n
0000018015 00000 n
0000018172 00000 n
0000018301 00000 n
0000018474 00000 n
0000018613 00000 n
0000018759 00000 n
0000018897 00000 n
0000019031 00000 n
0000019168 00000 n
0000019326 00000 n
0000019470 00000 n
0000019627 00000 n
0000019769 00000 n
0000019953 00000 n
0000020089 00000 n
0000020249 00000 n
0000020394 00000 n
0000020556 00000 n
0000020717 00000 n
0000020885 00000 n
0000021060 00000 n
0000021221 00000 n
0000021396 00000 n
0000021553 00000 n
0000021664 00000 n
0000021971 00000 n
0000026402 00000 n
0000027549 00000 n
0000030065 00000 n
0000031477 00000 n
0000033762 00000 n
0000034879 00000 n
0000038328 00000 n
0000042195 00000 n
0000045520 00000 n
0000047762 00000 n
0000049871 00000 n
0000052110 00000 n
0000053571 00000 n
0000055666 00000 n
0000059106 00000 n
0000062756 00000 n
0000064707 00000 n
0000068802 00000 n
0000070948 00000 n
0000074948 00000 n
0000078825 00000 n
0000081084 00000 n
0000082561 00000 n
0000086946 00000 n
0000088203 00000 n
0000093541 00000 n
0000094468 00000 n
0000096574 00000 n
0000098172 00000 n
0000102417 00000 n
0000105972 00000 n
0000107373 00000 n
0000109502 00000 n
0000109819 00000 n
0000110243 00000 n
0000110281 00000 n
0000110319 00000 n
0000110357 00000 n
0000110395 00000 n
0000110433 00000 n
0000110471 00000 n
0000110509 00000 n
0000110547 00000 n
0000110585 00000 n
0000110624 00000 n
0000110663 00000 n
0000110702 00000 n
0000110741 00000 n
0000110780 00000 n
0000110819 00000 n
0000110858 00000 n
0000110897 00000 n
0000110936 00000 n
0000110975 00000 n
0000111014 00000 n
0000111053 00000 n
0000111092 00000 n
0000111131 00000 n
0000111170 00000 n
0000111209 00000 n
0000111248 00000 n
0000111287 00000 n
0000111326 00000 n
0000111365 00000 n
0000111404 00000 n
0000111443 00000 n
0000111482 00000 n
0000111521 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(msa\251\354\370\374?\232\223\367\321\250r\325\341) (msa\251\354\370\374?\232\223\367\321\250r\325\341)]
 /Info 56 0 R /Root 55 0 R /Size 171 >>
startxref
111560
%%EOF
