%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 11 0 R /F5 18 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
5 0 obj
<< /A << /S /URI /Type /Action /URI (https://de.wikipedia.org/wiki/ReStructuredText) >> /Border [ 0 0 0 ] /Rect [ 207.6428 529.7736 285.6488 541.7736 ] /Subtype /Link /Type /Annot >>
endobj
6 0 obj
<< /A << /S /URI /Type /Action /URI (https://github.com/hsdenx/tbot) >> /Border [ 0 0 0 ] /Rect [ 344.4929 517.7736 363.9529 529.7736 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /Annots [ 5 0 R 6 0 R ] /Contents 157 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
8 0 obj
<< /Contents 158 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
9 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/U-Boot/) >> /Border [ 0 0 0 ] /Rect [ 167.7529 617.7736 308.9129 629.7736 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /A << /S /URI /Type /Action /URI (http://git.denx.de/) >> /Border [ 0 0 0 ] /Rect [ 239.8729 581.7736 316.5929 593.7736 ] /Subtype /Link /Type /Annot >>
endobj
11 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font >>
endobj
12 0 obj
<< /A << /S /URI /Type /Action /URI (ftp://ftp.denx.de/pub/u-boot/) >> /Border [ 0 0 0 ] /Rect [ 143.2729 450.3736 265.5829 462.3736 ] /Subtype /Link /Type /Annot >>
endobj
13 0 obj
<< /Annots [ 9 0 R 10 0 R 12 0 R ] /Contents 159 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
14 0 obj
<< /Contents 160 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
15 0 obj
<< /Contents 161 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
16 0 obj
<< /Contents 162 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
17 0 obj
<< /Contents 163 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
18 0 obj
<< /BaseFont /ZapfDingbats /Encoding /ZapfDingbatsEncoding /Name /F5 /Subtype /Type1 /Type /Font >>
endobj
19 0 obj
<< /Contents 164 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
20 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/DULG/ELDK) >> /Border [ 0 0 0 ] /Rect [ 79.37291 657.7736 105.4929 669.7736 ] /Subtype /Link /Type /Annot >>
endobj
21 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/DULG/ELDK) >> /Border [ 0 0 0 ] /Rect [ 366.1529 657.7736 395.0529 669.7736 ] /Subtype /Link /Type /Annot >>
endobj
22 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.denx.de/wiki/DULG/ELDK) >> /Border [ 0 0 0 ] /Rect [ 156.3017 639.7736 186.5295 651.7736 ] /Subtype /Link /Type /Annot >>
endobj
23 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.ubuntu.com/) >> /Border [ 0 0 0 ] /Rect [ 373.2365 573.1736 409.2459 585.1736 ] /Subtype /Link /Type /Annot >>
endobj
24 0 obj
<< /A << /S /URI /Type /Action /URI (http://fedoraproject.org/) >> /Border [ 0 0 0 ] /Rect [ 73.81291 506.5736 108.2729 518.5736 ] /Subtype /Link /Type /Annot >>
endobj
25 0 obj
<< /A << /S /URI /Type /Action /URI (http://openembedded.org/wiki/Main_Page) >> /Border [ 0 0 0 ] /Rect [ 194.4595 451.9736 270.4668 463.9736 ] /Subtype /Link /Type /Annot >>
endobj
26 0 obj
<< /A << /S /URI /Type /Action /URI (https://www.yoctoproject.org/) >> /Border [ 0 0 0 ] /Rect [ 282.5441 451.9736 342.4215 463.9736 ] /Subtype /Link /Type /Annot >>
endobj
27 0 obj
<< /Annots [ 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 26 0 R ] /Contents 165 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
28 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 128 /Length 2726 /SMask 29 0 R 
  /Subtype /Image /Type /XObject /Width 128 >>
stream
Gb"/gqbLGZ)9;W(?phFM!HZ?l0\AX,/d;u,WReIWo>?kOg"NH@du16.S#WJef;k4:;Ut+XF`"U%C+!RjZR.LPQRTAR3^D++82.bc)\^$>`Y_(mk8XSH#kiO\T5u&\hQK+0c7sV%n,%CU!@Npj6:4+-6UO4.6UO4.PLR-mZ[<_ENA;mmbGQQr/Wo,C&VuP4o'$F5cMa5D>lMpN4/Qj#jO4\HR/:B)lj1*<U]1)83h^qeFZKS1"$RV&`.YiH]63s\I8aiR@(/mpXH/XP`9Nuj>M.c\+`YW](]egSPgAL:+$\C*8F97RLfkfO8_cN]JpiZD$mVAls)\B`A<$+[apW"7IuIM<h>I1:7hAVM=C_8\IAW6c&G#&kaKmcS'?7cqqd_,e_;s&WE+a#U`qgL7&NYN"M917o:qC\U_Z,>Fs"AZUgqhof$2'o])#7\Frc`>GA^/)eh$Z`6rlF,*hKKJ8#>.Nf^clNhAo4?27,@DOj`^6(\=[O_(dTnM=d(I(1AUpqjU9o#dIDWecacf4No7aXr](6&9'2c0R.'J*i/*KPOGmZul9?gc<X:(eNtpI@=o;W-O=Z39m\C,^I),]4B"k=("Rl51KPP%h*^@I[7>.i++7$GgeO>)ePpW4_D\QWP*]`<P=8PVrjT>n2[A8j`ArhK4:I`,B]@Y_-b%'i".q:Y+$b7Hh75&_)FNelN&e`[QfHq.BPFms:=^qCbWBafF*C5pkhUid2T7F2f8aING"nNpF*6M[d&2eF`=T,EAM]?"mi5R)Er!*F9=e+l3D+2*jc5S;-T4eQ045/Ek`gGAu[N\UM@lG(<nPfmiJ,@X%Gd];<`!GArml]InC2YK9rcehD^LL<(HPld&iI&(B[_847qp1_kh.7,*+T]L':VcuZ'qp,toBNjaVst$NrQ!%HYNoe]*$N/o>$W<k@=&V4$-EKXD^q:8Q@RYt'FF2]D2\E>mXOZ<C-qs'5?:Y]i<^b\+1V&BV6d:`KR7>A-+I#!]g`PemLHIV8qd#T*d"csOYHfrr<[DO)qu6K#n6DJTCMs#IM2JM[^LmrAN]<=S.6cOj>6d\@,X=]%]u%\)6J)H;DA\DZH]ZQ-(5;CI'@ijB%LcXZ*q+;oR$Ae'\ct]iDDeskq03K[W;5RFDC`+I-uo01&_<1$[M@EGI<^Ss-&GTcFjeD@[uCY4off7jbUnd,D_6M(PhhB2ap6PqWF'-TgJ@G9f&oRdBUAebPTlC/n5C$i`uUnGtQ?Ghu7r0&>R9()FL1"5lPUrf?^h27*"h@V%EW)BEThQ"Y7r&!,U!5g0.[Sj8A+k+M/.!@!a1,,CcXg+D+r^iUlU8gHNF\Uqd7<s$G]>?'S-ZM9ank98"gGD3lK!ap4GdW3C"n;6Vl90:XO*ZidbsL_3fS0RNX]FT9h7btD,]$XEkhoZgSWaqsp4Xu#1jk2n(Z1l]3MTl5R2CstIVAPd@A^t`S!*<*S#r^"A9^gXKrD\)/@E9=p"_,'hSR#]^T:a=ZkqaHVX/:>._gsfkkN;8eIELQZdB`q7%*8D?S:H(1$nS`hI/m9-/lPo@)k)"7lO07DY@j=);Og)N=8@1-kE,>7lq;V5Ep#f,ZX3<8L#h\"g0;a6k&T%:[O3(nS8FiYt)J8tH.WV/?Oq6>.<=-DAG%@nP_0'p^pm!VW^ZgCAWJ6/lSbTofjjkSS_N@'EMrNXae_Y;RqI01H[JJG\\Z[*K&u`kks,6`ddA+i5[Ftc/_t[!'\pM!sV3:WQQU*eJ^AcpX\''a\eSV^_R=\Uj8$0M);Am*2Y06WCXd2Bq_(rVCek#m4Dr0-gb+Z_.[hs"b^&-JhNrcB2ZA9`-hV8U!,t%+m[s8XZ'S#kHrO6)r0`Fi#e:.j<Y9LFga$9D<6b)g"[U*PQJGE[Bh#Ee79B`KG(r>dY0(^r;!RAC#Tm`,1R3Oq!&S_HlrOWmN-rFD)$0<9-F=Db@r\n_D$8MJTp\!^BT.#Bn>uZ:,Mu]/92AX%WFM+m)HEtEYo.'&^(!b^'\\Ba^DmbS3PeV;pcgn,oankjhW3`$Ukde,0]ciF]5juHnIS\g"B?asm>pN*.Q$Y.HUA*_a"MVTdo_r'>of8lsX.mZG@6S#VmDEkS6!ne]a9Pt"P&\VT1&'iToX9U;JFT7*R#Y0AeCKdj5(3dND)c5PhlFqlW)jW.T57K"(J\oPk_6LNF<tR)8a7D3drR)G]lW!.]mWfN_V>#rc+0fMgf>mr(fMosHMl(IJ5UF`/D3UKa,k.SOq[[NC9+uOr6>fs,ojaus5_%,O;^p]]1)2p^gf.j>WI,h*T<<&^b6R^]:TiUC8t\Fj,nn:%>noL5P*:WmYl^,"Ng#fF]CKnEf$s1qF43(pGFh_bek1*%e#Fk/t9J-h_kuE?A!q$T<*;0;KGY-k\DKU)S*SnHAET[.'"@p_\J_/55&3Kj]hLkJ_r@@OqdR"/7+[304[k+RQp`B5(/tAme.4])Qld34Wamh^5h),%f`X.'OXK[RCOS#S^3lgQS\G_*m=]"_J?Yj^EeMWd2S71U@Pd4?^JuCOb3'?(3g9ics+IP!Y9IB9Z%P+T?>1pJOc?o@K/k1'n$k=GO)2T1mW5dMq>;&qk&H@aLCnU_%b7cA0@Q$IOWIq,B<?Jd*#rBT\\$@R6E9lq?B,M_^B3s8f7]/#2u5'q>u'C&SmF1Sd=LjMGSh0OLumpoF:C(1jfE?0a[k-0RB.G,0KpPe'QIgd*U.dd*U.8COQ9"oT8e~>endstream
endobj
29 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceGray /Decode [ 0 1 ] /Filter [ /ASCII85Decode /FlateDecode ] /Height 128 /Length 1142 
  /Subtype /Image /Type /XObject /Width 128 >>
stream
Gb"0UCIHue!6=VN]&-McgQkgG8P3Mb;V=YTM:f1+6oL0`<74r$fqe879o29F&W+FLdS2VL-!=,;d7''Vh(Rshf$_."bQ%E$ci:u0p\!M:k3mfFn*qB_b*FV`[NlR>0JUrdW#5P,L[0%8(#n87ERXFc7<muAgpZ:FKO9SJ.M^kDp%Q1,JS21p&*dWL`u?)r#1ej.H4l:-<3u8h@FAAW]\A1?^Z!2\Y;bQoHA6h2M7J*Kb0L#qc3)sln]@)A+INg[2f%*=Z")f1>NUKG-G7rj21NZ)L#6F##FZM!cd/`jkKiAhK@Y<UO?0#U`<2NmH,i?kJ'jC]?cL=mAQ3q>*M9P,UZm9gj+4BJq3W[]s!ibp5Jk_K,LlKn+ZtiZM0E);k-)ACnZ.B65W';Ul(LrRn-KQ=>::#(;rA=J_L5nqEF(dSS-PpIc_1Cp4A\;1GMa+tDn;/*)oV9^-_c"@WEB0WN25>YQ3[6lnu:Vo+I*d^5:=FBZR=kLQbijn#k?c`demBh14G-<*bZ_67p\aZ0-X!_6W/2;L]F%nSHlH2o1hsVMY2E[an<j=n3FNXhLAn(^[Ei%DjSKHmBZLh"2DXB+]aUf.[LB0AajX!o>#.`]^$IBJ'Cun?V>tUC*iGe7qDOm?tk'#)'8"(`$^EZ4PUef-1H)m8FaJk#q+2UjER=o2".\<dbjU,lSk!fJOYcLp_d67/6n_&:R27^7Ib)fGp#famk@PoT6Ck7Q]UB]'#D6,*Y!VF8#Y<;K*PQ`nkk`qr6$Ks^6T6>BEdqZ[!3]t!:R9gcX.GALFVNX5Qre_E'Vl:#iP;9C%=M:%j*0Gn8N#rj5ebNFEq8ao40nC2@nkgn?2*LrH4,\<(EPclE'P"a"7/K&8Q_J$QeN>_C#p74PUg</Fmu5Cj9@AiZ'FW`</OEGgC5MrjJ`8s-Xl<HnjY+33Lenml\J:+(31m""&C">9:k1`&fNSp(ndpTi0H(;#5_:jh4\^5+V/Uho;5mg@"`L8qVo2bNOHTYS'&PI*:\$_ZMnX]^q"YrlWLc(93VYJZ<KL8C.;r>3UZ=WXe-8TL5PaqRpOq\]3t[5MP`n.dMS_;:_pB=4U/KO"&23WDsjOa'JUW21Jt`.F$S7=m!tBRo@O\L"inElTaYF+WG1c~>endstream
endobj
30 0 obj
<< /Contents 166 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
31 0 obj
<< /Contents 167 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
32 0 obj
<< /Contents 168 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
33 0 obj
<< /Contents 169 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
34 0 obj
<< /Contents 170 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
35 0 obj
<< /Contents 171 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
36 0 obj
<< /Contents 172 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
37 0 obj
<< /Contents 173 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
38 0 obj
<< /Contents 174 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
39 0 obj
<< /Contents 175 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
40 0 obj
<< /Contents 176 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
41 0 obj
<< /Contents 177 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
42 0 obj
<< /Contents 178 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
43 0 obj
<< /Contents 179 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
44 0 obj
<< /Contents 180 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
45 0 obj
<< /Contents 181 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
46 0 obj
<< /Contents 182 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
47 0 obj
<< /Contents 183 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
48 0 obj
<< /Contents 184 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
49 0 obj
<< /Contents 185 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
50 0 obj
<< /Contents 186 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
51 0 obj
<< /Contents 187 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
52 0 obj
<< /Contents 188 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
53 0 obj
<< /Contents 189 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
54 0 obj
<< /Contents 190 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
55 0 obj
<< /Contents 191 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
56 0 obj
<< /Contents 192 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
57 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 16 /Length 131 /Mask [ 252 252 12 12 114 114 ] 
  /Subtype /Image /Type /XObject /Width 16 >>
stream
GatUn;$m:H#XnCeS[K3U_1bpQ`,\dbL\[(hLkaD?[Jj^2M:$pq88KM>*e<Ed#rS&(0:33G4R:&m]UE4%Cr?^__l(07>b%_eT758hrGVG*j8k1t,`tmtAq->9Lb2tTdo`7~>endstream
endobj
58 0 obj
<< /Contents 193 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R /FormXob.8de8427910dad6206a6d69120dc9c9cf 57 0 R >> >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
59 0 obj
<< /Contents 194 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
60 0 obj
<< /Contents 195 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
61 0 obj
<< /Contents 196 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
62 0 obj
<< /Contents 197 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
63 0 obj
<< /Contents 198 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
64 0 obj
<< /Contents 199 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
65 0 obj
<< /Contents 200 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
66 0 obj
<< /Contents 201 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
67 0 obj
<< /Contents 202 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
68 0 obj
<< /Contents 203 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
69 0 obj
<< /Contents 204 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
70 0 obj
<< /Contents 205 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
71 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 62.69291 731.5236 0 ] /Rect [ 97.15291 693.7736 238.8429 705.7736 ] /Subtype /Link /Type /Annot >>
endobj
72 0 obj
<< /BitsPerComponent 8 /ColorSpace /DeviceRGB /Filter [ /ASCII85Decode /FlateDecode ] /Height 16 /Length 129 /Mask [ 192 192 192 192 192 192 ] 
  /Subtype /Image /Type /XObject /Width 16 >>
stream
Gat=d$OX['#X`fXO4Kf2ITR.UZYlHN_3`[*)OL?/l29TCoHG>b:LnV8GY%<9p7ZI698/R`Nr=(Uba'P=;-h884O9qsYP_1'eo9U*pPC*^5BWqdM>K]^5NG9.%05VePQ~>endstream
endobj
73 0 obj
<< /Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 157.6128 648.0236 0 ] /Rect [ 118.2729 663.7736 293.3229 675.7736 ] /Subtype /Link /Type /Annot >>
endobj
74 0 obj
<< /Annots [ 71 0 R 73 0 R ] /Contents 206 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] /XObject << /FormXob.2500e21ba6b1543d9ba2126fde074a9d 28 0 R /FormXob.dcfda2e6b7dc748020d5b9302ed21d37 72 0 R >> >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
75 0 obj
<< /Contents 207 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
76 0 obj
<< /Contents 208 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
77 0 obj
<< /A << /S /URI /Type /Action /URI (http://git.denx.de/?p=u-boot.git;a=blob;f=test/py/README.md) >> /Border [ 0 0 0 ] /Rect [ 62.69291 699.7736 532.5827 711.7736 ] /Subtype /Link /Type /Annot >>
endobj
78 0 obj
<< /Annots [ 77 0 R ] /Contents 209 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
79 0 obj
<< /Contents 210 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 156 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
80 0 obj
<< /Outlines 82 0 R /PageLabels 211 0 R /PageMode /UseNone /Pages 156 0 R /Type /Catalog >>
endobj
81 0 obj
<< /Author () /CreationDate (D:20170829160104-01'00') /Creator (\(unspecified\)) /Keywords () /Producer (ReportLab PDF Library - www.reportlab.com) /Subject (\(unspecified\)) 
  /Title (U-Boot beagleboneblack Documentation) >>
endobj
82 0 obj
<< /Count 88 /First 83 0 R /Last 87 0 R /Type /Outlines >>
endobj
83 0 obj
<< /Count 3 /Dest [ 7 0 R /XYZ 62.69291 653.0236 0 ] /First 84 0 R /Last 86 0 R /Next 87 0 R /Parent 82 0 R 
  /Title (Abstract) >>
endobj
84 0 obj
<< /Dest [ 7 0 R /XYZ 62.69291 583.0236 0 ] /Next 85 0 R /Parent 83 0 R /Title (About this Document) >>
endobj
85 0 obj
<< /Dest [ 7 0 R /XYZ 62.69291 463.0236 0 ] /Next 86 0 R /Parent 83 0 R /Prev 84 0 R /Title (Introduction) >>
endobj
86 0 obj
<< /Dest [ 8 0 R /XYZ 62.69291 765.0236 0 ] /Parent 83 0 R /Prev 85 0 R /Title (Disclaimer) >>
endobj
87 0 obj
<< /Count 68 /Dest [ 13 0 R /XYZ 62.69291 765.0236 0 ] /First 88 0 R /Last 155 0 R /Parent 82 0 R /Prev 83 0 R 
  /Title (U-Boot) >>
endobj
88 0 obj
<< /Dest [ 13 0 R /XYZ 62.69291 695.0236 0 ] /Next 89 0 R /Parent 87 0 R /Title (Current Versions) >>
endobj
89 0 obj
<< /Count 2 /Dest [ 14 0 R /XYZ 62.69291 765.0236 0 ] /First 90 0 R /Last 91 0 R /Next 92 0 R /Parent 87 0 R 
  /Prev 88 0 R /Title (Get U-Boot code for the beagleboneblack) >>
endobj
90 0 obj
<< /Dest [ 14 0 R /XYZ 62.69291 723.0236 0 ] /Next 91 0 R /Parent 89 0 R /Title (define some PATH variables) >>
endobj
91 0 obj
<< /Dest [ 15 0 R /XYZ 62.69291 765.0236 0 ] /Parent 89 0 R /Prev 90 0 R /Title (clone the U-Boot code) >>
endobj
92 0 obj
<< /Dest [ 16 0 R /XYZ 62.69291 765.0236 0 ] /Next 93 0 R /Parent 87 0 R /Prev 89 0 R /Title (setup toolchain) >>
endobj
93 0 obj
<< /Dest [ 17 0 R /XYZ 62.69291 765.0236 0 ] /Next 94 0 R /Parent 87 0 R /Prev 92 0 R /Title (compile U-Boot for the beagleboneblack) >>
endobj
94 0 obj
<< /Count 2 /Dest [ 19 0 R /XYZ 62.69291 765.0236 0 ] /First 95 0 R /Last 96 0 R /Next 97 0 R /Parent 87 0 R 
  /Prev 93 0 R /Title (U-Boot installation) >>
endobj
95 0 obj
<< /Dest [ 19 0 R /XYZ 62.69291 723.0236 0 ] /Next 96 0 R /Parent 94 0 R /Title (install U-Boot) >>
endobj
96 0 obj
<< /Dest [ 19 0 R /XYZ 62.69291 435.4236 0 ] /Parent 94 0 R /Prev 95 0 R /Title (install SPL) >>
endobj
97 0 obj
<< /Dest [ 27 0 R /XYZ 62.69291 765.0236 0 ] /Next 98 0 R /Parent 87 0 R /Prev 94 0 R /Title (Tool Installation) >>
endobj
98 0 obj
<< /Count 56 /Dest [ 30 0 R /XYZ 62.69291 765.0236 0 ] /First 99 0 R /Last 153 0 R /Next 155 0 R /Parent 87 0 R 
  /Prev 97 0 R /Title (U-Boot Command Line Interface) >>
endobj
99 0 obj
<< /Count 4 /Dest [ 31 0 R /XYZ 62.69291 765.0236 0 ] /First 100 0 R /Last 103 0 R /Next 104 0 R /Parent 98 0 R 
  /Title (Information Commands) >>
endobj
100 0 obj
<< /Dest [ 31 0 R /XYZ 62.69291 729.0236 0 ] /Next 101 0 R /Parent 99 0 R /Title (bdinfo - print Board Info structure) >>
endobj
101 0 obj
<< /Dest [ 32 0 R /XYZ 62.69291 765.0236 0 ] /Next 102 0 R /Parent 99 0 R /Prev 100 0 R /Title (coninfo - print console devices and informations) >>
endobj
102 0 obj
<< /Dest [ 33 0 R /XYZ 62.69291 765.0236 0 ] /Next 103 0 R /Parent 99 0 R /Prev 101 0 R /Title (flinfo - print FLASH memory information) >>
endobj
103 0 obj
<< /Dest [ 34 0 R /XYZ 62.69291 765.0236 0 ] /Parent 99 0 R /Prev 102 0 R /Title (help - print online help) >>
endobj
104 0 obj
<< /Count 9 /Dest [ 35 0 R /XYZ 62.69291 765.0236 0 ] /First 105 0 R /Last 113 0 R /Next 114 0 R /Parent 98 0 R 
  /Prev 99 0 R /Title (Memory Commands) >>
endobj
105 0 obj
<< /Dest [ 35 0 R /XYZ 62.69291 729.0236 0 ] /Next 106 0 R /Parent 104 0 R /Title (base - print or set address offset) >>
endobj
106 0 obj
<< /Dest [ 35 0 R /XYZ 62.69291 500.2236 0 ] /Next 107 0 R /Parent 104 0 R /Prev 105 0 R /Title (crc32 - checksum calculation) >>
endobj
107 0 obj
<< /Dest [ 36 0 R /XYZ 62.69291 765.0236 0 ] /Next 108 0 R /Parent 104 0 R /Prev 106 0 R /Title (cmp - memory compare) >>
endobj
108 0 obj
<< /Dest [ 37 0 R /XYZ 62.69291 765.0236 0 ] /Next 109 0 R /Parent 104 0 R /Prev 107 0 R /Title (cp - memory copy) >>
endobj
109 0 obj
<< /Dest [ 38 0 R /XYZ 62.69291 765.0236 0 ] /Next 110 0 R /Parent 104 0 R /Prev 108 0 R /Title (md - memory display) >>
endobj
110 0 obj
<< /Dest [ 40 0 R /XYZ 62.69291 765.0236 0 ] /Next 111 0 R /Parent 104 0 R /Prev 109 0 R /Title (mm - memory modify \(auto-incrementing\)) >>
endobj
111 0 obj
<< /Dest [ 41 0 R /XYZ 62.69291 765.0236 0 ] /Next 112 0 R /Parent 104 0 R /Prev 110 0 R /Title (mw - memory write \(fill\)) >>
endobj
112 0 obj
<< /Dest [ 42 0 R /XYZ 62.69291 765.0236 0 ] /Next 113 0 R /Parent 104 0 R /Prev 111 0 R /Title (nm - memory modify \(constant address\)) >>
endobj
113 0 obj
<< /Dest [ 43 0 R /XYZ 62.69291 765.0236 0 ] /Parent 104 0 R /Prev 112 0 R /Title (loop - infinite loop on address range) >>
endobj
114 0 obj
<< /Count 3 /Dest [ 44 0 R /XYZ 62.69291 765.0236 0 ] /First 115 0 R /Last 117 0 R /Next 118 0 R /Parent 98 0 R 
  /Prev 104 0 R /Title (Execution Control Commands) >>
endobj
115 0 obj
<< /Dest [ 44 0 R /XYZ 62.69291 729.0236 0 ] /Next 116 0 R /Parent 114 0 R /Title (source - run script from memory) >>
endobj
116 0 obj
<< /Dest [ 46 0 R /XYZ 62.69291 765.0236 0 ] /Next 117 0 R /Parent 114 0 R /Prev 115 0 R /Title (bootm - boot application image from memory) >>
endobj
117 0 obj
<< /Dest [ 48 0 R /XYZ 62.69291 765.0236 0 ] /Parent 114 0 R /Prev 116 0 R /Title (go - start application at address 'addr') >>
endobj
118 0 obj
<< /Count 6 /Dest [ 49 0 R /XYZ 62.69291 765.0236 0 ] /First 119 0 R /Last 124 0 R /Next 125 0 R /Parent 98 0 R 
  /Prev 114 0 R /Title (Download Commands) >>
endobj
119 0 obj
<< /Dest [ 49 0 R /XYZ 62.69291 729.0236 0 ] /Next 120 0 R /Parent 118 0 R /Title (bootp - boot image via network using BOOTP/TFTP protocol) >>
endobj
120 0 obj
<< /Dest [ 49 0 R /XYZ 62.69291 613.4236 0 ] /Next 121 0 R /Parent 118 0 R /Prev 119 0 R /Title (dhcp - invoke DHCP client to obtain IP/boot params) >>
endobj
121 0 obj
<< /Dest [ 50 0 R /XYZ 62.69291 765.0236 0 ] /Next 122 0 R /Parent 118 0 R /Prev 120 0 R /Title (loadb - load binary file over serial line \(kermit mode\)) >>
endobj
122 0 obj
<< /Dest [ 53 0 R /XYZ 62.69291 765.0236 0 ] /Next 123 0 R /Parent 118 0 R /Prev 121 0 R /Title (loads - load S-Record file over serial line) >>
endobj
123 0 obj
<< /Dest [ 53 0 R /XYZ 62.69291 641.0236 0 ] /Next 124 0 R /Parent 118 0 R /Prev 122 0 R /Title (rarpboot- boot image via network using RARP/TFTP protocol) >>
endobj
124 0 obj
<< /Dest [ 53 0 R /XYZ 62.69291 542.2236 0 ] /Parent 118 0 R /Prev 123 0 R /Title (tftpboot- boot image via network using TFTP protocol) >>
endobj
125 0 obj
<< /Count 3 /Dest [ 54 0 R /XYZ 62.69291 765.0236 0 ] /First 126 0 R /Last 128 0 R /Next 129 0 R /Parent 98 0 R 
  /Prev 118 0 R /Title (Environment Variables Commands) >>
endobj
126 0 obj
<< /Dest [ 54 0 R /XYZ 62.69291 729.0236 0 ] /Next 127 0 R /Parent 125 0 R /Title (printenv- print environment variables) >>
endobj
127 0 obj
<< /Dest [ 56 0 R /XYZ 62.69291 430.4236 0 ] /Next 128 0 R /Parent 125 0 R /Prev 126 0 R /Title (saveenv - save environment variables to persistent storage) >>
endobj
128 0 obj
<< /Dest [ 56 0 R /XYZ 62.69291 182.2236 0 ] /Parent 125 0 R /Prev 127 0 R /Title (setenv - set environment variables) >>
endobj
129 0 obj
<< /Count 8 /Dest [ 59 0 R /XYZ 62.69291 765.0236 0 ] /First 130 0 R /Last 137 0 R /Next 138 0 R /Parent 98 0 R 
  /Prev 125 0 R /Title (Flattened Device Tree support) >>
endobj
130 0 obj
<< /Dest [ 59 0 R /XYZ 62.69291 436.0236 0 ] /Next 131 0 R /Parent 129 0 R /Title (fdt addr - select FDT to work on) >>
endobj
131 0 obj
<< /Dest [ 59 0 R /XYZ 62.69291 195.2236 0 ] /Next 132 0 R /Parent 129 0 R /Prev 130 0 R /Title (fdt list - print one level) >>
endobj
132 0 obj
<< /Dest [ 60 0 R /XYZ 62.69291 665.6236 0 ] /Next 133 0 R /Parent 129 0 R /Prev 131 0 R /Title (fdt print - recursive print) >>
endobj
133 0 obj
<< /Dest [ 60 0 R /XYZ 62.69291 423.6236 0 ] /Next 134 0 R /Parent 129 0 R /Prev 132 0 R /Title (fdt mknode - create new nodes) >>
endobj
134 0 obj
<< /Dest [ 61 0 R /XYZ 62.69291 287.6236 0 ] /Next 135 0 R /Parent 129 0 R /Prev 133 0 R /Title (fdt set - set node properties) >>
endobj
135 0 obj
<< /Dest [ 61 0 R /XYZ 62.69291 141.6236 0 ] /Next 136 0 R /Parent 129 0 R /Prev 134 0 R /Title (fdt rm - remove nodes or properties) >>
endobj
136 0 obj
<< /Dest [ 62 0 R /XYZ 62.69291 329.2236 0 ] /Next 137 0 R /Parent 129 0 R /Prev 135 0 R /Title (fdt move - move FDT blob to new address) >>
endobj
137 0 obj
<< /Dest [ 64 0 R /XYZ 62.69291 514.4236 0 ] /Parent 129 0 R /Prev 136 0 R /Title (fdt chosen - fixup dynamic info) >>
endobj
138 0 obj
<< /Count 1 /Dest [ 66 0 R /XYZ 62.69291 765.0236 0 ] /First 139 0 R /Last 139 0 R /Next 140 0 R /Parent 98 0 R 
  /Prev 129 0 R /Title (Special Commands) >>
endobj
139 0 obj
<< /Dest [ 66 0 R /XYZ 62.69291 729.0236 0 ] /Parent 138 0 R /Title (i2c - I2C sub-system) >>
endobj
140 0 obj
<< /Count 5 /Dest [ 67 0 R /XYZ 62.69291 765.0236 0 ] /First 141 0 R /Last 145 0 R /Next 146 0 R /Parent 98 0 R 
  /Prev 138 0 R /Title (Miscellaneous Commands) >>
endobj
141 0 obj
<< /Dest [ 67 0 R /XYZ 62.69291 729.0236 0 ] /Next 142 0 R /Parent 140 0 R /Title (echo - echo args to console) >>
endobj
142 0 obj
<< /Dest [ 67 0 R /XYZ 62.69291 533.6236 0 ] /Next 143 0 R /Parent 140 0 R /Prev 141 0 R /Title (reset - Perform RESET of the CPU) >>
endobj
143 0 obj
<< /Dest [ 68 0 R /XYZ 62.69291 765.0236 0 ] /Next 144 0 R /Parent 140 0 R /Prev 142 0 R /Title (sleep - delay execution for some time) >>
endobj
144 0 obj
<< /Dest [ 68 0 R /XYZ 62.69291 569.6236 0 ] /Next 145 0 R /Parent 140 0 R /Prev 143 0 R /Title (version - print monitor version) >>
endobj
145 0 obj
<< /Dest [ 68 0 R /XYZ 62.69291 303.4236 0 ] /Parent 140 0 R /Prev 144 0 R /Title (? - alias for 'help') >>
endobj
146 0 obj
<< /Dest [ 69 0 R /XYZ 62.69291 765.0236 0 ] /Next 147 0 R /Parent 98 0 R /Prev 140 0 R /Title (U-Boot Environment Variables) >>
endobj
147 0 obj
<< /Dest [ 74 0 R /XYZ 62.69291 765.0236 0 ] /Next 148 0 R /Parent 98 0 R /Prev 146 0 R /Title (U-Boot Scripting Capabilities) >>
endobj
148 0 obj
<< /Count 4 /Dest [ 74 0 R /XYZ 62.69291 645.0236 0 ] /First 149 0 R /Last 152 0 R /Next 153 0 R /Parent 98 0 R 
  /Prev 147 0 R /Title (How the Command Line Parsing Works) >>
endobj
149 0 obj
<< /Dest [ 74 0 R /XYZ 62.69291 567.0236 0 ] /Next 150 0 R /Parent 148 0 R /Title (Old, simple command line parser) >>
endobj
150 0 obj
<< /Dest [ 74 0 R /XYZ 62.69291 299.8236 0 ] /Next 151 0 R /Parent 148 0 R /Prev 149 0 R /Title (Hush shell) >>
endobj
151 0 obj
<< /Dest [ 75 0 R /XYZ 62.69291 592.0236 0 ] /Next 152 0 R /Parent 148 0 R /Prev 150 0 R /Title (Hush shell scripts) >>
endobj
152 0 obj
<< /Dest [ 76 0 R /XYZ 62.69291 569.2236 0 ] /Parent 148 0 R /Prev 151 0 R /Title (General rules) >>
endobj
153 0 obj
<< /Count 1 /Dest [ 78 0 R /XYZ 62.69291 765.0236 0 ] /First 154 0 R /Last 154 0 R /Parent 98 0 R /Prev 148 0 R 
  /Title (U-Boot pytest suite) >>
endobj
154 0 obj
<< /Dest [ 78 0 R /XYZ 62.69291 681.0236 0 ] /Parent 153 0 R /Title (Test py results) >>
endobj
155 0 obj
<< /Dest [ 78 0 R /XYZ 62.69291 439.4236 0 ] /Parent 87 0 R /Prev 98 0 R /Title (links) >>
endobj
156 0 obj
<< /Count 54 /Kids [ 7 0 R 8 0 R 13 0 R 14 0 R 15 0 R 16 0 R 17 0 R 19 0 R 27 0 R 30 0 R 
  31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 
  41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 
  51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 56 0 R 58 0 R 59 0 R 60 0 R 61 0 R 
  62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 74 0 R 
  75 0 R 76 0 R 78 0 R 79 0 R ] /Type /Pages >>
endobj
157 0 obj
<< /Length 4373 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 693.0236 cm
q
BT 1 0 0 1 0 42 Tm 59.08488 0 Td 36 TL /F2 30 Tf 0 0 0 rg (U-Boot beagleboneblack) Tj T* 66.69 0 Td (Documentation) Tj T* -125.7749 0 Td ET
Q
Q
q
1 0 0 1 62.69291 623.0236 cm
q
BT 1 0 0 1 0 5 Tm 184.2449 0 Td 30 TL /F2 25 Tf 0 0 0 rg (Abstract) Tj T* -184.2449 0 Td ET
Q
Q
q
1 0 0 1 62.69291 559.0236 cm
q
BT 1 0 0 1 0 4 Tm 133.8349 0 Td 24 TL /F3 20 Tf 0 0 0 rg (About this Document) Tj T* -133.8349 0 Td ET
Q
Q
q
1 0 0 1 62.69291 517.0236 cm
q
BT 1 0 0 1 0 14 Tm .755984 Tw 12 TL /F1 10 Tf 0 0 0 rg (The documentation is written in ) Tj 0 0 .501961 rg (reStructuredText ) Tj 0 0 0 rg (and converted into a pdf document. Some parts of this) Tj T* 0 Tw (document are created automatically out of the log files from the ) Tj 0 0 .501961 rg (tbot ) Tj 0 0 0 rg (build process.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 499.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This document is generated for the beagleboneblack with U-Boot version) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 481.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (U-Boot 2017.09-rc2-00151-g2d7cb5b \(Aug 23 2017 - 08:35:31 +0200\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 439.0236 cm
q
BT 1 0 0 1 0 4 Tm 176.6149 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Introduction) Tj T* -176.6149 0 Td ET
Q
Q
q
1 0 0 1 62.69291 397.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .831318 Tw (This document describes how to use the firmware U-Boot and the operating system Linux in Embedded) Tj T* 0 Tw (Power Architecture\256, ARM and MIPS Systems.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 355.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .382846 Tw (There are many steps along the way, and it is nearly impossible to cover them all in depth, but we will try) Tj T* 0 Tw 1.054651 Tw (to provide all necessary information to get an embedded system running from scratch. This includes all) Tj T* 0 Tw (the tools you will probably need to configure, build and run U-Boot and Linux.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 313.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.012126 Tw (First, we describe how to install the Cross Development Tools Embedded Linux Development Kit which) Tj T* 0 Tw .427488 Tw (you probably need - at least when you use a standard x86 PC running Linux or a Sun Solaris 2.6 system) Tj T* 0 Tw (as build environment.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 283.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .093488 Tw (Then we describe what needs to be done to connect to the serial console port of your target: you will have) Tj T* 0 Tw (to configure a terminal emulation program like cu or kermit.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 253.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.494431 Tw (In most cases you will want to load images into your target using ethernet; for this purpose you need) Tj T* 0 Tw (TFTP and DHCP / BOOTP servers. A short description of their configuration is given.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 223.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .30528 Tw (A description follows of what needs to be done to configure and build the U-Boot for the beagleboneblack) Tj T* 0 Tw (board, and how to install it and get it working on that board.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 169.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .60311 Tw (The configuration, building and installing of Linux in an embedded configuration is the next step. We use) Tj T* 0 Tw .089984 Tw (SELF, our Simple Embedded Linux Framework, to demonstrate how to set up both a development system) Tj T* 0 Tw 2.319983 Tw (\(with the root filesystem mounted over NFS\) and an embedded target configuration \(running from a) Tj T* 0 Tw (ramdisk image based on busybox\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 139.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.678876 Tw (This document does not describe what needs to be done to port U-Boot or Linux to a new hardware) Tj T* 0 Tw (platform. Instead, it is silently assumed that your board is already supported by U-Boot and Linux.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 139.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 1 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
158 0 obj
<< /Length 1089 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 184.3649 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Disclaimer) Tj T* -184.3649 0 Td ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL 2.13561 Tw (Use the information in this document at your own risk. DENX disavows any potential liability for the) Tj T* 0 Tw 2.162651 Tw (contents of this document. Use of the concepts, examples, and/or other content of this document is) Tj T* 0 Tw 1.203984 Tw (entirely at your own risk. All copyrights are owned by their owners, unless specifically noted otherwise.) Tj T* 0 Tw .041567 Tw (Use of a term in this document should not be regarded as affecting the validity of any trademark or service) Tj T* 0 Tw (mark. Naming of particular products or brands should not be seen as endorsements.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 2 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
159 0 obj
<< /Length 2458 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 735.0236 cm
q
BT 1 0 0 1 0 5 Tm 193.2949 0 Td 30 TL /F2 25 Tf 0 0 0 rg (U-Boot) Tj T* -193.2949 0 Td ET
Q
Q
q
1 0 0 1 62.69291 671.0236 cm
q
BT 1 0 0 1 0 4 Tm 153.8149 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Current Versions) Tj T* -153.8149 0 Td ET
Q
Q
q
1 0 0 1 62.69291 617.0236 cm
q
BT 1 0 0 1 0 26 Tm 1.56784 Tw 12 TL /F1 10 Tf 0 0 0 rg (Das U-Boot \(or just "U-Boot" for short\) is Open Source Firmware for Embedded Power Architecture\256,) Tj T* 0 Tw .734104 Tw (ARM, MIPS, x86 and other processors. The U-Boot project is hosted by DENX, where you can also find) Tj T* 0 Tw (the project home page: ) Tj 0 0 .501961 rg (http://www.denx.de/wiki/U-Boot/) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 599.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The current version of the U-Boot source code can be retrieved from the DENX "git" repository.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 581.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can browse the "git" repositories at ) Tj 0 0 .501961 rg (http://git.denx.de/) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 551.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .598876 Tw (The trees can be accessed through the git, HTTP, and rsync protocols. For example you can use one of) Tj T* 0 Tw (the following commands to create a local clone of one of the source trees:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 501.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 37.2 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 18.2 Tm /F4 7 Tf 8.4 TL (git clone git://git.denx.de/u-boot.git u-boot/) Tj T* (git clone http://git.denx.de/u-boot.git u-boot/) Tj T* (git clone rsync://git.denx.de/u-boot.git u-boot/) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 479.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For details please see here.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 449.6236 cm
q
BT 1 0 0 1 0 14 Tm 1.729982 Tw 12 TL /F1 10 Tf 0 0 0 rg (Official releases of U-Boot are also available through FTP. Compressed tar archives can downloaded) Tj T* 0 Tw (from the directory ) Tj 0 0 .501961 rg (ftp://ftp.denx.de/pub/u-boot/) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 449.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 3 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
160 0 obj
<< /Length 1354 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 38.24488 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Get U-Boot code for the beagleboneblack) Tj T* -38.24488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
q
BT 1 0 0 1 0 3 Tm 134.0774 0 Td 18 TL /F3 15 Tf 0 0 0 rg (define some PATH variables) Tj T* -134.0774 0 Td ET
Q
Q
q
1 0 0 1 62.69291 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Export our workdirectory:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 634.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ export TBOT_BASEDIR=/work/hs/tbot) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 612.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and cd into it) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 571.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ cd $TBOT_BASEDIR) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 4 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
161 0 obj
<< /Length 2227 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 155.3549 0 Td 18 TL /F3 15 Tf 0 0 0 rg (clone the U-Boot code) Tj T* -155.3549 0 Td ET
Q
Q
q
1 0 0 1 62.69291 717.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now we simply clone the U-Boots source code with git:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 659.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26.6 Tm /F4 7 Tf 8.4 TL ($ git clone /home/hs/git/u-boot u-boot-am335x_evm) Tj T* (Klone nach 'u-boot-am335x_evm'...) Tj T* (Fertig.) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 637.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (cd into it) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 596.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ cd u-boot-am335x_evm) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 574.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (checkout the branch you want to test) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 516.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26.6 Tm /F4 7 Tf 8.4 TL ($ git checkout master) Tj T* (Bereits auf 'master') Tj T* (Ihr Branch ist auf dem selben Stand wie 'origin/master'.) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 494.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (just for the records, print some info of the branch) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 445.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 37.2 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 18.2 Tm /F4 7 Tf 8.4 TL ($ git describe --tags) Tj T* (v2017.09-rc2-151-g2d7cb5b) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 435.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 5 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
162 0 obj
<< /Length 1047 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 161.0449 0 Td 24 TL /F3 20 Tf 0 0 0 rg (setup toolchain) Tj T* -161.0449 0 Td ET
Q
Q
q
1 0 0 1 62.69291 711.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This depends on the toolchain you use.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 653.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 486.6 45.6 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26.6 Tm /F4 7 Tf 8.4 TL ($ printenv PATH | grep --color=never /opt/eldk-5.4/armv5te/sysroots/i686-eldk-linux/usr/bin/armv5te-linux-gnueabi) Tj T* ($ export PATH=/opt/eldk-5.4/armv5te/sysroots/i686-eldk-linux/usr/bin/armv5te-linux-gnueabi:$PATH) Tj T* ($ export CROSS_COMPILE=arm-linux-gnueabi-) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 643.2236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 6 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
163 0 obj
<< /Length 3901 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 43.24488 0 Td 24 TL /F3 20 Tf 0 0 0 rg (compile U-Boot for the beagleboneblack) Tj T* -43.24488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 711.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Add the path to the dtc command to your PATH variable) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 670.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ export PATH=$TBOT_BASEDIR/dtc:$PATH) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 648.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (clean the source code) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 607.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ make mrproper) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (configure source for the beagleboneblack) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 460.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 112.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 93.8 Tm /F4 7 Tf 8.4 TL ($ make am335x_evm_defconfig) Tj T* (  HOSTCC  scripts/basic/fixdep) Tj T* (  HOSTCC  scripts/kconfig/conf.o) Tj T* (  SHIPPED scripts/kconfig/zconf.tab.c) Tj T* (  SHIPPED scripts/kconfig/zconf.lex.c) Tj T* (  SHIPPED scripts/kconfig/zconf.hash.c) Tj T* (  HOSTCC  scripts/kconfig/zconf.tab.o) Tj T* (  HOSTLD  scripts/kconfig/conf) Tj T* (#) Tj T* (# configuration written to .config) Tj T* (#) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 438.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now compile it) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 346.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 79.2 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 60.2 Tm /F4 7 Tf 8.4 TL ($ make -s DTC_FLAGS="-S 0xb000" all) Tj T* (*** Your GCC is older than 6.0 and will not be supported starting in v2018.01.) Tj T* (===================== WARNING ======================) Tj T* (This board uses CONFIG_DM_I2C_COMPAT. Please remove) Tj T* (\(possibly in a subsequent patch in your series\)) Tj T* (before sending patches to the mailing list.) Tj T* (====================================================) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 324.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (after U-Boot is compiled, copy the resulting binaries we need later to our tftpboot directory.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 250.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 43.4 Tm /F4 7 Tf 8.4 TL ($ cp u-boot.bin /var/lib/tftpboot/beagleboneblack/tbot) Tj T* ($) Tj T* ($ cp u-boot.img /var/lib/tftpboot/beagleboneblack/tbot) Tj T* ($) Tj T* ($ cp MLO /var/lib/tftpboot/beagleboneblack/tbot) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 228.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We also copy the u-boot.dtb file to our tftp directory, as we do some testing with it later.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 187.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL ($ cp u-boot.dtb /var/lib/tftpboot/beagleboneblack/tbot) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 177.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 7 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
164 0 obj
<< /Length 3814 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 146.0549 0 Td 24 TL /F3 20 Tf 0 0 0 rg (U-Boot installation) Tj T* -146.0549 0 Td ET
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
q
BT 1 0 0 1 0 3 Tm 186.1949 0 Td 18 TL /F3 15 Tf 0 0 0 rg (install U-Boot) Tj T* -186.1949 0 Td ET
Q
Q
q
1 0 0 1 62.69291 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (for this example, we install the new U-Boot on the SD card, as we use SD card bootmode.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 608.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( print tbot_upd_uboot load_uboot upd_uboot) Tj T* (tbot_upd_uboot=run load_uboot;run upd_uboot) Tj T* (load_uboot=tftp ${load_addr_r} ${ubfile}) Tj T* (upd_uboot=fatwrite mmc 1:1 ${load_addr_r} u-boot.img ${filesize}) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 586.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tfpt the new u-boot image into ram and write it to the sd card.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 453.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( run tbot_upd_uboot) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.11) Tj T* (Filename 'beagleboneblack/tbot/u-boot.img'.) Tj T* (Load address: 0x81000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (###################################################) Tj T* (       4.6 MiB/s) Tj T* (done) Tj T* (Bytes transferred = 734224 \(b3410 hex\)) Tj T* (writing u-boot.img) Tj T* (734224 bytes written) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 417.4236 cm
q
BT 1 0 0 1 0 3 Tm 196.5974 0 Td 18 TL /F3 15 Tf 0 0 0 rg (install SPL) Tj T* -196.5974 0 Td ET
Q
Q
q
1 0 0 1 62.69291 387.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (for this example, we install the new SPL on the SD card, as we use SD card bootmode.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 321.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( print tbot_upd_spl load_mlo upd_mlo) Tj T* (tbot_upd_spl=run load_mlo;run upd_mlo) Tj T* (load_mlo=tftp ${load_addr_r} ${mlofile}) Tj T* (upd_mlo=fatwrite mmc 1:1 ${load_addr_r} mlo ${filesize}) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 299.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tfpt the new SPL image into ram and write it to the sd card.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 165.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( run tbot_upd_spl) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.11) Tj T* (Filename 'beagleboneblack/tbot/MLO'.) Tj T* (Load address: 0x81000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (#######) Tj T* (       4.3 MiB/s) Tj T* (done) Tj T* (Bytes transferred = 95468 \(174ec hex\)) Tj T* (writing mlo) Tj T* (95468 bytes written) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 155.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 8 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
165 0 obj
<< /Length 3267 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 158.2649 0 Td 24 TL /F3 20 Tf 0 0 0 rg (Tool Installation) Tj T* -158.2649 0 Td ET
Q
Q
q
1 0 0 1 62.69291 687.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .015868 Tw (U-Boot uses a special image format when loading the Linux kernel or ramdisk or other images. This image) Tj T* 0 Tw .103828 Tw (contains \(among other things\) information about the time of creation, operating system, compression type,) Tj T* 0 Tw (image type, image name and CRC32 checksums.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 657.0236 cm
q
BT 1 0 0 1 0 14 Tm .864104 Tw 12 TL /F1 10 Tf 0 0 0 rg (The tool ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (is used to create such images or to display the information they contain. When using) Tj T* 0 Tw (the ) Tj 0 0 .501961 rg (ELDK) Tj 0 0 0 rg (, the ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (command is already included with the other ) Tj 0 0 .501961 rg (ELDK ) Tj 0 0 0 rg (tools.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 627.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.327765 Tw 12 TL /F1 10 Tf 0 0 0 rg (If you don't use the ) Tj 0 0 .501961 rg (ELDK ) Tj 0 0 0 rg (then you should install ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (in some directory that is in your command) Tj T* 0 Tw (search PATH, for instance:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 594.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL ($ cp tools/mkimage /usr/local/bin/) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 560.4236 cm
q
BT 1 0 0 1 0 14 Tm .98936 Tw 12 TL /F1 10 Tf 0 0 0 rg (mkimage is readily available in several distributions; for example, in ) Tj 0 0 .501961 rg (Ubuntu ) Tj 0 0 0 rg (it is part of the ) Tj 1 0 0 rg (u-boot-tools) Tj T* 0 Tw 0 0 0 rg (package, so it can be installed with:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 527.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL ($ sudo apt-get install u-boot-tools) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 505.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (In ) Tj 0 0 .501961 rg (Fedora ) Tj 0 0 0 rg (the package name is ) Tj 1 0 0 rg (uboot-tools) Tj 0 0 0 rg (, and the command to install it is:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 473.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL ($ sudo dnf install uboot-tools) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 439.2236 cm
q
BT 1 0 0 1 0 14 Tm .407318 Tw 12 TL /F1 10 Tf 0 0 0 rg (Finally, if you're building with ) Tj 0 0 .501961 rg (OpenEmbedded ) Tj 0 0 0 rg (or ) Tj 0 0 .501961 rg (Yocto Project) Tj 0 0 0 rg (, you would want to add the ) Tj 1 0 0 rg (u-boot-fw-utils) Tj T* 0 Tw 0 0 0 rg (recipe to your image.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 439.2236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 119.7649 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 9 / 54) Tj T* -119.7649 0 Td ET
Q
Q
 
endstream
endobj
166 0 obj
<< /Length 2167 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 82.15488 0 Td 24 TL /F3 20 Tf 0 0 0 rg (U-Boot Command Line Interface) Tj T* -82.15488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 2.24229 Tw (The following section describes the most important commands available in U-Boot. Please note that) Tj T* 0 Tw 1.924985 Tw (U-Boot is highly configurable, so not all of these commands may be available in the configuration of) Tj T* 0 Tw .29311 Tw (U-Boot installed on your hardware, or additional commands may exist. You can use the help command to) Tj T* 0 Tw (print a list of all available commands for your configuration.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 645.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .622488 Tw (For most commands, you do not need to type in the full command name; instead it is sufficient to type a) Tj T* 0 Tw (few characters. For instance, help can be abbreviated as h.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 615.0236 cm
q
q
19.2 0 0 19.2 0 12 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
BT 1 0 0 1 0 14 Tm .881984 Tw 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (The behaviour of some commands depends on the configuration of U-Boot and on the definition of) Tj T* -19.2 0 Td 0 Tw (some variables in your U-Boot environment.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .73284 Tw (Almost all U-Boot commands expect numbers to be entered in hexadecimal input format. \(Exception: for) Tj T* 0 Tw (historical reasons, the sleep command takes its argument in decimal input format.\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 555.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.946651 Tw (Be careful not to use edit keys besides 'Backspace', as hidden characters in things like environment) Tj T* 0 Tw (variables can be very difficult to find.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 555.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 10 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
167 0 obj
<< /Length 2051 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 150.7724 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Information Commands) Tj T* -150.7724 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (bdinfo - print Board Info structure) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 631.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help bdinfo) Tj T* (bdinfo - print Board Info structure) Tj T*  T* (Usage:) Tj T* (bdinfo) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 585.4236 cm
q
BT 1 0 0 1 0 26 Tm 1.349984 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (bdinfo ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (bdi) Tj 0 0 0 rg (\) prints the information that U-Boot passes about the board such as memory) Tj T* 0 Tw 2.241412 Tw (addresses and sizes, clock frequencies, MAC address, etc. This information is mainly needed to be) Tj T* 0 Tw (passed to the Linux kernel.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 435.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 138 re B*
Q
q
BT 1 0 0 1 0 119 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( bdi) Tj T* (arch_number = 0x00000E05) Tj T* (boot_params = 0x80000100) Tj T* (DRAM bank   = 0x00000000) Tj T* (-) Tj (>) Tj ( start    = 0x80000000) Tj T* (-) Tj (>) Tj ( size     = 0x20000000) Tj T* (baudrate    = 115200 bps) Tj T* (TLB addr    = 0x9FFF0000) Tj T* (relocaddr   = 0x9FF4E000) Tj T* (reloc off   = 0x1F74E000) Tj T* (irq_sp      = 0x9DF21EC0) Tj T* (sp start    = 0x9DF21EB0) Tj T* (Early malloc usage: 188 / 400) Tj T* (fdt_blob = 9df21ed8) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 425.2236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 11 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
168 0 obj
<< /Length 2181 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (coninfo - print console devices and informations) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help conin) Tj T* (coninfo - print console devices and information) Tj T*  T* (Usage:) Tj T* (coninfo) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (coninfo ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (conin) Tj 0 0 0 rg (\) displays information about the available console I/O devices.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 579.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( conin) Tj T* (List of available devices:) Tj T* (serial@44e09000 00000007 IO stdin stdout stderr) Tj T* (serial   00000003 IO) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 557.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The output contains the device name, flags, and the current usage. For example, the output) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 524.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL (serial@44e09000 00000003 IO stdin stdout stderr) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 490.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.829985 Tw (means that the serial device provides input \(flag 'I'\) and output \(flag 'O'\) functionality and is currently) Tj T* 0 Tw (assigned to the 3 standard I/O streams stdin, stdout and stderr.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 490.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 12 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
169 0 obj
<< /Length 1403 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (flinfo - print FLASH memory information) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help flinfo) Tj T* (Unknown command 'flinfo' - try 'help' without arguments for list of all known commands) Tj T*  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 650.2236 cm
q
BT 1 0 0 1 0 14 Tm 1.82186 Tw 12 TL /F1 10 Tf 0 0 0 rg (The command ) Tj 1 0 0 rg (flinfo ) Tj 0 0 0 rg (\() Tj 1 0 0 rg (fli) Tj 0 0 0 rg (\) can be used to get information about the available flash memory \(see Flash) Tj T* 0 Tw (Memory Commands below\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 600.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 37.2 re B*
Q
q
BT 1 0 0 1 0 18.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( flinfo) Tj T* (Unknown command 'flinfo' - try 'help') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 590.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 13 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
170 0 obj
<< /Length 2037 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (help - print online help) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 642.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 87.6 re B*
Q
q
BT 1 0 0 1 0 68.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help help) Tj T* (help - print command description/usage) Tj T*  T* (Usage:) Tj T* (help) Tj T* (      - print brief description of all commands) Tj T* (help command ...) Tj T* (      - print detailed usage of 'command') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 596.2236 cm
q
BT 1 0 0 1 0 26 Tm 2.422765 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (help ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (h ) Tj 0 0 0 rg (or ) Tj 1 0 0 rg (?) Tj 0 0 0 rg (\) prints online help. Without any arguments, it prints a list of all U-Boot) Tj T* 0 Tw 2.163984 Tw (commands that are available in your configuration of U-Boot. You can get detailed information for a) Tj T* 0 Tw (specific command by typing its name as argument to the help command:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 462.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help printenv tftp) Tj T* (printenv - print environment variables) Tj T*  T* (Usage:) Tj T* (printenv [-a]) Tj T* (    - print [all] values of all environment variables) Tj T* (printenv name ...) Tj T* (    - print value of environment variable 'name') Tj T* (tftpboot - boot image via network using TFTP protocol) Tj T*  T* (Usage:) Tj T* (tftpboot [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 452.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 14 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
171 0 obj
<< /Length 3394 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 163.2674 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Memory Commands) Tj T* -163.2674 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (base - print or set address offset) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 606.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 87.6 re B*
Q
q
BT 1 0 0 1 0 68.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help base) Tj T* (base - print or set address offset) Tj T*  T* (Usage:) Tj T* (base) Tj T* (    - print address offset for memory commands) Tj T* (base off) Tj T* (    - set address offset for memory commands to 'off') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 536.2236 cm
q
BT 1 0 0 1 0 50 Tm .121417 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can use the ) Tj 1 0 0 rg (base ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (ba) Tj 0 0 0 rg (\) to print or set a "base address" that is used as the address offset for) Tj T* 0 Tw .274692 Tw (all subsequent memory commands; the default value of the base address is 0, so all addresses you enter) Tj T* 0 Tw 1.239318 Tw (are used unmodified. However, when you repeatedly have to access a certain memory region \(like the) Tj T* 0 Tw .192651 Tw (internal memory of some embedded Power Architecture\256 processors\) it can be very convenient to set the) Tj T* 0 Tw (base address to the start of this area and then use only the offsets:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 518.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (ToDo) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 485.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (crc32 - checksum calculation) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 455.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (crc32 ) Tj 0 0 0 rg (command \() Tj 1 0 0 rg (crc) Tj 0 0 0 rg (\) can be used to calculate a CRC32 checksum over a range of memory:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 414.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
BT 1 0 0 1 0 9.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( crc 0x80000004 0x3fc a6d53e40) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 392.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (When used with 3 arguments, the command stores the calculated checksum at the given address:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 334.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( crc 0x80000004 0x3fc 0x80000000 a6d53e40) Tj T* (=) Tj (>) Tj ( md 0x80000000 4) Tj T* (80000000: 403ed5a6 b9070000 38000000 38070000    ..) Tj (>) Tj (@.......8...8) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 300.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .391567 Tw (As you can see, the CRC32 checksum was not only printed, but also stored at address passed in the 3th) Tj T* 0 Tw (argument.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 300.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 15 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
172 0 obj
<< /Length 3570 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (cmp - memory compare) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help cmp) Tj T* (cmp - memory compare) Tj T*  T* (Usage:) Tj T* (cmp [.b, .w, .l] addr1 addr2 count) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 621.4236 cm
q
BT 1 0 0 1 0 26 Tm .476654 Tw 12 TL /F1 10 Tf 0 0 0 rg (With the ) Tj 1 0 0 rg (cmp ) Tj 0 0 0 rg (command you can test whether the contents of two memory areas are identical or not. The) Tj T* 0 Tw 1.495542 Tw (command will test either the whole area as specified by the 3rd \(length\) argument, or stop at the first) Tj T* 0 Tw (difference.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 504.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
BT 1 0 0 1 0 85.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cmp 0x80000000 0x80100000 40000) Tj T* (Total of 262144 word\(s\) were the same) Tj T* (=) Tj (>) Tj ( md 0x80000000 0xc) Tj T* (80000000: 1cec5b8c 381401ad 6778e393 01fbbcc3    .[.....8..xg....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (=) Tj (>) Tj ( md 0x80100000 0xc) Tj T* (80100000: 1cec5b8c 381401ad 6778e393 01fbbcc3    .[.....8..xg....) Tj T* (80100010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80100020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 434.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .43436 Tw (Like most memory commands the :redtext:cmp` can access the memory in different sizes: as 32 bit \(long) Tj T* 0 Tw .971807 Tw (word\), 16 bit \(word\) or 8 bit \(byte\) data. If invoked just as cmp the default size \(32 bit or long words\) is) Tj T* 0 Tw .275777 Tw (used; the same can be selected explicitly by typing cmp.l instead. If you want to access memory as 16 bit) Tj T* 0 Tw .483488 Tw (or word data, you can use the variant cmp.w instead; and to access memory as 8 bit or byte data please) Tj T* 0 Tw (use cmp.b.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 404.8236 cm
q
q
19.2 0 0 19.2 0 12 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
BT 1 0 0 1 0 14 Tm .451751 Tw 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (Please note that the count argument specifies the number of data items to process, i. e. the number) Tj T* -19.2 0 Td 0 Tw (of long words or words or bytes to compare.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 321.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cmp.l 0x80000000 0x80100000 40000) Tj T* (Total of 262144 word\(s\) were the same) Tj T* (=) Tj (>) Tj ( cmp.w 0x80000000 0x80100000 80000) Tj T* (Total of 524288 halfword\(s\) were the same) Tj T* (=) Tj (>) Tj ( cmp.b 0x80000000 0x80100000 100000) Tj T* (Total of 1048576 byte\(s\) were the same) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 311.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 16 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
173 0 obj
<< /Length 1893 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (cp - memory copy) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help cp) Tj T* (cp - memory copy) Tj T*  T* (Usage:) Tj T* (cp [.b, .w, .l] source target count) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (cp ) Tj 0 0 0 rg (command is used to copy memory areas.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 604.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
BT 1 0 0 1 0 9.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cp 0x80000000 0x80100000 10000) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 582.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (cp ) Tj 0 0 0 rg (command understands the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 524.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( cp.l 0x80000000 0x80100000 10000) Tj T* (=) Tj (>) Tj ( cp.w 0x80000000 0x80100000 20000) Tj T* (=) Tj (>) Tj ( cp.b 0x80000000 0x80100000 40000) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 514.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 17 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
174 0 obj
<< /Length 3983 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (md - memory display) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help md) Tj T* (md - memory display) Tj T*  T* (Usage:) Tj T* (md [.b, .w, .l] address [# of objects]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (md ) Tj 0 0 0 rg (command can be used to display memory contents both as hexadecimal and ASCII data.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 470.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 163.2 re B*
Q
q
BT 1 0 0 1 0 144.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md 0x80000000) Tj T* (80000000: 1cec5b8c 381401ad 6778e393 01fbbcc3    .[.....8..xg....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (80000040: ee9b1d07 09f8e81f 969e7603 6be76204    .........v...b.k) Tj T* (80000050: b0de9f91 0b9a6062 825adf5e 6914b64e    ....b`..^.Z.N..i) Tj T* (80000060: 31eb81cc ec1b3009 b7096df7 0546f59b    ...1.0...m....F.) Tj T* (80000070: d94137a6 3d455f1d 01549ffb 4d7b0a2d    .7A.._E=..T.-.{M) Tj T* (80000080: 8e8650b9 e2101ce1 d705d373 34455d16    .P......s....]E4) Tj T* (80000090: b3776306 bb40cb3b 246c65e8 25587336    .cw.;.@..el$6sX%) Tj T* (800000a0: 65f88ce1 33c09949 67ca3299 e88b24bf    ...eI..3.2.g.$..) Tj T* (800000b0: 2057a219 45fe820a c5ae6da8 e9b39578    ..W ...E.m..x...) Tj T* (800000c0: 0d27e891 5201230c da4c518d bfa2cc2b    ..'..#.R.QL.+...) Tj T* (800000d0: 98386a41 803c36df 1b0d4c5d 09e31558    Aj8..6) Tj (<) Tj (.]L..X...) Tj T* (800000e0: 58ae8bf1 681bc92b 752a350e 3f057db9    ...X+..h.5*u.}.?) Tj T* (800000f0: a5e3bbbd c7c2239e ecf15559 e91c4375    .....#..YU..uC..) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 448.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This command can also be used with the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 297.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 138 re B*
Q
q
BT 1 0 0 1 0 119 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md.w 0x80000000) Tj T* (80000000: 5b8c 1cec 01ad 3814 e393 6778 bcc3 01fb    .[.....8..xg....) Tj T* (80000010: 712a 89e9 0e16 0fb4 6743 6f23 fbe6 3b46    *q......Cg#o..F;) Tj T* (80000020: 56f6 ea23 540f 6e7c e377 e056 8a9f 7bd2    .V#..T|nw.V....{) Tj T* (80000030: bcec cfa9 ce51 b19a 4dc5 b27f a28b 8eec    ....Q....M......) Tj T* (80000040: 1d07 ee9b e81f 09f8 7603 969e 6204 6be7    .........v...b.k) Tj T* (80000050: 9f91 b0de 6062 0b9a df5e 825a b64e 6914    ....b`..^.Z.N..i) Tj T* (80000060: 81cc 31eb 3009 ec1b 6df7 b709 f59b 0546    ...1.0...m....F.) Tj T* (80000070: 37a6 d941 5f1d 3d45 9ffb 0154 0a2d 4d7b    .7A.._E=..T.-.{M) Tj T* (=) Tj (>) Tj ( md.b 0x80000000) Tj T* (80000000: 8c 5b ec 1c ad 01 14 38 93 e3 78 67 c3 bc fb 01    .[.....8..xg....) Tj T* (80000010: 2a 71 e9 89 16 0e b4 0f 43 67 23 6f e6 fb 46 3b    *q......Cg#o..F;) Tj T* (80000020: f6 56 23 ea 0f 54 7c 6e 77 e3 56 e0 9f 8a d2 7b    .V#..T|nw.V....{) Tj T* (80000030: ec bc a9 cf 51 ce 9a b1 c5 4d 7f b2 8b a2 ec 8e    ....Q....M......) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 287.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 18 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
175 0 obj
<< /Length 2059 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .67436 Tw (The last displayed memory address and the value of the count argument are remembered, so when you) Tj T* 0 Tw 1.229985 Tw (enter md again without arguments it will automatically continue at the next address, and use the same) Tj T* 0 Tw (count again.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 553.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 163.2 re B*
Q
q
BT 1 0 0 1 0 144.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md.b 0x80000000 0x20) Tj T* (80000000: 8c 5b ec 1c ad 01 14 38 93 e3 78 67 c3 bc fb 01    .[.....8..xg....) Tj T* (80000010: 2a 71 e9 89 16 0e b4 0f 43 67 23 6f e6 fb 46 3b    *q......Cg#o..F;) Tj T* (=) Tj (>) Tj ( md.w 0x80000000) Tj T* (80000000: 5b8c 1cec 01ad 3814 e393 6778 bcc3 01fb    .[.....8..xg....) Tj T* (80000010: 712a 89e9 0e16 0fb4 6743 6f23 fbe6 3b46    *q......Cg#o..F;) Tj T* (80000020: 56f6 ea23 540f 6e7c e377 e056 8a9f 7bd2    .V#..T|nw.V....{) Tj T* (80000030: bcec cfa9 ce51 b19a 4dc5 b27f a28b 8eec    ....Q....M......) Tj T* (=) Tj (>) Tj ( md 0x80000000) Tj T* (80000000: 1cec5b8c 381401ad 6778e393 01fbbcc3    .[.....8..xg....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (80000040: ee9b1d07 09f8e81f 969e7603 6be76204    .........v...b.k) Tj T* (80000050: b0de9f91 0b9a6062 825adf5e 6914b64e    ....b`..^.Z.N..i) Tj T* (80000060: 31eb81cc ec1b3009 b7096df7 0546f59b    ...1.0...m....F.) Tj T* (80000070: d94137a6 3d455f1d 01549ffb 4d7b0a2d    .7A.._E=..T.-.{M) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 543.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 19 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
176 0 obj
<< /Length 3936 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (mm - memory modify \(auto-incrementing\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help mm) Tj T* (mm - memory modify \(auto-incrementing address\)) Tj T*  T* (Usage:) Tj T* (mm [.b, .w, .l] address) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 597.4236 cm
q
BT 1 0 0 1 0 50 Tm 1.09436 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (mm ) Tj 0 0 0 rg (command is a method to interactively modify memory contents. It will display the address and) Tj T* 0 Tw .535868 Tw (current contents and then prompt for user input. If you enter a legal hexadecimal number, this new value) Tj T* 0 Tw .963672 Tw (will be written to the address. Then the next address will be prompted. If you don't enter any value and) Tj T* 0 Tw .25811 Tw (just press ENTER, then the contents of this address will remain unchanged. The command stops as soon) Tj T* 0 Tw (as you enter any data that is not a hex number \(like ) Tj 1 0 0 rg (.) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 480.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
BT 1 0 0 1 0 85.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( mm 0x80000000) Tj T* (80000000: 1cec5b8c ? 0) Tj T* (80000004: 381401ad ? 0xaabbccdd) Tj T* (80000008: 6778e393 ? 0x01234567) Tj T* (8000000c: 01fbbcc3 ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 00000000 aabbccdd 01234567 01fbbcc3    ........gE#.....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 458.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Again this command can be used with the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 199.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 247.2 re B*
Q
q
BT 1 0 0 1 0 228.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( mm.w 0x80000000) Tj T* (80000000: 0000 ? 0x0101) Tj T* (80000002: 0000 ? 0x0202) Tj T* (80000004: ccdd ? 0x4321) Tj T* (80000006: aabb ? 0x8765) Tj T* (80000008: 4567 ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 02020101 87654321 01234567 01fbbcc3    ....!Ce.gE#.....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( mm.b 0x80000000) Tj T* (80000000: 01 ? 0x48) Tj T* (80000001: 01 ? 0x65) Tj T* (80000002: 02 ? 0x6c) Tj T* (80000003: 02 ? 0x6c) Tj T* (80000004: 21 ? 0x6f) Tj T* (80000005: 43 ? 0x20) Tj T* (80000006: 65 ? 0x20) Tj T* (80000007: 87 ? 0x20) Tj T* (80000008: 67 ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 6c6c6548 2020206f 01234567 01fbbcc3    Hello   gE#.....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 189.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 20 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
177 0 obj
<< /Length 3812 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (mw - memory write \(fill\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help mw) Tj T* (mw - memory write \(fill\)) Tj T*  T* (Usage:) Tj T* (mw [.b, .w, .l] address value [count]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 621.4236 cm
q
BT 1 0 0 1 0 26 Tm 2.142927 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (mw ) Tj 0 0 0 rg (command is a way to initialize \(fill\) memory with some value. When called without a count) Tj T* 0 Tw .166654 Tw (argument, the value will be written only to the specified address. When used with a count value, the entire) Tj T* 0 Tw (memory area will be initialized with this value:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 446.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 163.2 re B*
Q
q
BT 1 0 0 1 0 144.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 6c6c6548 2020206f 01234567 01fbbcc3    Hello   gE#.....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj ( mw 0x80000000 0xaabbccdd) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: aabbccdd 2020206f 01234567 01fbbcc3    ....o   gE#.....) Tj T* (80000010: 89e9712a 0fb40e16 6f236743 3b46fbe6    *q......Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj ( mw 0x80000000 0 6) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 00000000 00000000 00000000 00000000    ................) Tj T* (80000010: 00000000 00000000 6f236743 3b46fbe6    ........Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 424.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This is another command that accepts the type extensions ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b ) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 290.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( mw.w 0x80000004 0x1155 6) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 00000000 11551155 11551155 11551155    ....U.U.U.U.U.U.) Tj T* (80000010: 00000000 00000000 6f236743 3b46fbe6    ........Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj ( mw.b 0x80000007 0xff 7) Tj T* (=) Tj (>) Tj ( md 0x80000000 0x10) Tj T* (80000000: 00000000 ff551155 ffffffff 1155ffff    ....U.U.......U.) Tj T* (80000010: 00000000 00000000 6f236743 3b46fbe6    ........Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 280.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 21 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
178 0 obj
<< /Length 2200 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (nm - memory modify \(constant address\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help nm) Tj T* (nm - memory modify \(constant address\)) Tj T*  T* (Usage:) Tj T* (nm [.b, .w, .l] address) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 633.4236 cm
q
BT 1 0 0 1 0 14 Tm 1.73152 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (nm ) Tj 0 0 0 rg (command \(non-incrementing memory modify\) can be used to interactively write different data) Tj T* 0 Tw (several times to the same address. This can be useful for instance to access and modify device registers:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 500.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 121.2 re B*
Q
q
BT 1 0 0 1 0 102.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( nm 0x80000000) Tj T* (80000000: 00000000 ? 0x48) Tj T* (80000000: 00000048 ? 0x65) Tj T* (80000000: 00000065 ? 0x6c) Tj T* (80000000: 0000006c ? 0x6c) Tj T* (80000000: 0000006c ? 0x6f) Tj T* (80000000: 0000006f ? .) Tj T* (=) Tj (>) Tj ( md 0x80000000 10) Tj T* (80000000: 0000006f ff551155 ffffffff 1155ffff    o...U.U.......U.) Tj T* (80000010: 00000000 00000000 6f236743 3b46fbe6    ........Cg#o..F;) Tj T* (80000020: ea2356f6 6e7c540f e056e377 7bd28a9f    .V#..T|nw.V....{) Tj T* (80000030: cfa9bcec b19ace51 b27f4dc5 8eeca28b    ....Q....M......) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 478.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (nm ) Tj 0 0 0 rg (command also accepts the type ) Tj 1 0 0 rg (.l) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (.w ) Tj 0 0 0 rg (and ) Tj 1 0 0 rg (.b) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 478.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 22 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
179 0 obj
<< /Length 1401 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (loop - infinite loop on address range) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help loop) Tj T* (loop - infinite loop on address range) Tj T*  T* (Usage:) Tj T* (loop [.b, .w, .l] address number_of_objects) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 633.4236 cm
q
BT 1 0 0 1 0 14 Tm .540941 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (loop ) Tj 0 0 0 rg (command reads in a tight loop from a range of memory. This is intended as a special form of a) Tj T* 0 Tw (memory test, since this command tries to read the memory as fast as possible.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 615.4236 cm
q
q
19.2 0 0 19.2 0 0 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
BT 1 0 0 1 0 2 Tm 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (This command will never terminate. There is no way to stop it but to reset the board!) Tj T* -19.2 0 Td ET
Q
Q
q
1 0 0 1 62.69291 615.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 23 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
180 0 obj
<< /Length 4361 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 127.4324 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Execution Control Commands) Tj T* -127.4324 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (source - run script from memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 597.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 96 re B*
Q
q
BT 1 0 0 1 0 77 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help source) Tj T* (source - run script from memory) Tj T*  T* (Usage:) Tj T* (source [addr]) Tj T* (      - run script starting at addr) Tj T* (      - A valid image header must be present) Tj T* (For FIT format uImage addr must include subimage) Tj T* (unit name in the form of addr:) Tj (<) Tj (subimg_uname) Tj (>) Tj  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 551.8236 cm
q
BT 1 0 0 1 0 26 Tm .480574 Tw 12 TL /F1 10 Tf 0 0 0 rg (With the ) Tj 1 0 0 rg (source ) Tj 0 0 0 rg (command you can run "shell" scripts under U-Boot: You create a U-Boot script image by) Tj T* 0 Tw .170465 Tw (simply writing the commands you want to run into a text file; then you will have to use the ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (tool to) Tj T* 0 Tw (convert this text file into a U-Boot image \(using the image type script\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 521.8236 cm
q
BT 1 0 0 1 0 14 Tm .011488 Tw 12 TL /F1 10 Tf 0 0 0 rg (This image can be loaded like any other image file, and with ) Tj 1 0 0 rg (source ) Tj 0 0 0 rg (you can run the commands in such an) Tj T* 0 Tw (image. For instance, the following text file:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 405.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 85.4 Tm /F4 7 Tf 8.4 TL ($ cat source_example.txt) Tj T* (echo) Tj T* (echo Network Configuration:) Tj T* (echo ----------------------) Tj T* (echo Target:) Tj T* (printenv ipaddr hostname) Tj T* (echo) Tj T* (echo Server:) Tj T* (printenv serverip rootpath) Tj T* (echo) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 383.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (can be converted into a U-Boot script image using the ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (command like this:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 266.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 507.6 104.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 85.4 Tm /F4 7 Tf 8.4 TL ($ mkimage -A ppc -O linux -T script -C none -a 0 -e 0 -n "autoscr example script" -d $TBOT_BASEDIR/source_example.txt\\) Tj T* (  /var/lib/tftpboot/beagleboneblack/tbot/source.scr) Tj T* (Image Name:   autoscr example script) Tj T* (Created:      Wed Aug 23 09:23:32 2017) Tj T* (Image Type:   PowerPC Linux Script \(uncompressed\)) Tj T* (Data Size:    157 Bytes = 0.15 kB = 0.00 MB) Tj T* (Load Address: 00000000) Tj T* (Entry Point:  00000000) Tj T* (Contents:) Tj T* (   Image 0: 149 Bytes = 0.15 kB = 0.00 MB) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 244.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now you can load and execute this script image in U-Boot:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 94.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 138 re B*
Q
q
BT 1 0 0 1 0 119 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( tftp 0x80000000 beagleboneblack/tbotrandom) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.10) Tj T* (Filename 'beagleboneblack/tbotrandom'.) Tj T* (Load address: 0x80000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (#################################################################) Tj T* (       #######) Tj T* (       4.4 MiB/s) Tj T* (done) Tj T* (Bytes transferred = 1048576 \(100000 hex\)) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( imi 0x80000000) Tj T*  T* (## Checking Image at 80000000 ...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 24 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
181 0 obj
<< /Length 1229 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 549.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 213.6 re B*
Q
q
BT 1 0 0 1 0 194.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (   Legacy image found) Tj T* (   Image Name:   autoscr example script) Tj T* (   Created:      2017-08-18   8:19:02 UTC) Tj T* (   Image Type:   PowerPC Linux Script \(uncompressed\)) Tj T* (   Data Size:    157 Bytes = 157 Bytes) Tj T* (   Load Address: 00000000) Tj T* (   Entry Point:  00000000) Tj T* (   Contents:) Tj T* (      Image 0: 149 Bytes = 149 Bytes) Tj T* (   Verifying Checksum ... OK) Tj T* (=) Tj (>) Tj ( source 0x80000000) Tj T* (## Executing script at 80000000) Tj T*  T* (Network Configuration:) Tj T* (----------------------) Tj T* (Target:) Tj T* (ipaddr=192.168.2.10) Tj T* (## Error: "hostname" not defined) Tj T*  T* (Server:) Tj T* (serverip=192.168.2.1) Tj T* (rootpath=/export/rootfs) Tj T*  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 539.2236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 25 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
182 0 obj
<< /Length 5727 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (bootm - boot application image from memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 449.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 280.8 re B*
Q
q
BT 1 0 0 1 0 261.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help bootm) Tj T* (bootm - boot application image from memory) Tj T*  T* (Usage:) Tj T* (bootm [addr [arg ...]]) Tj T* (    - boot application image stored in memory) Tj T* (      passing arguments 'arg ...'; when booting a Linux kernel,) Tj T* (      'arg' can be the address of an initrd image) Tj T* (      When booting a Linux kernel which requires a flat device-tree) Tj T* (      a third argument is required which is the address of the) Tj T* (      device-tree blob. To boot that kernel without an initrd image,) Tj T* (      use a '-' for the second argument. If you do not pass a third) Tj T* (      a bd_info struct will be passed instead) Tj T*  T* (For the new multi component uImage format \(FIT\) addresses) Tj T* (      must be extended to include component or configuration unit name:) Tj T* (      addr:) Tj (<) Tj (subimg_uname) Tj (>) Tj ( - direct component image specification) Tj T* (      addr#) Tj (<) Tj (conf_uname) Tj (>) Tj (   - configuration specification) Tj T* (      Use iminfo command to get the list of existing component) Tj T* (      images and configurations.) Tj T*  T* (Sub-commands to do part of the bootm sequence.  The sub-commands must be) Tj T* (issued in the order below \(it's ok to not issue all sub-commands\):) Tj T* (      start [addr [arg ...]]) Tj T* (      loados  - load OS image) Tj T* (      ramdisk - relocate initrd, set env initrd_start/initrd_end) Tj T* (      fdt     - relocate flat device tree) Tj T* (      cmdline - OS specific command line processing/setup) Tj T* (      bdt     - OS specific bd_t processing) Tj T* (      prep    - OS specific prep before relocation or go) Tj T* (      go      - start OS) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 379.0236 cm
q
BT 1 0 0 1 0 50 Tm .154985 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (command is used to start operating system images. From the image header it gets information) Tj T* 0 Tw .072765 Tw (about the type of the operating system, the file compression method used \(if any\), the load and entry point) Tj T* 0 Tw .165318 Tw (addresses, etc. The command will then load the image to the required memory address, uncompressing it) Tj T* 0 Tw .399488 Tw (on the fly if necessary. Depending on the OS it will pass the required boot arguments and start the OS at) Tj T* 0 Tw (it's entry point.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 349.0236 cm
q
BT 1 0 0 1 0 14 Tm .603876 Tw 12 TL /F1 10 Tf 0 0 0 rg (The first argument to ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (is the memory address \(in RAM, ROM or flash memory\) where the image is) Tj T* 0 Tw (stored, followed by optional arguments that depend on the OS.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 283.0236 cm
q
BT 1 0 0 1 0 50 Tm 2.104104 Tw 12 TL /F1 10 Tf 1 0 0 rg (Linux ) Tj 0 0 0 rg (requires the flattened device tree blob to be passed at boot time, and ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (expects its third) Tj T* 0 Tw .894104 Tw (argument to be the address of the blob in memory. Second argument to ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (depends on whether an) Tj T* 0 Tw 1.341098 Tw (initrd initial ramdisk image is to be used. If the kernel should be booted without the initial ramdisk, the) Tj T* 0 Tw .483876 Tw (second argument should be given as "-", otherwise it is interpreted as the start address of initrd \(in RAM,) Tj T* 0 Tw (ROM or flash memory\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 265.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To boot a Linux kernel image without a initrd ramdisk image, the following command can be used:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 232.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
BT 1 0 0 1 0 1.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( bootm ${kernel_addr} - ${fdt_addr}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 210.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If a ramdisk image shall be used, you can type:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 177.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
BT 1 0 0 1 0 1.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( bootm ${kernel_addr} ${ramdisk_addr} ${fdt_addr}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 143.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .692209 Tw (Both examples of course imply that the variables used are set to correct addresses for a kernel, fdt blob) Tj T* 0 Tw (and a initrd ramdisk image.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 101.8236 cm
q
q
19.2 0 0 19.2 0 24 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
BT 1 0 0 1 0 26 Tm .587318 Tw 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (When booting images that have been loaded to RAM \(for instance using TFTP download\) you have ) Tj T* -19.2 0 Td 0 Tw 2.02936 Tw (to be careful that the locations where the \(compressed\) images were stored do not overlap with the ) Tj T* 0 Tw .308221 Tw (memory needed to load the uncompressed kernel. For instance, if you load a ramdisk image at a location) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 26 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
183 0 obj
<< /Length 496 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 14 Tm .081163 Tw 12 TL /F1 10 Tf 0 0 0 rg (in low memory, it may be overwritten when the Linux kernel gets loaded. This will cause undefined system) Tj T* 0 Tw (crashes.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 741.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 27 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
184 0 obj
<< /Length 2048 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (go - start application at address 'addr') Tj T* ET
Q
Q
q
1 0 0 1 62.69291 650.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 79.2 re B*
Q
q
BT 1 0 0 1 0 60.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help go) Tj T* (go - start application at address 'addr') Tj T*  T* (Usage:) Tj T* (go addr [arg ...]) Tj T* (    - start application at address 'addr') Tj T* (      passing 'arg' as arguments) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 604.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.643555 Tw (U-Boot has support for so-called standalone applications. These are programs that do not require the) Tj T* 0 Tw .42936 Tw (complex environment of an operating system to run. Instead they can be loaded and executed by U-Boot) Tj T* 0 Tw (directly, utilizing U-Boot's service functions like console I/O or malloc\(\) and free\(\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 574.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.543735 Tw (This can be used to dynamically load and run special extensions to U-Boot like special hardware test) Tj T* 0 Tw (routines or bootstrap code to load an OS image from some filesystem.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 544.6236 cm
q
BT 1 0 0 1 0 14 Tm .15186 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (go ) Tj 0 0 0 rg (command is used to start such standalone applications. The optional arguments are passed to the) Tj T* 0 Tw (application without modification.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 526.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (TODO For more information see 5.12. U-Boot Standalone Applications.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 526.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 28 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
185 0 obj
<< /Length 1540 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 156.1874 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Download Commands) Tj T* -156.1874 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (bootp - boot image via network using BOOTP/TFTP protocol) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 631.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help bootp) Tj T* (bootp - boot image via network using BOOTP/TFTP protocol) Tj T*  T* (Usage:) Tj T* (bootp [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 598.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (dhcp - invoke DHCP client to obtain IP/boot params) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 515.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help dhcp) Tj T* (dhcp - boot image via network using DHCP/TFTP protocol) Tj T*  T* (Usage:) Tj T* (dhcp [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 505.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 29 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
186 0 obj
<< /Length 4978 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (loadb - load binary file over serial line \(kermit mode\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 659.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help loadb) Tj T* (loadb - load binary file over serial line \(kermit mode\)) Tj T*  T* (Usage:) Tj T* (loadb [ off ] [ baud ]) Tj T* (    - load binary file over serial line with offset 'off' and baudrate 'baud') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 637.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (With kermit you can download binary data via the serial line.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 619.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Make sure you use the following settings in kermit.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 510.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 96 re B*
Q
q
BT 1 0 0 1 0 77 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (set carrier-watch off) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set handshake none) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set flow-control none) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (robust) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set file type bin) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set file name lit) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set rec pack 100) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set send pack 100) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (set window 5) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 488.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If you have problems with downloading, may you set the values) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 447.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL (set rec pack) Tj T* (set send pack) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 425.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (to smaller values.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 407.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now for example download u-boot.img.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 89.62362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 516 306 re B*
Q
q
BT 1 0 0 1 0 287 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( loadb 80000000) Tj T* (## Ready for binary \(kermit\) download to 0x80000000 at 115200 bps...) Tj T*  T* (\(Back at localhost.localdomain\)) Tj T* (----------------------------------------------------) Tj T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj  T* (C-Kermit 9.0.302 OPEN SOURCE:, 20 Aug 2011, localhost.localdomain [192.168.1.105]) Tj T*  T* (   Current Directory: $TBOT_BASEDIR) Tj T* (Communication Device: /dev/ttybbb) Tj T* ( Communication Speed: 115200) Tj T* (              Parity: none) Tj T* (         RTT/Timeout: 01 / 02) Tj T* (             SENDING:  =) Tj (>) Tj ( /lib/tftpboot/beagleboneblack/tbot/u-boot.img) Tj T* (           File Type: BINARY) Tj T* (           File Size: 734224) Tj T* (        Percent Done: 100 //////////////////////////////////////////////////) Tj T* (:01        ...10...20...30...40...50...60...70...80...90..100                                                        :02) Tj T* (       teElapsed Time: 00:01:59) Tj T* (5 Transfer67ate, CPS: 6197                                                                                            69) Tj T* (        55ndow Slots: 1 of 1                                                                                        2705) Tj T* (6        75cket Type: B6                                                                                          918482) Tj T* (0       P921et Count: 11819                                                                                         3276) Tj T* ( cket Length:                                                                                                         0\() Tj T* (resend\)  Error Count: 4) Tj T* (          Last Error:) Tj T* (        Last Message: SUCCESS.  Files: 1, Bytes: 734224, 6167 CPS) Tj T*  T*  T* (\($TBOT_BASEDIR/\) C-Kermit) Tj (>) Tj (connect) Tj T* (Connecting to /dev/ttybbb, speed 115200) Tj T* ( Escape character: Ctrl-\\ \(ASCII 28, FS\): enabled) Tj T* (Type the escape character followed by C to get back,) Tj T* (or followed by ? to see other options.) Tj T* (----------------------------------------------------) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 30 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
187 0 obj
<< /Length 3494 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 95.62362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 667.2 re B*
Q
q
BT 1 0 0 1 0 648.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (CACHE: Misaligned operation at range [80000000, 800b3410]) Tj T* (## Total Size      = 0x000b3410 = 734224 Bytes) Tj T* (## Start Addr      = 0x80000000) Tj T* (=) Tj (>) Tj  T*  T* (=) Tj (>) Tj ( imi 80000000) Tj T*  T* (## Checking Image at 80000000 ...) Tj T* (   FIT image found) Tj T* (   FIT description: Firmware image with one or more FDT blobs) Tj T* (   Created:         2017-08-23   6:36:19 UTC) Tj T* (    Image 0 \(firmware@1\)) Tj T* (     Description:  U-Boot 2017.09-rc2-00151-g2d7cb5b for am335x board) Tj T* (     Created:      2017-08-23   6:36:19 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: 0x80800000) Tj T* (    Image 1 \(fdt@1\)) Tj T* (     Description:  am335x-evm) Tj T* (     Created:      2017-08-23   6:36:19 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 2 \(fdt@2\)) Tj T* (     Description:  am335x-bone) Tj T* (     Created:      2017-08-23   6:36:19 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 3 \(fdt@3\)) Tj T* (     Description:  am335x-boneblack) Tj T* (     Created:      2017-08-23   6:36:19 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 4 \(fdt@4\)) Tj T* (     Description:  am335x-evmsk) Tj T* (     Created:      2017-08-23   6:36:19 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 5 \(fdt@5\)) Tj T* (     Description:  am335x-bonegreen) Tj T* (     Created:      2017-08-23   6:36:19 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Image 6 \(fdt@6\)) Tj T* (     Description:  am335x-icev2) Tj T* (     Created:      2017-08-23   6:36:19 UTC) Tj T* (     Type:         Firmware) Tj T* (     Compression:  uncompressed) Tj T* (     Data Start:   unavailable) Tj T* (     Data Size:    unavailable) Tj T* (     Architecture: ARM) Tj T* (     Load Address: unavailable) Tj T* (    Default Configuration: 'conf@1') Tj T* (    Configuration 0 \(conf@1\)) Tj T* (     Description:  am335x-evm) Tj T* (     Kernel:       unavailable) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 31 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
188 0 obj
<< /Length 1526 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 532.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 230.4 re B*
Q
q
BT 1 0 0 1 0 211.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (     FDT:          fdt@1) Tj T* (    Configuration 1 \(conf@2\)) Tj T* (     Description:  am335x-bone) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@2) Tj T* (    Configuration 2 \(conf@3\)) Tj T* (     Description:  am335x-boneblack) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@3) Tj T* (    Configuration 3 \(conf@4\)) Tj T* (     Description:  am335x-evmsk) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@4) Tj T* (    Configuration 4 \(conf@5\)) Tj T* (     Description:  am335x-bonegreen) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@5) Tj T* (    Configuration 5 \(conf@6\)) Tj T* (     Description:  am335x-icev2) Tj T* (     Kernel:       unavailable) Tj T* (     FDT:          fdt@6) Tj T* (## Checking hash\(es\) for FIT Image at 80000000 ...) Tj T* (   Hash\(es\) for Image 0 \(firmware@1\):  error!) Tj T* (Can't get image data/size for '' hash node in 'firmware@1' image node) Tj T* (Bad hash in FIT image!) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 522.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 32 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
189 0 obj
<< /Length 1939 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (loads - load S-Record file over serial line) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 659.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help loads) Tj T* (loads - load S-Record file over serial line) Tj T*  T* (Usage:) Tj T* (loads [ off ]) Tj T* (    - load S-Record file over serial line with offset 'off') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 626.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (rarpboot- boot image via network using RARP/TFTP protocol) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 560.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help rarp) Tj T* (Unknown command 'rarp' - try 'help' without arguments for list of all known commands) Tj T*  T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 527.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (tftpboot- boot image via network using TFTP protocol) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 444.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help tftp) Tj T* (tftpboot - boot image via network using TFTP protocol) Tj T*  T* (Usage:) Tj T* (tftpboot [loadAddress] [[hostIPaddr:]bootfilename]) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 434.6236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 33 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
190 0 obj
<< /Length 5001 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 110.7449 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Environment Variables Commands) Tj T* -110.7449 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (printenv- print environment variables) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 606.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 87.6 re B*
Q
q
BT 1 0 0 1 0 68.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help printenv) Tj T* (printenv - print environment variables) Tj T*  T* (Usage:) Tj T* (printenv [-a]) Tj T* (    - print [all] values of all environment variables) Tj T* (printenv name ...) Tj T* (    - print value of environment variable 'name') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 560.2236 cm
q
BT 1 0 0 1 0 26 Tm 1.050697 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (printenv ) Tj 0 0 0 rg (command prints one, several or all variables of the U-Boot environment. When arguments) Tj T* 0 Tw 1.33561 Tw (are given, these are interpreted as the names of environment variables which will be printed with their) Tj T* 0 Tw (values:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 494.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( printenv ipaddr hostname netmask) Tj T* (ipaddr=192.168.2.10) Tj T* (## Error: "hostname" not defined) Tj T* (netmask=255.255.255.0) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 460.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.44061 Tw 12 TL /F1 10 Tf 0 0 0 rg (Without arguments, ) Tj 1 0 0 rg (printenv ) Tj 0 0 0 rg (prints all a list with all variables in the environment and their values, plus) Tj T* 0 Tw (some statistics about the current usage and the total size of the memory available for the environment.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 91.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 541.2 356.4 re B*
Q
q
BT 1 0 0 1 0 337.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( printenv) Tj T* (Heiko=Schocher) Tj T* (arch=arm) Tj T* (args_mmc=run finduuid;setenv bootargs console=${console} ${optargs} root=PARTUUID=${uuid} rw rootfstype=${mmcrootfstype}) Tj T* (baudrate=115200) Tj T* (board=am335x) Tj T* (board_name=A335BNLT) Tj T* (board_rev=00C0) Tj T* (board_serial=414BBBK0180) Tj T* (boot_a_script=load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}) Tj T* (boot_efi_binary=load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootarm.efi; if fdt addr\\) Tj T* (  ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};else bootefi ${kernel_addr_r} ${fdtcontroladdr};fi) Tj T* (boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf) Tj T* (boot_fdt=try) Tj T* (boot_fit=0) Tj T* (boot_net_usb_start=usb start) Tj T* (boot_prefixes=/ /boot/) Tj T* (boot_script_dhcp=boot.scr.uimg) Tj T* (boot_scripts=boot.scr.uimg boot.scr) Tj T* (boot_targets=mmc0 legacy_mmc0 mmc1 legacy_mmc1 nand0 pxe dhcp) Tj T* (bootcmd=if test ${boot_fit} -eq 1; then run update_to_fit;fi;run findfdt; run init_console; run envboot; run distro_bootcmd) Tj T* (bootcmd_dhcp=run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi;setenv\\) Tj T* (  efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile ${soc}-${board}${boardver}.dtb; fi;\\) Tj T* (  setenv efi_old_vci ${bootp_vci};setenv efi_old_arch ${bootp_arch};setenv bootp_vci PXEClient:Arch:00010:UNDI:003000;setenv\\) Tj T* (  bootp_arch 0xa;if dhcp ${kernel_addr_r}; then tftpboot ${fdt_addr_r} dtb/${efi_fdtfile};if fdt addr ${fdt_addr_r}; then\\) Tj T* (  bootefi ${kernel_addr_r} ${fdt_addr_r}; else bootefi ${kernel_addr_r} ${fdtcontroladdr};fi;fi;setenv bootp_vci\\) Tj T* (  ${efi_old_vci};setenv bootp_arch ${efi_old_arch};setenv efi_fdtfile;setenv efi_old_arch;setenv efi_old_vci;) Tj T* (bootcmd_legacy_mmc0=setenv mmcdev 0; setenv bootpart 0:2 ; run mmcboot) Tj T* (bootcmd_legacy_mmc1=setenv mmcdev 1; setenv bootpart 1:2 ; run mmcboot) Tj T* (bootcmd_mmc0=setenv devnum 0; run mmc_boot) Tj T* (bootcmd_mmc1=setenv devnum 1; run mmc_boot) Tj T* (bootcmd_nand=run nandboot) Tj T* (bootcmd_pxe=run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi) Tj T* (bootcount=5) Tj T* (bootdelay=2) Tj T* (bootdir=/boot) Tj T* (bootenvfile=uEnv.txt) Tj T* (bootfile=zImage) Tj T* (bootm_size=0x10000000) Tj T* (bootpart=0:2) Tj T* (bootscript=echo Running bootscript from mmc${mmcdev} ...; source ${loadaddr}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 34 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
191 0 obj
<< /Length 6189 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 95.62362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 545.4 667.2 re B*
Q
q
BT 1 0 0 1 0 648.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (console=ttyO0,115200n8) Tj T* (cpu=armv7) Tj T* (dfu_alt_info_emmc=rawemmc raw 0 3751936) Tj T* (dfu_alt_info_mmc=boot part 0 1;rootfs part 0 2;MLO fat 0 1;MLO.raw raw 0x100 0x100;u-boot.img.raw raw 0x300 0x1000;u-env.raw\\) Tj T* (  raw 0x1300 0x200;spl-os-args.raw raw 0x1500 0x200;spl-os-image.raw raw 0x1700 0x6900;spl-os-args fat 0 1;spl-os-image fat 0\\) Tj T* (  1;u-boot.img fat 0 1;uEnv.txt fat 0 1) Tj T* (dfu_alt_info_nand=SPL part 0 1;SPL.backup1 part 0 2;SPL.backup2 part 0 3;SPL.backup3 part 0 4;u-boot part 0 5;u-boot-spl-os\\) Tj T* (  part 0 6;kernel part 0 8;rootfs part 0 9) Tj T* (dfu_alt_info_ram=kernel ram 0x80200000 0x4000000;fdt ram 0x80f80000 0x80000;ramdisk ram 0x81000000 0x4000000) Tj T* (distro_bootcmd=for target in ${boot_targets}; do run bootcmd_${target}; done) Tj T* (efi_dtb_prefixes=/ /dtb/ /dtb/current/) Tj T* (envboot=mmc dev ${mmcdev}; if mmc rescan; then echo SD/MMC found on device ${mmcdev};if run loadbootscript; then run\\) Tj T* (  bootscript;else if run loadbootenv; then echo Loaded env from ${bootenvfile};run importbootenv;fi;if test -n $uenvcmd; then\\) Tj T* (  echo Running uenvcmd ...;run uenvcmd;fi;fi;fi;) Tj T* (eth1addr=6c:ec:eb:83:40:33) Tj T* (ethact=ethernet@4a100000) Tj T* (ethaddr=6c:ec:eb:83:40:31) Tj T* (fdt_addr_r=0x88000000) Tj T* (fdtaddr=0x88000000) Tj T* (fdtcontroladdr=9df21ed8) Tj T* (fdtfile=undefined) Tj T* (fileaddr=80100000) Tj T* (filesize=b3410) Tj T* (findfdt=if test $board_name = A335BONE; then setenv fdtfile am335x-bone.dtb; fi; if test $board_name = A335BNLT; then setenv\\) Tj T* (  fdtfile am335x-boneblack.dtb; fi; if test $board_name = BBBW; then setenv fdtfile am335x-boneblack-wireless.dtb; fi; if test\\) Tj T* (  $board_name = BBG1; then setenv fdtfile am335x-bonegreen.dtb; fi; if test $board_name = BBGW; then setenv fdtfile am335x-\\) Tj T* (  bonegreen-wireless.dtb; fi; if test $board_name = BBBL; then setenv fdtfile am335x-boneblue.dtb; fi; if test $board_name =\\) Tj T* (  A33515BB; then setenv fdtfile am335x-evm.dtb; fi; if test $board_name = A335X_SK; then setenv fdtfile am335x-evmsk.dtb; fi;\\) Tj T* (  if test $board_name = A335_ICE; then setenv fdtfile am335x-icev2.dtb; fi; if test $fdtfile = undefined; then echo WARNING:\\) Tj T* (  Could not determine device tree to use; fi;) Tj T* (finduuid=part uuid mmc ${bootpart} uuid) Tj T* (fit_bootfile=fitImage) Tj T* (fit_loadaddr=0x88000000) Tj T* (importbootenv=echo Importing environment from mmc${mmcdev} ...; env import -t ${loadaddr} ${filesize}) Tj T* (init_console=if test $board_name = A335_ICE; then setenv console ttyO3,115200n8;else setenv console ttyO0,115200n8;fi;) Tj T* (ipaddr=192.168.2.10) Tj T* (kernel_addr_r=0x82000000) Tj T* (load_efi_dtb=load ${devtype} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}) Tj T* (loadaddr=0x82000000) Tj T* (loadbootenv=fatload mmc ${mmcdev} ${loadaddr} ${bootenvfile}) Tj T* (loadbootscript=load mmc ${mmcdev} ${loadaddr} boot.scr) Tj T* (loadfdt=load ${devtype} ${bootpart} ${fdtaddr} ${bootdir}/${fdtfile}) Tj T* (loadfit=run args_mmc; bootm ${loadaddr}#${fdtfile};) Tj T* (loadimage=load ${devtype} ${bootpart} ${loadaddr} ${bootdir}/${bootfile}) Tj T* (loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz) Tj T* (mmc_boot=if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi) Tj T* (mmcboot=mmc dev ${mmcdev}; setenv devnum ${mmcdev}; setenv devtype mmc; if mmc rescan; then echo SD/MMC found on device\\) Tj T* (  ${mmcdev};if run loadimage; then if test ${boot_fit} -eq 1; then run loadfit; else run mmcloados;fi;fi;fi;) Tj T* (mmcdev=0) Tj T* (mmcloados=run args_mmc; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} -\\) Tj T* (  ${fdtaddr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;) Tj T* (mmcrootfstype=ext4 rootwait) Tj T* (mtdids=nand0=nand.0) Tj T* (mtdparts=mtdparts=nand.0:128k\(NAND.SPL\),128k\(NAND.SPL.backup1\),128k\(NAND.SPL.backup2\),128k\(NAND.SPL.backup3\),256k\(NAND.u\\) Tj T* (  -boot-spl-os\),1m\(NAND.u-boot\),128k\(NAND.u-boot-env\),128k\(NAND.u-boot-env.backup1\),8m\(NAND.kernel\),-\(NAND.file-system\)) Tj T* (nandargs=setenv bootargs console=${console} ${optargs} root=${nandroot} rootfstype=${nandrootfstype}) Tj T* (nandboot=echo Booting from nand ...; run nandargs; nand read ${fdtaddr} NAND.u-boot-spl-os; nand read ${loadaddr}\\) Tj T* (  NAND.kernel; bootz ${loadaddr} - ${fdtaddr}) Tj T* (nandroot=ubi0:rootfs rw ubi.mtd=NAND.file-system,2048) Tj T* (nandrootfstype=ubifs rootwait=1) Tj T* (netargs=setenv bootargs console=${console} ${optargs} root=/dev/nfs nfsroot=${serverip}:${rootpath},${nfsopts} rw ip=dhcp) Tj T* (netboot=echo Booting from network ...; setenv autoload no; dhcp; run netloadimage; run netloadfdt; run netargs; bootz\\) Tj T* (  ${loadaddr} - ${fdtaddr}) Tj T* (netloadfdt=tftp ${fdtaddr} ${fdtfile}) Tj T* (netloadimage=tftp ${loadaddr} ${bootfile}) Tj T* (netmask=255.255.255.0) Tj T* (nfsopts=nolock) Tj T* (partitions=uuid_disk=${uuid_gpt_disk};name=rootfs,start=2MiB,size=-,uuid=${uuid_gpt_rootfs}) Tj T* (pxefile_addr_r=0x80100000) Tj T* (ramargs=setenv bootargs console=${console} ${optargs} root=${ramroot} rootfstype=${ramrootfstype}) Tj T* (ramboot=echo Booting from ramdisk ...; run ramargs; bootz ${loadaddr} ${rdaddr} ${fdtaddr}) Tj T* (ramdisk_addr_r=0x88080000) Tj T* (ramroot=/dev/ram0 rw) Tj T* (ramrootfstype=ext2) Tj T* (rdaddr=0x88080000) Tj T* (rootpath=/export/rootfs) Tj T* (scan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run\\) Tj T* (  scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 35 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
192 0 obj
<< /Length 4833 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 448.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 545.4 314.4 re B*
Q
q
BT 1 0 0 1 0 295.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for\\) Tj T* (  distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot;\\) Tj T* (  fi; done) Tj T* (scan_dev_for_efi=setenv efi_fdtfile ${fdtfile}; if test -z "${fdtfile}" -a -n "${soc}"; then setenv efi_fdtfile\\) Tj T* (  ${soc}-${board}${boardver}.dtb; fi; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart}\\) Tj T* (  ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;if test -e ${devtype} ${devnum}:${distro_bootpart}\\) Tj T* (  efi/boot/bootarm.efi; then echo Found EFI removable media binary efi/boot/bootarm.efi; run boot_efi_binary; echo EFI LOAD\\) Tj T* (  FAILED: continuing...; fi; setenv efi_fdtfile) Tj T* (scan_dev_for_extlinux=if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found\\) Tj T* (  ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi) Tj T* (scan_dev_for_scripts=for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script};\\) Tj T* (  then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done) Tj T* (scriptaddr=0x80000000) Tj T* (serverip=192.168.2.1) Tj T* (soc=am33xx) Tj T* (spiargs=setenv bootargs console=${console} ${optargs} root=${spiroot} rootfstype=${spirootfstype}) Tj T* (spiboot=echo Booting from spi ...; run spiargs; sf probe ${spibusno}:0; sf read ${loadaddr} ${spisrcaddr} ${spiimgsize};\\) Tj T* (  bootz ${loadaddr}) Tj T* (spibusno=0) Tj T* (spiimgsize=0x362000) Tj T* (spiroot=/dev/mtdblock4 rw) Tj T* (spirootfstype=jffs2) Tj T* (spisrcaddr=0xe0000) Tj T* (static_ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}::off) Tj T* (stderr=serial@44e09000) Tj T* (stdin=serial@44e09000) Tj T* (stdout=serial@44e09000) Tj T* (test=test2) Tj T* (test2=echo This is another Test;printenv hostname;echo Done.) Tj T* (update_to_fit=setenv loadaddr ${fit_loadaddr}; setenv bootfile ${fit_bootfile}) Tj T* (usb_boot=usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi) Tj T* (vendor=ti) Tj T* (ver=U-Boot 2017.09-rc2-00151-g2d7cb5b \(Aug 23 2017 - 08:35:31 +0200\)) Tj T*  T* (Environment size: 9569/131068 bytes) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 415.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (saveenv - save environment variables to persistent storage) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 332.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help saveenv) Tj T* (saveenv - save environment variables to persistent storage) Tj T*  T* (Usage:) Tj T* (saveenv) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 274.8236 cm
q
BT 1 0 0 1 0 38 Tm .919461 Tw 12 TL /F1 10 Tf 0 0 0 rg (All changes you make to the U-Boot environment are made in RAM only. They are lost as soon as you) Tj T* 0 Tw .469986 Tw (reboot the system. If you want to make your changes permanent you have to use the ) Tj 1 0 0 rg (saveenv ) Tj 0 0 0 rg (command) Tj T* 0 Tw .04936 Tw (to write a copy of the environment settings to persistent storage, from where they are automatically loaded) Tj T* 0 Tw (during startup:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 200.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( saveenv) Tj T* (Saving Environment to FAT...) Tj T* (writing uboot.env) Tj T* (FAT: Misaligned buffer address \(9df01d48\)) Tj T* (done) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 167.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (setenv - set environment variables) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 93.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help setenv) Tj T* (setenv - set environment variables) Tj T*  T* (Usage:) Tj T* (setenv [-f] name value ...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 36 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
193 0 obj
<< /Length 5521 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 717.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 45.6 re B*
Q
q
BT 1 0 0 1 0 26.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (    - [forcibly] set environment variable 'name' to 'value ...') Tj T* (setenv [-f] name) Tj T* (    - [forcibly] delete environment variable 'name') Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 671.2236 cm
q
BT 1 0 0 1 0 26 Tm .88311 Tw 12 TL /F1 10 Tf 0 0 0 rg (To modify the U-Boot environment you have to use the ) Tj 1 0 0 rg (setenv ) Tj 0 0 0 rg (command. When called with exactly one) Tj T* 0 Tw .131751 Tw (argument, it will delete any variable of that name from U-Boot's environment, if such a variable exists. Any) Tj T* 0 Tw (storage occupied for such a variable will be automatically reclaimed:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 588.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( setenv foo This is an example value.) Tj T* (=) Tj (>) Tj ( printenv foo) Tj T* (foo=This is an example value.) Tj T* (=) Tj (>) Tj ( setenv foo) Tj T* (=) Tj (>) Tj ( printenv foo) Tj T* (## Error: "foo" not defined) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 542.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .908876 Tw (When called with more arguments, the first one will again be the name of the variable, and all following) Tj T* 0 Tw .275984 Tw (arguments will \(concatenated by single space characters\) form the value that gets stored for this variable.) Tj T* 0 Tw (New variables will be automatically created, existing ones overwritten.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 459.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( printenv bar) Tj T* (## Error: "bar" not defined) Tj T* (=) Tj (>) Tj ( setenv bar This is a new example.) Tj T* (=) Tj (>) Tj ( printenv bar) Tj T* (bar=This is a new example.) Tj T* (=) Tj (>) Tj ( setenv bar) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 401.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .50061 Tw (Remember standard shell quoting rules when the value of a variable shall contain characters that have a) Tj T* 0 Tw .701163 Tw (special meaning to the command line parser \(like the $ character that is used for variable substitution or) Tj T* 0 Tw 2.543059 Tw (the semicolon which separates commands\). Use the backslash \(\) character to escape such special) Tj T* 0 Tw (characters, or enclose the whole phrase in apstrophes \('\). Use "${name}" for variable expansion.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 335.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 54 re B*
Q
q
BT 1 0 0 1 0 35 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( setenv cons_opts 'console=tty0 console=ttyS0,\\${baudrate}') Tj T* (=) Tj (>) Tj ( printenv cons_opts) Tj T* (cons_opts=console=tty0 console=ttyS0,${baudrate}) Tj T* (=) Tj (>) Tj ( setenv cons_opts) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 277.0236 cm
q
q
19.2 0 0 19.2 0 36 cm
/FormXob.8de8427910dad6206a6d69120dc9c9cf Do
Q
BT 1 0 0 1 0 38 Tm .617045 Tw 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (There is no restriction on the characters that can be used in a variable name except the restrictions) Tj T* -19.2 0 Td 0 Tw 2.127984 Tw (imposed by the command line parser \(like using backslash for quoting, space and tab characters to) Tj T* 0 Tw .169269 Tw (separate arguments, or semicolon and newline to separate commands\). Even strange input like ) Tj 1 0 0 rg (=-/|\(\)+= ) Tj 0 0 0 rg (is) Tj T* 0 Tw (a perfectly legal variable name in U-Boot.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 259.0236 cm
q
q
19.2 0 0 19.2 0 0 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
BT 1 0 0 1 0 2 Tm 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (A common mistake is to write) Tj T* -19.2 0 Td ET
Q
Q
q
1 0 0 1 62.69291 226.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL (setenv name=value) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 204.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instead of) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 171.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL (setenv name value) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 113.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .246654 Tw (There will be no error message, which lets you believe everything went OK, but it didn't: instead of setting) Tj T* 0 Tw 1.254724 Tw (the variable name to the value value you tried to delete a variable with the name name=value - this is) Tj T* 0 Tw .77686 Tw (probably not what you intended! Always remember that name and value have to be separated by space) Tj T* 0 Tw (and/or tab characters!) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 113.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 37 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
194 0 obj
<< /Length 6413 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 127.4174 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Flattened Device Tree support) Tj T* -127.4174 0 Td ET
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
q
BT 1 0 0 1 0 14 Tm .606651 Tw 12 TL /F1 10 Tf 0 0 0 rg (U-Boot is capable of quite comprehensive handling of the flattened device tree blob, implemented by the) Tj T* 0 Tw 1 0 0 rg (fdt ) Tj 0 0 0 rg (family of commands:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 454.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 495 238.8 re B*
Q
q
BT 1 0 0 1 0 219.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help fdt) Tj T* (fdt - flattened device tree utility commands) Tj T*  T* (Usage:) Tj T* (fdt addr [-c]  ) Tj (<) Tj (addr) Tj (>) Tj ( [) Tj (<) Tj (length) Tj (>) Tj (]   - Set the [control] fdt location to ) Tj (<) Tj (addr) Tj (>) Tj  T* (fdt apply ) Tj (<) Tj (addr) Tj (>) Tj (                    - Apply overlay to the DT) Tj T* (fdt move   ) Tj (<) Tj (fdt) Tj (>) Tj ( ) Tj (<) Tj (newaddr) Tj (>) Tj ( ) Tj (<) Tj (length) Tj (>) Tj ( - Copy the fdt to ) Tj (<) Tj (addr) Tj (>) Tj ( and make it active) Tj T* (fdt resize [) Tj (<) Tj (extrasize) Tj (>) Tj (]            - Resize fdt to size + padding to 4k addr + some optional ) Tj (<) Tj (extrasize) Tj (>) Tj ( if needed) Tj T* (fdt print  ) Tj (<) Tj (path) Tj (>) Tj ( [) Tj (<) Tj (prop) Tj (>) Tj (]          - Recursive print starting at ) Tj (<) Tj (path) Tj (>) Tj  T* (fdt list   ) Tj (<) Tj (path) Tj (>) Tj ( [) Tj (<) Tj (prop) Tj (>) Tj (]          - Print one level starting at ) Tj (<) Tj (path) Tj (>) Tj  T* (fdt get value ) Tj (<) Tj (var) Tj (>) Tj ( ) Tj (<) Tj (path) Tj (>) Tj ( ) Tj (<) Tj (prop) Tj (>) Tj (   - Get ) Tj (<) Tj (property) Tj (>) Tj ( and store in ) Tj (<) Tj (var) Tj (>) Tj  T* (fdt get name ) Tj (<) Tj (var) Tj (>) Tj ( ) Tj (<) Tj (path) Tj (>) Tj ( ) Tj (<) Tj (index) Tj (>) Tj (   - Get name of node ) Tj (<) Tj (index) Tj (>) Tj ( and store in ) Tj (<) Tj (var) Tj (>) Tj  T* (fdt get addr ) Tj (<) Tj (var) Tj (>) Tj ( ) Tj (<) Tj (path) Tj (>) Tj ( ) Tj (<) Tj (prop) Tj (>) Tj (    - Get start address of ) Tj (<) Tj (property) Tj (>) Tj ( and store in ) Tj (<) Tj (var) Tj (>) Tj  T* (fdt get size ) Tj (<) Tj (var) Tj (>) Tj ( ) Tj (<) Tj (path) Tj (>) Tj ( [) Tj (<) Tj (prop) Tj (>) Tj (]  - Get size of [) Tj (<) Tj (property) Tj (>) Tj (] or num nodes and store in ) Tj (<) Tj (var) Tj (>) Tj  T* (fdt set    ) Tj (<) Tj (path) Tj (>) Tj ( ) Tj (<) Tj (prop) Tj (>) Tj ( [) Tj (<) Tj (val) Tj (>) Tj (]    - Set ) Tj (<) Tj (property) Tj (>) Tj ( [to ) Tj (<) Tj (val) Tj (>) Tj (]) Tj T* (fdt mknode ) Tj (<) Tj (path) Tj (>) Tj ( ) Tj (<) Tj (node) Tj (>) Tj (            - Create a new node after ) Tj (<) Tj (path) Tj (>) Tj  T* (fdt rm     ) Tj (<) Tj (path) Tj (>) Tj ( [) Tj (<) Tj (prop) Tj (>) Tj (]          - Delete the node or ) Tj (<) Tj (property) Tj (>) Tj  T* (fdt header                          - Display header info) Tj T* (fdt bootcpu ) Tj (<) Tj (id) Tj (>) Tj (                    - Set boot cpuid) Tj T* (fdt memory ) Tj (<) Tj (addr) Tj (>) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (            - Add/Update memory node) Tj T* (fdt rsvmem print                    - Show current mem reserves) Tj T* (fdt rsvmem add ) Tj (<) Tj (addr) Tj (>) Tj ( ) Tj (<) Tj (size) Tj (>) Tj (        - Add a mem reserve) Tj T* (fdt rsvmem delete ) Tj (<) Tj (index) Tj (>) Tj (           - Delete a mem reserves) Tj T* (fdt chosen [) Tj (<) Tj (start) Tj (>) Tj ( ) Tj (<) Tj (end) Tj (>) Tj (]          - Add/update the /chosen branch in the tree) Tj T* (                                        ) Tj (<) Tj (start) Tj (>) Tj (/) Tj (<) Tj (end) Tj (>) Tj ( - initrd start/end addr) Tj T* (NOTE: Dereference aliases by omitting the leading '/', e.g. fdt print ethernet0.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 421.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt addr - select FDT to work on) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 355.0236 cm
q
BT 1 0 0 1 0 38 Tm .148988 Tw 12 TL /F1 10 Tf 0 0 0 rg (First, the blob that is to be operated on should be stored in memory, and U-Boot has to be informed about) Tj T* 0 Tw .916235 Tw (its location by the ) Tj 1 0 0 rg (fdt addr ) Tj 0 0 0 rg (command. Once this command has been issued, all subsequent fdt handling) Tj T* 0 Tw .197765 Tw (commands will use the blob stored at the given address. This address can be changed later on by issuing) Tj T* 0 Tw 1 0 0 rg (fdt addr ) Tj 0 0 0 rg (or ) Tj 1 0 0 rg (fdt move ) Tj 0 0 0 rg (command. Here's how to load the blob into memory and tell U-Boot its location:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 213.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 129.6 re B*
Q
q
BT 1 0 0 1 0 110.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( setenv fdt_addr_r 0x80000000) Tj T* (=) Tj (>) Tj ( tftpb ${fdt_addr_r} beagleboneblack/tbot/u-boot.dtb) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.10) Tj T* (Filename 'beagleboneblack/tbot/u-boot.dtb'.) Tj T* (Load address: 0x80000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (####) Tj T* (       4.3 MiB/s) Tj T* (done) Tj T* (Bytes transferred = 45056 \(b000 hex\)) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( fdt addr ${fdt_addr_r}) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 180.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt list - print one level) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 114.2236 cm
q
BT 1 0 0 1 0 38 Tm 1.185542 Tw 12 TL /F1 10 Tf 0 0 0 rg (Having selected the device tree stored in the blob just loaded, we can inspect its contents. As an FDT) Tj T* 0 Tw .896457 Tw (usually is quite extensive, it is easier to get information about the structure by looking at selected levels) Tj T* 0 Tw .332988 Tw (rather than full hierarchies. ) Tj 1 0 0 rg (fdt list ) Tj 0 0 0 rg (allows us to do exactly this. Let's have a look at the hierarchy one level) Tj T* 0 Tw (below the cpus node:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 38 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
195 0 obj
<< /Length 3779 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 683.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 79.2 re B*
Q
q
BT 1 0 0 1 0 60.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( fdt list /cpus) Tj T* (cpus {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000000) Tj (>) Tj (;) Tj T* (      cpu@0 {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 650.6236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt print - recursive print) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 608.6236 cm
q
BT 1 0 0 1 0 14 Tm .479988 Tw 12 TL /F1 10 Tf 0 0 0 rg (To print a complete subtree we use ) Tj 1 0 0 rg (fdt print) Tj 0 0 0 rg (. In comparison to the previous example it is obvious that the) Tj T* 0 Tw (whole subtree is printed:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 441.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 528.6 154.8 re B*
Q
q
BT 1 0 0 1 0 135.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( fdt print /cpus) Tj T* (cpus {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000000) Tj (>) Tj (;) Tj T* (      cpu@0 {) Tj T* (              compatible = "arm,cortex-a8";) Tj T* (              device_type = "cpu";) Tj T* (              reg = ) Tj (<) Tj (0x00000000) Tj (>) Tj (;) Tj T* (              operating-points = ) Tj (<) Tj (0x000afc80 0x00139b88 0x000927c0 0x0012b128 0x0007a120 0x00112a88 0x00043238 0x00112a88) Tj (>) Tj (;) Tj T* (              voltage-tolerance = ) Tj (<) Tj (0x00000002) Tj (>) Tj (;) Tj T* (              clocks = ) Tj (<) Tj (0x00000002) Tj (>) Tj (;) Tj T* (              clock-names = "cpu";) Tj T* (              clock-latency = ) Tj (<) Tj (0x000493e0) Tj (>) Tj (;) Tj T* (              cpu0-supply = ) Tj (<) Tj (0x00000003) Tj (>) Tj (;) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 408.6236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt mknode - create new nodes) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 366.6236 cm
q
BT 1 0 0 1 0 14 Tm .640898 Tw 12 TL /F1 10 Tf 1 0 0 rg (fdt mknode ) Tj 0 0 0 rg (can be used to attach a new node to the tree. We will use the ) Tj 1 0 0 rg (fdt list ) Tj 0 0 0 rg (command to verify that) Tj T* 0 Tw (the new node has been created and that it is empty:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 90.42362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 264 re B*
Q
q
BT 1 0 0 1 0 245 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 39 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
196 0 obj
<< /Length 2726 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 305.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 457.2 re B*
Q
q
BT 1 0 0 1 0 438.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj ( fdt mknode / testnode) Tj T* (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      testnode {) Tj T* (      };) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj ( fdt list /testnode) Tj T* (testnode {) Tj T* (};) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 272.6236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt set - set node properties) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 242.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Now, let's create a property at the newly created node; again we'll use ) Tj 1 0 0 rg (fdt list ) Tj 0 0 0 rg (for verification:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 159.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( fdt set /testnode testprop) Tj T* (=) Tj (>) Tj ( fdt set /testnode testprop testvalue) Tj T* (=) Tj (>) Tj ( fdt list /testnode) Tj T* (testnode {) Tj T* (      testprop = "testvalue";) Tj T* (};) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 126.6236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt rm - remove nodes or properties) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 40 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
197 0 obj
<< /Length 3258 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 14 Tm .245542 Tw 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (fdt rm ) Tj 0 0 0 rg (command is used to remove nodes and properties. Let's delete the test property created in the) Tj T* 0 Tw (previous paragraph and verify the results:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 347.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 381.6 re B*
Q
q
BT 1 0 0 1 0 362.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( fdt rm /testnode testprop) Tj T* (=) Tj (>) Tj ( fdt list /testnode) Tj T* (testnode {) Tj T* (};) Tj T* (=) Tj (>) Tj ( fdt rm /testnode) Tj T* (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 314.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt move - move FDT blob to new address) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 272.2236 cm
q
BT 1 0 0 1 0 14 Tm 1.747633 Tw 12 TL /F1 10 Tf 0 0 0 rg (To move the blob from one memory location to another we will use the ) Tj 1 0 0 rg (fdt move ) Tj 0 0 0 rg (command. Besides) Tj T* 0 Tw (moving the blob, it makes the new address the "active" one - similar to ) Tj 1 0 0 rg (fdt addr) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 96.82362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 163.2 re B*
Q
q
BT 1 0 0 1 0 144.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( fdt move ${fdt_addr_r} 0x8000b000 b000) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 41 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
198 0 obj
<< /Length 2530 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 95.62362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 667.2 re B*
Q
q
BT 1 0 0 1 0 648.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj ( fdt mknod / foobar) Tj T* (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      foobar {) Tj T* (      };) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( fdt addr ${fdt_addr_r}) Tj T* (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 42 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
199 0 obj
<< /Length 3034 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 532.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 230.4 re B*
Q
q
BT 1 0 0 1 0 211.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 499.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (fdt chosen - fixup dynamic info) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 421.4236 cm
q
BT 1 0 0 1 0 50 Tm .565488 Tw 12 TL /F1 10 Tf 0 0 0 rg (One of the modifications made by U-Boot to the blob before passing it to the kernel is the addition of the) Tj T* 0 Tw .063314 Tw 1 0 0 rg (/chosen ) Tj 0 0 0 rg (node. Linux 2.6 Documentation/powerpc/booting-without-of.txt says that this node is used to store) Tj T* 0 Tw .41229 Tw ("some variable environment information, like the arguments, or the default input/output devices." To force) Tj T* 0 Tw .143672 Tw (U-Boot to add the ) Tj 1 0 0 rg (/chosen ) Tj 0 0 0 rg (node to the current blob, ) Tj 1 0 0 rg (fdt chosen ) Tj 0 0 0 rg (command can be used. Let's now verify its) Tj T* 0 Tw (operation:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 94.82362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 314.4 re B*
Q
q
BT 1 0 0 1 0 295.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 43 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
200 0 obj
<< /Length 2054 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 356.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 406.8 re B*
Q
q
BT 1 0 0 1 0 387.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (      };) Tj T* (};) Tj T* (=) Tj (>) Tj ( fdt chosen) Tj T* (=) Tj (>) Tj ( fdt list /) Tj T* (/ {) Tj T* (      #address-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      #size-cells = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      compatible = "ti,am335x-evm", "ti,am33xx";) Tj T* (      interrupt-parent = ) Tj (<) Tj (0x00000001) Tj (>) Tj (;) Tj T* (      model = "TI AM335x EVM";) Tj T* (      chosen {) Tj T* (      };) Tj T* (      aliases {) Tj T* (      };) Tj T* (      memory {) Tj T* (      };) Tj T* (      cpus {) Tj T* (      };) Tj T* (      pmu {) Tj T* (      };) Tj T* (      soc {) Tj T* (      };) Tj T* (      ocp {) Tj T* (      };) Tj T* (      fixedregulator@0 {) Tj T* (      };) Tj T* (      fixedregulator@1 {) Tj T* (      };) Tj T* (      fixedregulator@2 {) Tj T* (      };) Tj T* (      matrix_keypad@0 {) Tj T* (      };) Tj T* (      volume_keys@0 {) Tj T* (      };) Tj T* (      backlight {) Tj T* (      };) Tj T* (      panel {) Tj T* (      };) Tj T* (      sound {) Tj T* (      };) Tj T* (};) Tj T* (=) Tj (>) Tj ( fdt list /chosen) Tj T* (chosen {) Tj T* (      stdout-path = "/ocp/serial@44e09000";) Tj T* (      tick-timer = "/ocp/timer@48040000";) Tj T* (};) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 322.0236 cm
q
BT 1 0 0 1 0 14 Tm .205814 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note: ) Tj 1 0 0 rg (fdt boardsetup ) Tj 0 0 0 rg (performs board-specific blob updates, most commonly setting clock frequencies, etc.) Tj T* 0 Tw (Discovering its operation is left as an excercise for the reader.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 322.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 44 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
201 0 obj
<< /Length 1989 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 165.7574 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Special Commands) Tj T* -165.7574 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (i2c - I2C sub-system) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 505.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 188.4 re B*
Q
q
BT 1 0 0 1 0 169.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help i2c) Tj T* (i2c - I2C sub-system) Tj T*  T* (Usage:) Tj T* (i2c bus [muxtype:muxaddr:muxchannel] - show I2C bus info) Tj T* (crc32 chip address[.0, .1, .2] count - compute CRC32 checksum) Tj T* (i2c dev [dev] - show or set current I2C bus) Tj T* (i2c loop chip address[.0, .1, .2] [# of objects] - looping read of device) Tj T* (i2c md chip address[.0, .1, .2] [# of objects] - read from I2C device) Tj T* (i2c mm chip address[.0, .1, .2] - write to I2C device \(auto-incrementing\)) Tj T* (i2c mw chip address[.0, .1, .2] value [count] - write to I2C device \(fill\)) Tj T* (i2c nm chip address[.0, .1, .2] - write to I2C device \(constant address\)) Tj T* (i2c probe [address] - test for and show device\(s\) on the I2C bus) Tj T* (i2c read chip address[.0, .1, .2] length memaddress - read to memory) Tj T* (i2c write memaddress chip address[.0, .1, .2] length [-s] - write memory) Tj T* (          to I2C; the -s option selects bulk write in a single transaction) Tj T* (i2c flags chip [flags] - set or get chip flags) Tj T* (i2c olen chip [offset_length] - set or get chip offset length) Tj T* (i2c reset - re-init the I2C Controller) Tj T* (i2c speed [speed] - show or set I2C bus speed) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 495.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 45 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
202 0 obj
<< /Length 3322 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 140.7524 0 Td 18 TL /F3 15 Tf 0 0 0 rg (Miscellaneous Commands) Tj T* -140.7524 0 Td ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (echo - echo args to console) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 623.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 70.8 re B*
Q
q
BT 1 0 0 1 0 51.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help echo) Tj T* (echo - echo args to console) Tj T*  T* (Usage:) Tj T* (echo [args..]) Tj T* (    - echo args to console; \\c suppresses newline) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 601.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (echo ) Tj 0 0 0 rg (command echoes the arguments to the console:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 551.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 37.2 re B*
Q
q
BT 1 0 0 1 0 18.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( echo The quick brown fox jumped over the lazy dog.) Tj T* (The quick brown fox jumped over the lazy dog.) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 518.6236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (reset - Perform RESET of the CPU) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 436.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help reset) Tj T* (reset - Perform RESET of the CPU) Tj T*  T* (Usage:) Tj T* (reset) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 414.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (reset ) Tj 0 0 0 rg (command reboots the system.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 121.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 280.8 re B*
Q
q
BT 1 0 0 1 0 261.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( reset) Tj T*  T* (resetting ...) Tj T*  T* (U-Boot SPL 2017.09-rc2-00151-g2d7cb5b \(Aug 23 2017 - 08:35:31\)) Tj T* (Trying to boot from MMC2) Tj T* (reading uboot.env) Tj T*  T* (** Unable to read "uboot.env" from mmc0:1 **) Tj T* (Using default environment) Tj T*  T* (reading u-boot.img) Tj T* (reading u-boot.img) Tj T* (reading u-boot.img) Tj T* (reading u-boot.img) Tj T*  T*  T* (U-Boot 2017.09-rc2-00151-g2d7cb5b \(Aug 23 2017 - 08:35:31 +0200\)) Tj T*  T* (CPU  : AM335X-GP rev 2.1) Tj T* (Model: TI AM335x BeagleBone Black) Tj T* (DRAM:  512 MiB) Tj T* (NAND:  0 MiB) Tj T* (MMC:   OMAP SD/MMC: 0, OMAP SD/MMC: 1) Tj T* (reading uboot.env) Tj T* (ERROR: No USB device found) Tj T*  T* (at drivers/usb/gadget/ether.c:2709/usb_ether_init\(\)) Tj T* (Net:   CACHE: Misaligned operation at range [9df2f440, 9df2f4e4]) Tj T* (eth0: ethernet@4a100000) Tj T* (Hit any key to stop autoboot:  2 ) Tj /F5 7 Tf 8.4 TL (nnn) Tj /F4 7 Tf 8.4 TL ( 0) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 46 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
203 0 obj
<< /Length 3147 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (sleep - delay execution for some time) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 650.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 79.2 re B*
Q
q
BT 1 0 0 1 0 60.2 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help sleep) Tj T* (sleep - delay execution for some time) Tj T*  T* (Usage:) Tj T* (sleep N) Tj T* (    - delay execution for N seconds \(N is _decimal_ and can be) Tj T* (      fractional\)) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 628.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj 1 0 0 rg (sleep ) Tj 0 0 0 rg (command pauses execution for the number of seconds given as the argument:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 587.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
BT 1 0 0 1 0 9.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( sleep 5) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 554.6236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (version - print monitor version) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 430.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 104.4 re B*
Q
q
BT 1 0 0 1 0 85.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( help version) Tj T* (version - print monitor, compiler and linker version) Tj T*  T* (Usage:) Tj T* (version) Tj T* (=) Tj (>) Tj ( version) Tj T* (U-Boot 2017.09-rc2-00151-g2d7cb5b \(Aug 23 2017 - 08:35:31 +0200\)) Tj T*  T* (arm-linux-gnueabi-gcc \(GCC\) 4.7.2) Tj T* (GNU ld \(GNU Binutils\) 2.23.1.20121113) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 396.0236 cm
q
BT 1 0 0 1 0 14 Tm .93832 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can print the version and build date of the U-Boot image running on your system using the ) Tj 1 0 0 rg (version) Tj T* 0 Tw 0 0 0 rg (command \(short: ) Tj 1 0 0 rg (vers) Tj 0 0 0 rg (\):) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 321.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 62.4 re B*
Q
q
BT 1 0 0 1 0 43.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( version) Tj T* (U-Boot 2017.09-rc2-00151-g2d7cb5b \(Aug 23 2017 - 08:35:31 +0200\)) Tj T*  T* (arm-linux-gnueabi-gcc \(GCC\) 4.7.2) Tj T* (GNU ld \(GNU Binutils\) 2.23.1.20121113) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 288.4236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (? - alias for 'help') Tj T* ET
Q
Q
q
1 0 0 1 62.69291 258.4236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can use ) Tj 1 0 0 rg (? ) Tj 0 0 0 rg (as a short form for the ) Tj 1 0 0 rg (help ) Tj 0 0 0 rg (command \(see description above\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 258.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 47 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
204 0 obj
<< /Length 9271 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 126.5924 0 Td 18 TL /F3 15 Tf 0 0 0 rg (U-Boot Environment Variables) Tj T* -126.5924 0 Td ET
Q
Q
q
1 0 0 1 62.69291 693.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .260542 Tw (The U-Boot environment is a block of memory that is kept on persistent storage and copied to RAM when) Tj T* 0 Tw .864104 Tw (U-Boot starts. It is used to store environment variables which can be used to configure the system. The) Tj T* 0 Tw (environment is protected by a CRC32 checksum.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.462651 Tw (This section lists the most important environment variables, some of which have a special meaning to) Tj T* 0 Tw (U-Boot. You can use these variables to configure the behaviour of U-Boot to your liking.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 657.0236 cm
Q
q
1 0 0 1 62.69291 657.0236 cm
Q
q
1 0 0 1 62.69291 621.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.516457 Tw 12 TL /F1 10 Tf 1 0 0 rg (autoload) Tj 0 0 0 rg (: if set to "no" \(or any string beginning with 'n'\), the ) Tj 1 0 0 rg (rarpb) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (bootp ) Tj 0 0 0 rg (or ) Tj 1 0 0 rg (dhcp ) Tj 0 0 0 rg (commands will) Tj T* 0 Tw .852339 Tw (perform only a configuration lookup from the BOOTP / DHCP server, but not try to load any image) Tj T* 0 Tw (using TFTP.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 615.0236 cm
Q
q
1 0 0 1 62.69291 591.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .268221 Tw 12 TL /F1 10 Tf 1 0 0 rg (autostart) Tj 0 0 0 rg (: if set to "yes", an image loaded using the ) Tj 1 0 0 rg (rarpb) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (bootp) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (dhcp) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (tftp) Tj 0 0 0 rg (, ) Tj 1 0 0 rg (disk) Tj 0 0 0 rg (, or ) Tj 1 0 0 rg (docb ) Tj 0 0 0 rg (commands) Tj T* 0 Tw (will be automatically started \(by internally calling the ) Tj 1 0 0 rg (bootm ) Tj 0 0 0 rg (command\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
Q
q
1 0 0 1 62.69291 501.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 74 Tm 1.741984 Tw 12 TL /F1 10 Tf 1 0 0 rg (baudrate) Tj 0 0 0 rg (: a decimal number that selects the console baudrate \(in bps\). Only a predefined list of) Tj T* 0 Tw 2.573059 Tw (baudrate settings is available. When you change the baudrate \(using the "setenv baudrate ...") Tj T* 0 Tw .07311 Tw (command\), U-Boot will switch the baudrate of the console terminal and wait for a newline which must) Tj T* 0 Tw .292093 Tw (be entered with the new speed setting. This is to make sure you can actually type at the new speed.) Tj T* 0 Tw .416988 Tw (If this fails, you have to reset the board \(which will operate at the old speed since you were not able) Tj T* 0 Tw .66561 Tw (to ) Tj 1 0 0 rg (saveenv ) Tj 0 0 0 rg (the new settings.\) If no "baudrate" variable is defined, the default baudrate of 115200 is) Tj T* 0 Tw (used.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 495.0236 cm
Q
q
1 0 0 1 62.69291 471.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.185984 Tw 12 TL /F1 10 Tf 1 0 0 rg (bootargs) Tj 0 0 0 rg (: The contents of this variable are passed to the Linux kernel as boot arguments \(aka) Tj T* 0 Tw ("command line"\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 465.0236 cm
Q
q
1 0 0 1 62.69291 429.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 2.01229 Tw 12 TL /F1 10 Tf 1 0 0 rg (bootcmd) Tj 0 0 0 rg (: This variable defines a command string that is automatically executed when the initial) Tj T* 0 Tw 1.232126 Tw (countdown is not interrupted. This command is only executed when the variable ) Tj 1 0 0 rg (bootdelay ) Tj 0 0 0 rg (is also) Tj T* 0 Tw (defined!) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 423.0236 cm
Q
q
1 0 0 1 62.69291 363.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 50 Tm .31311 Tw 12 TL /F1 10 Tf 1 0 0 rg (bootdelay) Tj 0 0 0 rg (: After reset, U-Boot will wait this number of seconds before it executes the contents of the) Tj T* 0 Tw .372651 Tw 1 0 0 rg (bootcmd ) Tj 0 0 0 rg (variable. During this time a countdown is printed, which can be interrupted by pressing any) Tj T* 0 Tw .194692 Tw (key. Set this variable to 0 boot without delay. Be careful: depending on the contents of your bootcmd) Tj T* 0 Tw .439269 Tw (variable, this can prevent you from entering interactive commands again forever! Set this variable to) Tj T* 0 Tw (-1 to disable autoboot.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 357.0236 cm
Q
q
1 0 0 1 62.69291 345.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (bootfile) Tj 0 0 0 rg (: name of the default image to load with TFTP) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 339.0236 cm
Q
q
1 0 0 1 62.69291 303.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .093984 Tw 12 TL /F1 10 Tf 1 0 0 rg (ethaddr) Tj 0 0 0 rg (: Ethernet MAC address for first/only ethernet interface \(= eth0 in Linux\). This variable can be) Tj T* 0 Tw .520651 Tw (set only once \(usually during manufacturing of the board\). U-Boot refuses to delete or overwrite this) Tj T* 0 Tw (variable once it has been set.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 297.0236 cm
Q
q
1 0 0 1 62.69291 285.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (eth1addr) Tj 0 0 0 rg (: Ethernet MAC address for second ethernet interface \(= eth1 in Linux\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 279.0236 cm
Q
q
1 0 0 1 62.69291 249.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 15 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (eth2addr) Tj 0 0 0 rg (: Ethernet MAC address for third ethernet interface \(= eth2 in Linux\).) Tj T* ET
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (...) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 243.0236 cm
Q
q
1 0 0 1 62.69291 135.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 98 Tm 2.226651 Tw 12 TL /F1 10 Tf 1 0 0 rg (initrd_high) Tj 0 0 0 rg (: used to restrict positioning of initrd ramdisk images: If this variable is not set, initrd) Tj T* 0 Tw .55832 Tw (images will be copied to the highest possible address in RAM; this is usually what you want since it) Tj T* 0 Tw 1.300542 Tw (allows for maximum initrd size. If for some reason you want to make sure that the initrd image is) Tj T* 0 Tw .640651 Tw (loaded below the CFG_BOOTMAPSZ limit, you can set this environment variable to a value of "no") Tj T* 0 Tw .162619 Tw (or "off" or "0". Alternatively, you can set it to a maximum upper address to use \(U-Boot will still check) Tj T* 0 Tw .309431 Tw (that it does not overwrite the U-Boot stack and data\). For instance, when you have a system with 16) Tj T* 0 Tw .076988 Tw (MB RAM, and want to reserve 4 MB from use by Linux, you can do this by adding "mem=12M" to the) Tj T* 0 Tw .20528 Tw (value of the "bootargs" variable. However, now you must make sure that the initrd image is placed in) Tj T* 0 Tw (the first 12 MB as well - this can be done with) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 135.0236 cm
Q
q
1 0 0 1 62.69291 102.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
BT 1 0 0 1 0 1.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( setenv initrd_high 00c00000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 48 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
205 0 obj
<< /Length 10098 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.176136 Tw (Setting initrd_high to the highest possible address in your system \(0xFFFFFFFF\) prevents U-Boot from) Tj T* 0 Tw 2.144987 Tw (copying the image to RAM at all. This allows for faster boot times, but requires a Linux kernel with) Tj T* 0 Tw (zero-copy ramdisk support.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 723.0236 cm
Q
q
1 0 0 1 62.69291 723.0236 cm
Q
q
1 0 0 1 62.69291 711.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (ipaddr) Tj 0 0 0 rg (: IP address; needed for tftp command) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
Q
q
1 0 0 1 62.69291 693.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (loadaddr) Tj 0 0 0 rg (: Default load address for commands like tftp or loads.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 687.0236 cm
Q
q
1 0 0 1 62.69291 651.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .594651 Tw 12 TL /F1 10 Tf 1 0 0 rg (loads_echo) Tj 0 0 0 rg (: If set to 1, all characters received during a serial download \(using the loads command\)) Tj T* 0 Tw .624104 Tw (are echoed back. This might be needed by some terminal emulations \(like cu\), but may as well just) Tj T* 0 Tw (take time on others.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 645.0236 cm
Q
q
1 0 0 1 62.69291 621.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.458443 Tw 12 TL /F1 10 Tf 1 0 0 rg (mtdparts) Tj 0 0 0 rg (: This variable \(usually defined using the mtdparts command\) allows to share a common) Tj T* 0 Tw (MTD partition scheme between U-Boot and the Linux kernel.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 615.0236 cm
Q
q
1 0 0 1 62.69291 543.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 62 Tm 1.104651 Tw 12 TL /F1 10 Tf 1 0 0 rg (pram) Tj 0 0 0 rg (: If the "Protected RAM" feature is enabled in your board's configuration, this variable can be) Tj T* 0 Tw 1.433735 Tw (defined to enable the reservation of such "protected RAM", i. e. RAM which is not overwritten by) Tj T* 0 Tw .865542 Tw (U-Boot. Define this variable to hold the number of kB you want to reserve for pRAM. Note that the) Tj T* 0 Tw .755868 Tw (board info structure will still show the full amount of RAM. If pRAM is reserved, a new environment) Tj T* 0 Tw .23881 Tw (variable "mem" will automatically be defined to hold the amount of remaining RAM in a form that can) Tj T* 0 Tw (be passed as boot argument to Linux, for instance like that:) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 543.0236 cm
Q
q
1 0 0 1 62.69291 502.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
BT 1 0 0 1 0 9.8 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( setenv bootargs ${bootargs} mem=\\${mem}) Tj T* (=) Tj (>) Tj ( saveenv) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 468.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .569488 Tw (This way you can tell Linux not to use this memory, either, which results in a memory region that will not) Tj T* 0 Tw (be affected by reboots.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 462.0236 cm
Q
q
1 0 0 1 62.69291 462.0236 cm
Q
q
1 0 0 1 62.69291 450.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (serverip) Tj 0 0 0 rg (: TFTP server IP address; needed for ) Tj 1 0 0 rg (tftp ) Tj 0 0 0 rg (command.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 444.0236 cm
Q
q
1 0 0 1 62.69291 408.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.208314 Tw 12 TL /F1 10 Tf 1 0 0 rg (serial#) Tj 0 0 0 rg (: contains hardware identification information such as type string and/or serial number. This) Tj T* 0 Tw .704651 Tw (variable can be set only once \(usually during manufacturing of the board\). U-Boot refuses to delete) Tj T* 0 Tw (or overwrite this variable once it hass been set.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 402.0236 cm
Q
q
1 0 0 1 62.69291 366.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.719069 Tw 12 TL /F1 10 Tf 1 0 0 rg (silent) Tj 0 0 0 rg (: If the configuration option ) Tj 1 0 0 rg (CONFIG_SILENT_CONSOLE ) Tj 0 0 0 rg (has been enabled for your board,) Tj T* 0 Tw .046905 Tw (setting this variable to any value will suppress all console messages. Please see doc/README.silent) Tj T* 0 Tw (for details.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 360.0236 cm
Q
q
1 0 0 1 62.69291 324.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.570574 Tw 12 TL /F1 10 Tf 1 0 0 rg (verify) Tj 0 0 0 rg (: If set to n or no disables the checksum calculation over the complete image in the bootm) Tj T* 0 Tw 2.084985 Tw (command to trade speed for safety in the boot process. Note that the header checksum is still) Tj T* 0 Tw (verified.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 324.0236 cm
Q
q
1 0 0 1 62.69291 294.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.138443 Tw (The following environment variables may be used and automatically updated by the network boot) Tj T* 0 Tw (commands \(bootp, dhcp, or tftp\), depending the information provided by your boot server:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 288.0236 cm
Q
q
1 0 0 1 62.69291 288.0236 cm
Q
q
1 0 0 1 62.69291 276.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (bootfile) Tj 0 0 0 rg (: see above) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 270.0236 cm
Q
q
1 0 0 1 62.69291 258.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (dnsip) Tj 0 0 0 rg (: IP address of your Domain Name Server) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 252.0236 cm
Q
q
1 0 0 1 62.69291 240.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (gatewayip) Tj 0 0 0 rg (: IP address of the Gateway \(Router\) to use) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 234.0236 cm
Q
q
1 0 0 1 62.69291 222.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (hostname) Tj 0 0 0 rg (: Target hostname) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 216.0236 cm
Q
q
1 0 0 1 62.69291 204.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (ipaddr) Tj 0 0 0 rg (: see above) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 198.0236 cm
Q
q
1 0 0 1 62.69291 186.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (netmask) Tj 0 0 0 rg (: Subnet Mask) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 180.0236 cm
Q
q
1 0 0 1 62.69291 168.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (rootpath) Tj 0 0 0 rg (: Pathname of the root filesystem on the NFS server) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 162.0236 cm
Q
q
1 0 0 1 62.69291 150.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (serverip) Tj 0 0 0 rg (: see above) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 144.0236 cm
Q
q
1 0 0 1 62.69291 120.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.798221 Tw 12 TL /F1 10 Tf 1 0 0 rg (filesize) Tj 0 0 0 rg (: Size \(as hex number in bytes\) of the file downloaded using the last bootp, dhcp, or tftp) Tj T* 0 Tw (command.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 120.0236 cm
Q
q
1 0 0 1 62.69291 120.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 49 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
206 0 obj
<< /Length 7216 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 131.1824 0 Td 18 TL /F3 15 Tf 0 0 0 rg (U-Boot Scripting Capabilities) Tj T* -131.1824 0 Td ET
Q
Q
q
1 0 0 1 62.69291 693.0236 cm
q
BT 1 0 0 1 0 26 Tm .277045 Tw 12 TL /F1 10 Tf 0 0 0 rg (U-Boot allows to store commands or command sequences in a plain text file. Using the ) Tj 1 0 0 rg (mkimage ) Tj 0 0 0 rg (tool you) Tj T* 0 Tw .294104 Tw (can then convert this file into a script image which can be executed using U-Boot's ) Tj 1 0 0 rg (source ) Tj 0 0 0 rg (command, see) Tj T* 0 Tw (section ) Tj 0 0 .501961 rg (source - run script from memory) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
q
q
19.2 0 0 19.2 0 12 cm
/FormXob.dcfda2e6b7dc748020d5b9302ed21d37 Do
Q
BT 1 0 0 1 0 14 Tm .588735 Tw 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (Hint: maximum flexibility can be achieved if you are using the Hush shell as command interpreter in) Tj T* -19.2 0 Td 0 Tw (U-Boot, see ) Tj 0 0 .501961 rg (How the Command Line Parsing Works) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 627.0236 cm
q
BT 1 0 0 1 0 3 Tm 94.91988 0 Td 18 TL /F3 15 Tf 0 0 0 rg (How the Command Line Parsing Works) Tj T* -94.91988 0 Td ET
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .71811 Tw (There are two different command line parsers available with U-Boot: the old "simple" one, and the much) Tj T* 0 Tw (more powerful "hush" shell:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 552.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (Old, simple command line parser) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 528.0236 cm
Q
q
1 0 0 1 62.69291 528.0236 cm
Q
q
1 0 0 1 62.69291 516.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (supports environment variables \(through setenv / saveenv commands\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 510.0236 cm
Q
q
1 0 0 1 62.69291 498.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (several commands on one line, separated by ';') Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 492.0236 cm
Q
q
1 0 0 1 62.69291 429.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (variable substitution using "... ${_variablename_} ..." syntax) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
19.2 0 0 19.2 0 36 cm
/FormXob.2500e21ba6b1543d9ba2126fde074a9d Do
Q
BT 1 0 0 1 0 38 Tm 2.351647 Tw 12 TL 19.2 0 Td /F1 10 Tf 0 0 0 rg (NOTE: Older versions of U-Boot used "$\(...\)" for variable substitution. Support for this) Tj T* -19.2 0 Td 0 Tw .714651 Tw (syntax is still present in current versions, but will be removed soon. Please use "${...}" instead,) Tj T* 0 Tw .643059 Tw (which has the additional benefit that your environment definitions are compatible with the Hush) Tj T* 0 Tw (shell, too.) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 423.0236 cm
Q
q
1 0 0 1 62.69291 411.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (special characters \('$', ';'\) can be escaped by prefixing with '', for example:) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 411.0236 cm
Q
q
1 0 0 1 62.69291 378.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL (setenv bootcmd bootm \\${address}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 362.4236 cm
Q
q
1 0 0 1 62.69291 362.4236 cm
Q
q
1 0 0 1 62.69291 350.4236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can also escape text by enclosing in single apostrophes, for example:) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 350.4236 cm
Q
q
1 0 0 1 62.69291 317.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 503.4 20.4 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 1.4 Tm /F4 7 Tf 8.4 TL (setenv addip 'setenv bootargs ${bootargs} ip=${ipaddr}:${serverip}:${gatewayip}:${netmask}:${hostname}:${netdev}:off') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 284.8236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (Hush shell) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 260.8236 cm
Q
q
1 0 0 1 62.69291 260.8236 cm
Q
q
1 0 0 1 62.69291 236.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .390976 Tw (similar to Bourne shell, with control structures like if...then...else...fi, for...do...done, while...do...done,) Tj T* 0 Tw (until...do...done, ...) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 230.8236 cm
Q
q
1 0 0 1 62.69291 194.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.339979 Tw (supports environment \("global"\) variables \(through setenv / saveenv commands\) and local shell) Tj T* 0 Tw .323059 Tw (variables \(through standard shell syntax name=value \); only environment variables can be used with) Tj T* 0 Tw (the run command, especially as the variable to run \(i. e. the first argument\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 188.8236 cm
Q
q
1 0 0 1 62.69291 128.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .47229 Tw (In the current implementation, the local variables space and global environment variables space are) Tj T* 0 Tw .316651 Tw (separated. Local variables are those you define by simply typing like name=value. To access a local) Tj T* 0 Tw .073516 Tw (variable later on, you have to write '$name' or '${name}'; to execute the contents of a variable directly) Tj T* 0 Tw .462927 Tw (you can type '$name' at the command prompt. Note that local variables can only be used for simple) Tj T* 0 Tw (commands, not for compound commands etc.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 122.8236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 50 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
207 0 obj
<< /Length 5318 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.11186 Tw (Global environment variables are those you can set and print using setenv and printenv. To run a) Tj T* 0 Tw .237356 Tw (command stored in such a variable, you need to use the run command, and you must not use the '$') Tj T* 0 Tw (sign to access them.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 723.0236 cm
Q
q
1 0 0 1 62.69291 699.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .161412 Tw (To store commands and special characters in a variable, use single quotation marks surrounding the) Tj T* 0 Tw (whole text of the variable, instead of the backslashes before semicolons and special symbols.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 693.0236 cm
Q
q
1 0 0 1 62.69291 669.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.557209 Tw (Be careful when using the hash \('#'\) character - like with a "real" Bourne shell it is the comment) Tj T* 0 Tw (character, so you have to escape it when you use it in the value of a variable.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 669.0236 cm
Q
q
1 0 0 1 62.69291 651.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Examples:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 610.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 28.8 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 9.8 Tm /F4 7 Tf 8.4 TL (setenv bootcmd bootm \\$address) Tj T* (setenv addip 'setenv bootargs $bootargs ip=$ipaddr:$serverip:$gatewayip:$netmask:$hostname:$netdev:off') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 577.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (Hush shell scripts) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 535.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .259431 Tw (Here are a few examples for the use of the advanced capabilities of the hush shell in U-Boot environment) Tj T* 0 Tw (variables or scripts:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 309.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 213.6 re B*
Q
q
BT 1 0 0 1 0 194.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( setenv check 'if imi $addr; then echo Image OK; else echo Image corrupted!!; fi') Tj T* (=) Tj (>) Tj ( print check) Tj T* (check=if imi $addr; then echo Image OK; else echo Image corrupted!!; fi) Tj T* (=) Tj (>) Tj ( addr=0x80000000 ; run check) Tj T*  T* (## Checking Image at 80000000 ...) Tj T* (Unknown image format!) Tj T* (Image corrupted!!) Tj T* (=) Tj (>) Tj  T* (=) Tj (>) Tj ( addr=0x80100000 ; run check) Tj T*  T* (## Checking Image at 80100000 ...) Tj T* (   Legacy image found) Tj T* (   Image Name:   autoscr example script) Tj T* (   Created:      2017-08-18   8:19:02 UTC) Tj T* (   Image Type:   PowerPC Linux Script \(uncompressed\)) Tj T* (   Data Size:    157 Bytes = 157 Bytes) Tj T* (   Load Address: 00000000) Tj T* (   Entry Point:  00000000) Tj T* (   Contents:) Tj T* (      Image 0: 149 Bytes = 149 Bytes) Tj T* (   Verifying Checksum ... OK) Tj T* (Image OK) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 263.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.359986 Tw (Instead of "echo Image OK" there could be a command \(sequence\) to boot or otherwise deal with the) Tj T* 0 Tw 1.393984 Tw (correct image; instead of the "echo Image corrupted!!" there could be a command \(sequence\) to \(load) Tj T* 0 Tw (and\) boot an alternative image, etc.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 245.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For Example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 95.02362 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 138 re B*
Q
q
BT 1 0 0 1 0 119 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (=) Tj (>) Tj ( addr1=0x80000000) Tj T* (=) Tj (>) Tj ( addr2=0x80100000) Tj T* (=) Tj (>) Tj ( bootm $addr1 || bootm $addr2 || tftp 0x80000000 beagleboneblack/tbot/source_example.scr) Tj (&) Tj (&) Tj ( imi 0x80000000) Tj T* (Wrong Image Format for bootm command) Tj T* (ERROR: can't get kernel image!) Tj T* (Wrong Image Format for bootm command) Tj T* (ERROR: can't get kernel image!) Tj T* (link up on port 0, speed 100, full duplex) Tj T* (Using ethernet@4a100000 device) Tj T* (TFTP from server 192.168.2.1; our IP address is 192.168.2.10) Tj T* (Filename 'beagleboneblack/tbot/source_example.scr'.) Tj T* (Load address: 0x80000000) Tj T* (Loading: *) Tj /F5 7 Tf 8.4 TL (n) Tj /F4 7 Tf 8.4 TL (#) Tj T* (       215.8 KiB/s) Tj T* (done) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 51 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
208 0 obj
<< /Length 2751 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 633.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 467.6898 129.6 re B*
Q
q
BT 1 0 0 1 0 110.6 Tm 8.4 TL /F4 7 Tf 0 0 0 rg (Bytes transferred = 221 \(dd hex\)) Tj T*  T* (## Checking Image at 80000000 ...) Tj T* (   Legacy image found) Tj T* (   Image Name:   autoscr example script) Tj T* (   Created:      2017-08-18   8:19:02 UTC) Tj T* (   Image Type:   PowerPC Linux Script \(uncompressed\)) Tj T* (   Data Size:    157 Bytes = 157 Bytes) Tj T* (   Load Address: 00000000) Tj T* (   Entry Point:  00000000) Tj T* (   Contents:) Tj T* (      Image 0: 149 Bytes = 149 Bytes) Tj T* (   Verifying Checksum ... OK) Tj T* (=) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 587.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.313798 Tw (This will check if the image at address "addr1" is ok and boot it; if the image is not ok, the alternative) Tj T* 0 Tw .228084 Tw (image at address "addr2" will be checked and booted if it is found to be OK. If both images are missing or) Tj T* 0 Tw (corrupted, a new image will be loaded over TFTP and checked with imi.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 554.2236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (General rules) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 530.2236 cm
Q
q
1 0 0 1 62.69291 530.2236 cm
Q
q
1 0 0 1 62.69291 494.2236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.583555 Tw (If a command line \(or an environment variable executed by a run command\) contains several) Tj T* 0 Tw 1.20748 Tw (commands separated by semicolons, and one of these commands fails, the remaining commands) Tj T* 0 Tw (will still be executed.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 488.2236 cm
Q
q
1 0 0 1 62.69291 452.2236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.049988 Tw (If you execute several variables with one call to run \(i. e. calling run with a list of variables as) Tj T* 0 Tw 1.225984 Tw (arguments\), any failing command will cause run to terminate, i. e. the remaining variables are not) Tj T* 0 Tw (executed.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 452.2236 cm
Q
q
1 0 0 1 62.69291 452.2236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 52 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
209 0 obj
<< /Length 2361 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 747.0236 cm
q
BT 1 0 0 1 0 3 Tm 166.1924 0 Td 18 TL /F3 15 Tf 0 0 0 rg (U-Boot pytest suite) Tj T* -166.1924 0 Td ET
Q
Q
q
1 0 0 1 62.69291 717.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Read more of how to setup test/py in U-Boot source code:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 699.0236 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (http://git.denx.de/?p=u-boot.git;a=blob;f=test/py/README.md) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 666.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (Test py results) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 457.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 7.1 7.1 cm
q
0 0 0 RG
1 w
.960784 .960784 .862745 rg
n -6 -6 516 188.4 re B*
Q
q
BT 1 0 0 1 0 169.4 Tm 8.4 TL /F4 7 Tf 0 0 0 rg ($ PATH=/home/hs/data/Entwicklung/test_py_scripts/hook-scripts:$PATH;PYTHONPATH=/work/hs/tb) Tj T* (ot/u-boot-am335x_evm;./test/py/test.py --bd am335x_evm -s --build-dir .) Tj T* (+u-boot-test-flash am335x_evm na) Tj T* (board type  am335x_evm) Tj T* (No flashing supported yet) Tj T* (========================================================================================= test session starts ==========) Tj T* (================================================================================) Tj T* (platform linux2 -- Python 2.7.8, pytest-3.2.1, py-1.4.34, pluggy-0.4.0) Tj T* (rootdir: $TBOT_BASEDIR/u-boot-am335x_evm/test/py, inifile: pytest.ini) Tj T* (collecting 0 items) Tj T* (collecting 1 item) Tj T* ([...]) Tj T* (Unknown command 'non_existent_cmd' - try 'help') Tj T* (=) Tj (>) Tj  T* (test/py/tests/test_unknown_cmd.py .) Tj T* (test/py/tests/test_ut.py ss) Tj T* (test/py/tests/test_vboot.py s) Tj T*  T* (================================================================================ 74 passed, 20 skipped in 12.71 seconds) Tj T* (================================================================================) Tj T* ($) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 415.4236 cm
q
BT 1 0 0 1 0 4 Tm 212.1549 0 Td 24 TL /F3 20 Tf 0 0 0 rg (links) Tj T* -212.1549 0 Td ET
Q
Q
q
1 0 0 1 62.69291 397.4236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 53 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
210 0 obj
<< /Length 260 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 765.0236 cm
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 2 Tm 116.9849 0 Td 12 TL /F1 10 Tf 0 0 0 rg (U-Boot / beagleboneblack documentation - page 54 / 54) Tj T* -116.9849 0 Td ET
Q
Q
 
endstream
endobj
211 0 obj
<< /Nums [ 0 212 0 R 1 213 0 R 2 214 0 R 3 215 0 R 4 216 0 R 
  5 217 0 R 6 218 0 R 7 219 0 R 8 220 0 R 9 221 0 R 
  10 222 0 R 11 223 0 R 12 224 0 R 13 225 0 R 14 226 0 R 
  15 227 0 R 16 228 0 R 17 229 0 R 18 230 0 R 19 231 0 R 
  20 232 0 R 21 233 0 R 22 234 0 R 23 235 0 R 24 236 0 R 
  25 237 0 R 26 238 0 R 27 239 0 R 28 240 0 R 29 241 0 R 
  30 242 0 R 31 243 0 R 32 244 0 R 33 245 0 R 34 246 0 R 
  35 247 0 R 36 248 0 R 37 249 0 R 38 250 0 R 39 251 0 R 
  40 252 0 R 41 253 0 R 42 254 0 R 43 255 0 R 44 256 0 R 
  45 257 0 R 46 258 0 R 47 259 0 R 48 260 0 R 49 261 0 R 
  50 262 0 R 51 263 0 R 52 264 0 R 53 265 0 R ] >>
endobj
212 0 obj
<< /S /D /St 1 >>
endobj
213 0 obj
<< /S /D /St 2 >>
endobj
214 0 obj
<< /S /D /St 3 >>
endobj
215 0 obj
<< /S /D /St 4 >>
endobj
216 0 obj
<< /S /D /St 5 >>
endobj
217 0 obj
<< /S /D /St 6 >>
endobj
218 0 obj
<< /S /D /St 7 >>
endobj
219 0 obj
<< /S /D /St 8 >>
endobj
220 0 obj
<< /S /D /St 9 >>
endobj
221 0 obj
<< /S /D /St 10 >>
endobj
222 0 obj
<< /S /D /St 11 >>
endobj
223 0 obj
<< /S /D /St 12 >>
endobj
224 0 obj
<< /S /D /St 13 >>
endobj
225 0 obj
<< /S /D /St 14 >>
endobj
226 0 obj
<< /S /D /St 15 >>
endobj
227 0 obj
<< /S /D /St 16 >>
endobj
228 0 obj
<< /S /D /St 17 >>
endobj
229 0 obj
<< /S /D /St 18 >>
endobj
230 0 obj
<< /S /D /St 19 >>
endobj
231 0 obj
<< /S /D /St 20 >>
endobj
232 0 obj
<< /S /D /St 21 >>
endobj
233 0 obj
<< /S /D /St 22 >>
endobj
234 0 obj
<< /S /D /St 23 >>
endobj
235 0 obj
<< /S /D /St 24 >>
endobj
236 0 obj
<< /S /D /St 25 >>
endobj
237 0 obj
<< /S /D /St 26 >>
endobj
238 0 obj
<< /S /D /St 27 >>
endobj
239 0 obj
<< /S /D /St 28 >>
endobj
240 0 obj
<< /S /D /St 29 >>
endobj
241 0 obj
<< /S /D /St 30 >>
endobj
242 0 obj
<< /S /D /St 31 >>
endobj
243 0 obj
<< /S /D /St 32 >>
endobj
244 0 obj
<< /S /D /St 33 >>
endobj
245 0 obj
<< /S /D /St 34 >>
endobj
246 0 obj
<< /S /D /St 35 >>
endobj
247 0 obj
<< /S /D /St 36 >>
endobj
248 0 obj
<< /S /D /St 37 >>
endobj
249 0 obj
<< /S /D /St 38 >>
endobj
250 0 obj
<< /S /D /St 39 >>
endobj
251 0 obj
<< /S /D /St 40 >>
endobj
252 0 obj
<< /S /D /St 41 >>
endobj
253 0 obj
<< /S /D /St 42 >>
endobj
254 0 obj
<< /S /D /St 43 >>
endobj
255 0 obj
<< /S /D /St 44 >>
endobj
256 0 obj
<< /S /D /St 45 >>
endobj
257 0 obj
<< /S /D /St 46 >>
endobj
258 0 obj
<< /S /D /St 47 >>
endobj
259 0 obj
<< /S /D /St 48 >>
endobj
260 0 obj
<< /S /D /St 49 >>
endobj
261 0 obj
<< /S /D /St 50 >>
endobj
262 0 obj
<< /S /D /St 51 >>
endobj
263 0 obj
<< /S /D /St 52 >>
endobj
264 0 obj
<< /S /D /St 53 >>
endobj
265 0 obj
<< /S /D /St 54 >>
endobj
xref
0 266
0000000000 65535 f
0000000075 00000 n
0000000151 00000 n
0000000261 00000 n
0000000376 00000 n
0000000498 00000 n
0000000699 00000 n
0000000884 00000 n
0000001119 00000 n
0000001330 00000 n
0000001516 00000 n
0000001691 00000 n
0000001800 00000 n
0000001985 00000 n
0000002229 00000 n
0000002441 00000 n
0000002653 00000 n
0000002865 00000 n
0000003077 00000 n
0000003196 00000 n
0000003408 00000 n
0000003597 00000 n
0000003786 00000 n
0000003975 00000 n
0000004153 00000 n
0000004334 00000 n
0000004528 00000 n
0000004713 00000 n
0000004986 00000 n
0000007924 00000 n
0000009281 00000 n
0000009557 00000 n
0000009769 00000 n
0000009981 00000 n
0000010193 00000 n
0000010405 00000 n
0000010617 00000 n
0000010893 00000 n
0000011105 00000 n
0000011317 00000 n
0000011529 00000 n
0000011741 00000 n
0000011953 00000 n
0000012165 00000 n
0000012441 00000 n
0000012653 00000 n
0000012865 00000 n
0000013141 00000 n
0000013353 00000 n
0000013565 00000 n
0000013777 00000 n
0000013989 00000 n
0000014201 00000 n
0000014413 00000 n
0000014625 00000 n
0000014837 00000 n
0000015049 00000 n
0000015261 00000 n
0000015619 00000 n
0000015944 00000 n
0000016156 00000 n
0000016368 00000 n
0000016580 00000 n
0000016792 00000 n
0000017004 00000 n
0000017216 00000 n
0000017428 00000 n
0000017640 00000 n
0000017852 00000 n
0000018064 00000 n
0000018276 00000 n
0000018488 00000 n
0000018660 00000 n
0000019018 00000 n
0000019190 00000 n
0000019541 00000 n
0000019753 00000 n
0000019965 00000 n
0000020180 00000 n
0000020411 00000 n
0000020623 00000 n
0000020734 00000 n
0000020981 00000 n
0000021059 00000 n
0000021211 00000 n
0000021334 00000 n
0000021463 00000 n
0000021577 00000 n
0000021730 00000 n
0000021851 00000 n
0000022048 00000 n
0000022179 00000 n
0000022305 00000 n
0000022438 00000 n
0000022594 00000 n
0000022771 00000 n
0000022890 00000 n
0000023006 00000 n
0000023141 00000 n
0000023331 00000 n
0000023499 00000 n
0000023641 00000 n
0000023810 00000 n
0000023970 00000 n
0000024101 00000 n
0000024278 00000 n
0000024420 00000 n
0000024570 00000 n
0000024712 00000 n
0000024850 00000 n
0000024991 00000 n
0000025153 00000 n
0000025301 00000 n
0000025462 00000 n
0000025607 00000 n
0000025796 00000 n
0000025935 00000 n
0000026099 00000 n
0000026247 00000 n
0000026427 00000 n
0000026591 00000 n
0000026763 00000 n
0000026942 00000 n
0000027107 00000 n
0000027286 00000 n
0000027446 00000 n
0000027639 00000 n
0000027784 00000 n
0000027964 00000 n
0000028106 00000 n
0000028298 00000 n
0000028438 00000 n
0000028586 00000 n
0000028735 00000 n
0000028886 00000 n
0000029037 00000 n
0000029194 00000 n
0000029355 00000 n
0000029494 00000 n
0000029673 00000 n
0000029787 00000 n
0000029972 00000 n
0000030107 00000 n
0000030261 00000 n
0000030420 00000 n
0000030573 00000 n
0000030701 00000 n
0000030850 00000 n
0000031000 00000 n
0000031197 00000 n
0000031336 00000 n
0000031468 00000 n
0000031608 00000 n
0000031729 00000 n
0000031897 00000 n
0000032006 00000 n
0000032117 00000 n
0000032572 00000 n
0000037003 00000 n
0000038150 00000 n
0000040666 00000 n
0000042078 00000 n
0000044363 00000 n
0000045468 00000 n
0000049427 00000 n
0000053299 00000 n
0000056624 00000 n
0000058849 00000 n
0000060958 00000 n
0000063197 00000 n
0000064658 00000 n
0000066753 00000 n
0000070205 00000 n
0000073833 00000 n
0000075784 00000 n
0000079825 00000 n
0000081942 00000 n
0000085936 00000 n
0000089806 00000 n
0000092064 00000 n
0000093523 00000 n
0000097942 00000 n
0000099229 00000 n
0000105014 00000 n
0000105567 00000 n
0000107673 00000 n
0000109271 00000 n
0000114307 00000 n
0000117859 00000 n
0000119443 00000 n
0000121440 00000 n
0000126499 00000 n
0000132746 00000 n
0000137637 00000 n
0000143216 00000 n
0000149687 00000 n
0000153524 00000 n
0000156308 00000 n
0000159624 00000 n
0000162212 00000 n
0000165304 00000 n
0000167416 00000 n
0000169463 00000 n
0000172843 00000 n
0000176048 00000 n
0000185377 00000 n
0000195534 00000 n
0000202808 00000 n
0000208184 00000 n
0000210993 00000 n
0000213412 00000 n
0000213729 00000 n
0000214389 00000 n
0000214427 00000 n
0000214465 00000 n
0000214503 00000 n
0000214541 00000 n
0000214579 00000 n
0000214617 00000 n
0000214655 00000 n
0000214693 00000 n
0000214731 00000 n
0000214770 00000 n
0000214809 00000 n
0000214848 00000 n
0000214887 00000 n
0000214926 00000 n
0000214965 00000 n
0000215004 00000 n
0000215043 00000 n
0000215082 00000 n
0000215121 00000 n
0000215160 00000 n
0000215199 00000 n
0000215238 00000 n
0000215277 00000 n
0000215316 00000 n
0000215355 00000 n
0000215394 00000 n
0000215433 00000 n
0000215472 00000 n
0000215511 00000 n
0000215550 00000 n
0000215589 00000 n
0000215628 00000 n
0000215667 00000 n
0000215706 00000 n
0000215745 00000 n
0000215784 00000 n
0000215823 00000 n
0000215862 00000 n
0000215901 00000 n
0000215940 00000 n
0000215979 00000 n
0000216018 00000 n
0000216057 00000 n
0000216096 00000 n
0000216135 00000 n
0000216174 00000 n
0000216213 00000 n
0000216252 00000 n
0000216291 00000 n
0000216330 00000 n
0000216369 00000 n
0000216408 00000 n
0000216447 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(,\330\016\016q`\011j\242E#\3104\210\262r) (,\330\016\016q`\011j\242E#\3104\210\262r)]
 /Info 81 0 R /Root 80 0 R /Size 266 >>
startxref
216486
%%EOF
