tbot now creates events when executing TC. There are standard Events which
get created automatically from tbot, also a TC can create TC specific
Events.

At the end of tbot execution, this events can used to create specific files
through Eventbackends for presenting the testresults.

Eventlist:
==========

Event-ID
log            log content
Boardname      Name of board
BoardnameEnd   End of tests for Boardname
Start          Start of TC
End            End of TC

./src/tc/tc_lab_set_toolchain.py
Toolchain      used Toolchain

src/tc/linux/tc_workfd_apply_patchwork_patches.py:
PW_NR          current patchwork patchnumber
PW_CLEAN       current patchworknumber patch is clean or not
PW_AA          current patchworknumber patch is already applied
PW_APPLY       current patchworknumber patch is applies clean or not

src/tc/tc_lab_compile_uboot.py
UBOOT_DEFCONFIG used U-Boot configuration
UBOOT_SRC_PATH  path, where U-boot source is located

src/tc/uboot/tc_ub_test_py.py
UBOOT_TEST_PY   path to test py result

src/tc/uboot/tc_ub_get_version.py
UBOOT_VERSION   U-Boot/SPL version

src/tc/linux/tc_lx_get_version.py
LINUX_VERSION	Linux version

planned Event backends:
=======================

- DUTS:
  make from the logs tbot collected, DUTS specific textfiles, so the logs
  can integrated into the DULG

- dot graph:
  Use the Eventinformation for creating nice DOT graphics from the test.
  see a raw example:
  src/common/event/dot.py
  Demo Output of the tc_board_smartweb.py TC:
  https://github.com/hsdenx/tbot/blob/event-devel/smartweb_demo.png

- xunit:
  create xunit files for presenting the results in jenkins

- statistic
  use gnuplot for a ploting some TC statistic results.
  src/common/event/statisitic_plot.py

- cdash
  notification to a central server of the testresults, push principle
  src/common/event/dashboard.py
  http://xeidos.ddns.net/tests/test_db_auslesen.php  

- kernel CI
  adapt to a format, so the testresults can be presented at kernel CI
  (just an idea...)
