# tbot configuration
# for the shc board in the denx vlab
self.boardname = 'etamin'
self.boardlabname = 'dxr2'
self.boardlabpowername = 'dxr2'
self.tftpboardname = 'dxr2'
self.labprompt='ttbott'
self.debug=False
self.debugstatus=True
self.ip='pollux-vdsl.dyndns.org'
self.user='hs'
self.accept_all=True
self.keepalivetimeout=1
self.channel_timeout=0.5
self.loglevel='INFO'
self.lab_api='ssh_std'
self.wdt_timeout = '5000'

#include lab api
sys.path.append(self.workdir + "/src/lab_api")
from ssh_std import tbot_lab_api

# set connect testcase (as it is with kermit, not with connect)
self.tc_lab_denx_connect_to_board_tc = 'tc_workfd_connect_with_kermit.py'

#lab_api u-boot
self.uboot_prompt = 'U-Boot#'
self.linux_prompt = 'ttbott'

#retry for read line
self.read_line_retry=1

#variables used in testcases
self.board_has_debugger = 1
self.lab_bdi_upd_uboot_bdi_prompt = 'AM335x-EVM>'
self.lab_bdi_upd_uboot_bdi_cmd = 'telnet bdi19'

self.tc_workfd_work_dir = '/work/hs/tbot'
self.setenv_name = 'Heiko'
self.setenv_value = 'Schocher'
self.ub_load_board_env_addr = '0x80100000'
self.tc_lab_get_uboot_source_git_repo = "/home/hs/zug/u-boot-ccp"
self.tc_lab_get_uboot_source_git_branch = "20160212-denx-uboot-etamin-devel"
self.tc_lab_get_uboot_source_git_branch = "denx-uboot-etamin-devel"
self.tc_workfd_connect_with_kermit_ssh = 'hs@lena'

#uboot DUTS variables
self.uboot_get_parameter_file_list = ['.config', 'include/configs/etamin.h', 'include/configs/siemens-am33x-common.h']
self.tc_ub_i2c_help_with_bus = 'yes'

#uboot ubi testcase variables
self.tc_ub_ubi_prep_offset = '4096'
self.tc_ub_ubi_prep_partname = 'rootfs'
self.tc_ub_ubi_load_name = 'rootfs_a'
self.tc_ub_ubi_create_vol_sz = 'a000000'

self.tc_workfd_generate_random_file_name = '/tftpboot/dxr2/tbot/ubi_random'
self.tc_workfd_generate_random_file_length = '2M'
# fix nand params
self.tc_ubi_min_io_size = '4096'
self.tc_ubi_max_leb_cnt = '5000'
self.tc_ubi_leb_size = '516096'
self.tc_ub_ubi_write_addr = '80100000'
self.tc_ub_ubi_read_addr = '85000000'

# set DFU variables for tc_ub_dfu_random.py
self.tc_ub_dfu_rand_size = '31457280'
self.tc_ub_dfu_rand_ubcmd = 'dfu 0 mtd 0'
self.tc_ub_dfu_dfu_util_alt_setting = 'over_border'
self.tc_ub_dfu_dfu_util_path = "none"
self.tc_ub_dfu_dfu_util_ssh = "root@ts8"

#must be the same as the rootfs nfs path
self.tc_board_dxr2_ub_ubi_rootfs_randomfile_path = '/opt/eldk-5.5/armv7a-hf/rootfs-sato-sdk/home/hs/ubi_random'

#linux testcases
self.tc_lab_get_linux_source_git_repo = 'https://hsdenx@github.com/siemens/linux-ccp.git'
self.tc_lab_get_linux_source_git_repo_user = 'hsdenx'
self.tc_lab_get_linux_source_git_branch = 'ccp-v3.18.10-draco'
self.tc_lab_get_linux_source_git_branch = 'denx-20160113-ccp-v3.18.10-draco-devel'
self.tc_lab_get_linux_source_git_branch = 'denx-v4.4-stable-draco-devel'
self.tc_lab_get_linux_source_git_reference = '/home/git/linux.git'
self.tc_lab_apply_patches_dir = 'none'
self.tc_workfd_apply_local_patches_dir = '/work/hs/tbot/patches/dxr2_linux_patches'

self.tc_lab_get_linux_source_git_repo = '/home/hs/zug/dxr2/linux-stable'
self.tc_lab_get_linux_source_git_repo_user = 'hsdenx'
self.tc_lab_get_linux_source_git_branch = 'denx-v4.4-stable-draco-devel'
self.tc_lab_get_linux_source_git_reference = '/home/git/linux.git'
self.tc_lab_apply_patches_dir = 'none'
self.tc_workfd_apply_local_patches_dir = '/work/hs/tbot/patches/dxr2_linux_patches'

self.tc_lx_create_reg_file_name = 'src/files/dxr2_etamin_pinmux.reg'
self.tc_lx_create_reg_file_start = '0x44e10000'
self.tc_lx_create_reg_file_stop = '0x44e11444'
self.tc_lx_readreg_mask = 0xffffffff

self.tc_ubi_mtd_dev = '/dev/mtd13'
self.tc_ubi_vid_hdr_offset = '4096'
